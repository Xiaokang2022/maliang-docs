{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"maliang <code>3.0.x</code>","text":"<p> \u5b57\u6570 281 \u4e2a \u00a0 \u9605\u8bfb\u65f6\u95f4 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p>\u6e29\u99a8\u63d0\u793a</p> <p>\u8fd9\u91cc\u662f <code>maliang 3.0.x</code> \u7cfb\u5217\u7248\u672c\u7684\u6559\u7a0b\u548c\u6587\u6863\u7f51\u7ad9\uff0c\u8bf7\u8d70\u9519\u7684\u670b\u53cb\u5728\u7f51\u9875\u5de6\u4e0a\u89d2\u5207\u6362\u7248\u672c\u54c8\u2026\u2026\ud83d\ude05</p> <ul> <li> \u60a8\u53ef\u4ee5\u901a\u8fc7\u6309\u4e0b\u5feb\u6377\u952e Left \u548c Right \u6765\u5feb\u901f\u8df3\u8f6c\u5230\u4e0a\u4e00\u9875\u548c\u4e0b\u4e00\u9875\uff01\ud83c\udf89</li> <li> \u60a8\u53ef\u4ee5\u901a\u8fc7\u70b9\u51fb\u9875\u9762\u9876\u90e8\u641c\u7d22\u680f\u6216\u6309\u4e0b\u5feb\u6377\u952e / \u6765\u5feb\u901f\u67e5\u627e\u60f3\u8981\u7684\u5185\u5bb9\uff01\u2728</li> <li> \u60a8\u53ef\u4ee5\u901a\u8fc7\u70b9\u51fb\u9875\u9762\u9876\u90e8\u4e3b\u9898\u6309\u94ae\u6765\u5207\u6362\u7f51\u7ad9\u4e3b\u9898\uff0c\u4e0d\u540c\u4e3b\u9898\u5e26\u6765\u4e0d\u540c\u7684\u5fc3\u60c5\uff01\ud83c\udfa8</li> <li> \u60a8\u53ef\u4ee5\u5728\u9605\u8bfb\u6559\u7a0b\u548c\u67e5\u9605\u6587\u6863\u7684\u65f6\u5019\uff0c\u70b9\u51fb\u9876\u90e8\u7684\u97f3\u4e50\u64ad\u653e\u5668\u4eab\u53d7\u4e00\u4e0b\u4f5c\u8005\u7cbe\u9009\u7684\u7eaf\u97f3\u4e50\uff0c\u81ea\u52a8\u5faa\u73af\u64ad\u653e\uff01\ud83c\udf88</li> <li> \u60a8\u53ef\u4ee5\u5728\u5927\u90e8\u5206\u7684\u9875\u9762\u5e95\u90e8\u627e\u5230\u8bc4\u8bba\u533a\uff0c\u767b\u5f55 GitHub \u8d26\u53f7\u4e4b\u540e\u5c31\u53ef\u4ee5\u516c\u5f00\u53d1\u8868\u60a8\u7684\u60f3\u6cd5\uff01\ud83d\udc40</li> </ul> <p>\u6700\u540e\uff0c\u795d\u60a8\u9605\u8bfb\u6109\u5feb\uff01\u2764\ufe0f</p> <p> \u672c\u7ad9\u5171\u6709 <code>20</code> \u4e2a\u9875\u9762\uff0c<code>16562</code> \u4e2a\u5b57\uff0c<code>605</code> \u884c\u4ee3\u7801\uff0c\u4ee5\u53ca <code>122</code> \u5f20\u56fe\u7247 </p> <p> \u8fd4\u56de\u4e3b\u7ad9  \u6700\u65b0\u5185\u5bb9</p>"},{"location":"tags/","title":"\u6807\u7b7e\u7d22\u5f15","text":"<p> \u5b57\u6570 0 \u4e2a \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p>"},{"location":"tags/#tag:\u4fe1\u606f\u5c55\u793a","title":"\u4fe1\u606f\u5c55\u793a","text":"<ul> <li>            3.1 \u4fe1\u606f\u7c7b\u63a7\u4ef6          </li> </ul>"},{"location":"tags/#tag:\u5165\u95e8","title":"\u5165\u95e8","text":"<ul> <li>            1.1 \u73af\u5883\u642d\u5efa          </li> <li>            1.2 \u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684\u754c\u9762          </li> </ul>"},{"location":"tags/#tag:\u529f\u80fd","title":"\u529f\u80fd","text":"<ul> <li>            3.2 \u529f\u80fd\u7c7b\u63a7\u4ef6          </li> </ul>"},{"location":"tags/#tag:\u52a8\u753b","title":"\u52a8\u753b","text":"<ul> <li>            4.1 \u57fa\u7840\u52a8\u753b          </li> <li>            4.2 \u63a7\u5236\u51fd\u6570          </li> <li>            4.3 \u81ea\u5b9a\u4e49\u52a8\u753b          </li> </ul>"},{"location":"tags/#tag:\u539f\u751f\u52a8\u753b","title":"\u539f\u751f\u52a8\u753b","text":"<ul> <li>            4.1 \u57fa\u7840\u52a8\u753b          </li> </ul>"},{"location":"tags/#tag:\u56fe\u7247","title":"\u56fe\u7247","text":"<ul> <li>            3.1 \u4fe1\u606f\u7c7b\u63a7\u4ef6          </li> </ul>"},{"location":"tags/#tag:\u5b89\u88c5","title":"\u5b89\u88c5","text":"<ul> <li>            1.1 \u73af\u5883\u642d\u5efa          </li> </ul>"},{"location":"tags/#tag:\u5bb9\u5668\u63a7\u4ef6","title":"\u5bb9\u5668\u63a7\u4ef6","text":"<ul> <li>            2.1 \u7a97\u53e3\u5bb9\u5668\u63a7\u4ef6          </li> <li>            2.2 \u753b\u5e03\u5bb9\u5668\u63a7\u4ef6          </li> </ul>"},{"location":"tags/#tag:\u63a7\u4ef6","title":"\u63a7\u4ef6","text":"<ul> <li>            2.1 \u7a97\u53e3\u5bb9\u5668\u63a7\u4ef6          </li> <li>            2.2 \u753b\u5e03\u5bb9\u5668\u63a7\u4ef6          </li> <li>            3.1 \u4fe1\u606f\u7c7b\u63a7\u4ef6          </li> <li>            3.2 \u529f\u80fd\u7c7b\u63a7\u4ef6          </li> <li>            3.3 \u6587\u672c\u7c7b\u63a7\u4ef6          </li> </ul>"},{"location":"tags/#tag:\u63a7\u5236\u51fd\u6570","title":"\u63a7\u5236\u51fd\u6570","text":"<ul> <li>            4.1 \u57fa\u7840\u52a8\u753b          </li> <li>            4.2 \u63a7\u5236\u51fd\u6570          </li> </ul>"},{"location":"tags/#tag:\u6587\u672c","title":"\u6587\u672c","text":"<ul> <li>            3.1 \u4fe1\u606f\u7c7b\u63a7\u4ef6          </li> <li>            3.3 \u6587\u672c\u7c7b\u63a7\u4ef6          </li> </ul>"},{"location":"tags/#tag:\u73af\u5883\u642d\u5efa","title":"\u73af\u5883\u642d\u5efa","text":"<ul> <li>            1.1 \u73af\u5883\u642d\u5efa          </li> </ul>"},{"location":"tags/#tag:\u753b\u5e03","title":"\u753b\u5e03","text":"<ul> <li>            2.2 \u753b\u5e03\u5bb9\u5668\u63a7\u4ef6          </li> </ul>"},{"location":"tags/#tag:\u7a97\u53e3","title":"\u7a97\u53e3","text":"<ul> <li>            2.1 \u7a97\u53e3\u5bb9\u5668\u63a7\u4ef6          </li> </ul>"},{"location":"tags/#tag:\u7f29\u653e","title":"\u7f29\u653e","text":"<ul> <li>            2.2 \u753b\u5e03\u5bb9\u5668\u63a7\u4ef6          </li> </ul>"},{"location":"tags/#tag:\u81ea\u5b9a\u4e49","title":"\u81ea\u5b9a\u4e49","text":"<ul> <li>            4.2 \u63a7\u5236\u51fd\u6570          </li> <li>            4.3 \u81ea\u5b9a\u4e49\u52a8\u753b          </li> </ul>"},{"location":"tags/#tag:\u989d\u5916\u5185\u5bb9","title":"\u989d\u5916\u5185\u5bb9","text":"<ul> <li>            1.3 \u6846\u67b6\u6982\u8ff0          </li> </ul>"},{"location":"documents/","title":"maliang","text":"<p> \u5b57\u6570 11 \u4e2a \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p> \u6e90\u4ee3\u7801\uff1a<code>maliang/__init__.py</code></p> <p>A lightweight UI framework based on <code>tkinter</code> with all UI drawn in <code>Canvas</code>.</p> <ul> <li>Website: https://xiaokang2022.github.io/maliang/</li> <li>GitHub: Xiaokang2022/maliang</li> <li>PyPI: https://pypi.org/project/maliang/</li> </ul> <p>If you \u2764\ufe0f this package, please leave your \u2b50 to us, thank you very much!</p> <p> </p> <p>\u6a21\u5757\uff1a</p> <ul> <li> <code>animation</code>           \u2013            <p>A subpackage that provides animation-related features.</p> </li> <li> <code>color</code>           \u2013            <p>A subpackage that provides color-related features.</p> </li> <li> <code>core</code>           \u2013            <p>The core code, you can see the general framework here.</p> </li> <li> <code>media</code>           \u2013            <p>Extension package of maliang to play media files</p> </li> <li> <code>mpl</code>           \u2013            <p>Extension package of maliang for matplotlib</p> </li> <li> <code>standard</code>           \u2013            <p>All standard things.</p> </li> <li> <code>theme</code>           \u2013            <p>A subpackage that provides theme-related features.</p> </li> <li> <code>three</code>           \u2013            <p>Extension package of maliang for simple 3D drawings</p> </li> <li> <code>toolbox</code>           \u2013            <p>Some practical tools</p> </li> </ul> <p>\u7c7b\uff1a</p> <ul> <li> <code>Env</code>           \u2013            <p>Configurations for default environment values.</p> </li> <li> <code>Font</code>           \u2013            <p>Configurations for default font.</p> </li> <li> <code>Constant</code>           \u2013            <p>All Constants.</p> </li> <li> <code>Tk</code>           \u2013            <p>Main window.</p> </li> <li> <code>Toplevel</code>           \u2013            <p>Toplevel window.</p> </li> <li> <code>Canvas</code>           \u2013            <p>Main contrainer: Canvas.</p> </li> <li> <code>TkMessage</code>           \u2013            <p>Message pop-up</p> </li> <li> <code>TkColorChooser</code>           \u2013            <p>Color chooser pop-up</p> </li> <li> <code>TkFontChooser</code>           \u2013            <p>Font chooser pop-up</p> </li> <li> <code>Text</code>           \u2013            <p>Text widget, generally used to display plain text</p> </li> <li> <code>Image</code>           \u2013            <p>Image widget, generally used to display normal still image</p> </li> <li> <code>Label</code>           \u2013            <p>Label widget, which is generally used to display key information</p> </li> <li> <code>Button</code>           \u2013            <p>Button widget, typically used to trigger a function</p> </li> <li> <code>Switch</code>           \u2013            <p>Switch widget, typically used to control the turning of a function on and off</p> </li> <li> <code>InputBox</code>           \u2013            <p>Input box widget, generally used to enter certain information on a single line</p> </li> <li> <code>CheckBox</code>           \u2013            <p>Checkbox button widget, generally used to check some options</p> </li> <li> <code>ToggleButton</code>           \u2013            <p>A button that can display information and switch statuses</p> </li> <li> <code>RadioBox</code>           \u2013            <p>Radio button widget, generally used to select one of several options</p> </li> <li> <code>ProgressBar</code>           \u2013            <p>Progress bar widget, typically used to show the progress of an event</p> </li> <li> <code>UnderlineButton</code>           \u2013            <p>Underline button, generally used to display web links</p> </li> <li> <code>HighlightButton</code>           \u2013            <p>Highlight button, no outline, which added a highlight effect</p> </li> <li> <code>IconButton</code>           \u2013            <p>A button with an icon on the left side</p> </li> <li> <code>Slider</code>           \u2013            <p>A slider for visually resizing values</p> </li> <li> <code>SegmentedButton</code>           \u2013            <p>A segmented button that can be used to toggle between multiple states</p> </li> <li> <code>SpinBox</code>           \u2013            <p>A widget that makes it easy to enter numeric type data</p> </li> <li> <code>OptionButton</code>           \u2013            <p>A button that has many options to choose</p> </li> <li> <code>ComboBox</code>           \u2013            <p>An input box that can provide several options</p> </li> <li> <code>Spinner</code>           \u2013            <p>Spinners visually communicate that something is processing</p> </li> <li> <code>Tooltip</code>           \u2013            <p>A tooltip that can display additional information</p> </li> <li> <code>PhotoImage</code>           \u2013            <p>Pillow version of <code>tkinter.PhotoImage</code>.</p> </li> </ul> <p>\u51fd\u6570\uff1a</p> <ul> <li> <code>reset</code>             \u2013              <p>Reset all configuration options.</p> </li> </ul>"},{"location":"documents/#maliang.Env","title":"Env","text":"<p>Configurations for default environment values.</p> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>reset</code>             \u2013              <p>Reset all configuration options.</p> </li> <li> <code>get_default_system</code>             \u2013              <p>Get the system of environment.</p> </li> </ul>"},{"location":"documents/#maliang.Env.reset","title":"reset  <code>classmethod</code>","text":"<pre><code>reset() -&gt; None\n</code></pre> <p>Reset all configuration options.</p>"},{"location":"documents/#maliang.Env.get_default_system","title":"get_default_system  <code>staticmethod</code>","text":"<pre><code>get_default_system() -&gt; str\n</code></pre> <p>Get the system of environment.</p>"},{"location":"documents/#maliang.Font","title":"Font","text":"<p>Configurations for default font.</p> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>reset</code>             \u2013              <p>Reset all configuration options.</p> </li> <li> <code>get_default_family</code>             \u2013              <p>Get the default font family.</p> </li> </ul>"},{"location":"documents/#maliang.Font.reset","title":"reset  <code>classmethod</code>","text":"<pre><code>reset() -&gt; None\n</code></pre> <p>Reset all configuration options.</p>"},{"location":"documents/#maliang.Font.get_default_family","title":"get_default_family  <code>staticmethod</code>","text":"<pre><code>get_default_family() -&gt; str\n</code></pre> <p>Get the default font family.</p>"},{"location":"documents/#maliang.Constant","title":"Constant","text":"<p>All Constants.</p> <p>\u5c5e\u6027\uff1a</p> <ul> <li> <code>GOLDEN_RATIO</code>               (<code>typing.Final[float]</code>)           \u2013            <p>The golden ratio, which is needed to automatically calculate the color</p> </li> <li> <code>PREDEFINED_EVENTS</code>               (<code>typing.Final[tuple[str, ...]]</code>)           \u2013            <p>Predefined events that can be used directly without registration. It is</p> </li> <li> <code>PREDEFINED_VIRTUAL_EVENTS</code>               (<code>typing.Final[tuple[str, ...]]</code>)           \u2013            <p>Predefined virtual events that can be used directly without</p> </li> </ul>"},{"location":"documents/#maliang.Constant.GOLDEN_RATIO","title":"GOLDEN_RATIO  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>GOLDEN_RATIO: typing.Final[float] = math.sqrt(5) - 1 / 2\n</code></pre> <p>The golden ratio, which is needed to automatically calculate the color of widget on <code>\"disabled\"</code> state. It is READ-ONLY.</p>"},{"location":"documents/#maliang.Constant.PREDEFINED_EVENTS","title":"PREDEFINED_EVENTS  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>PREDEFINED_EVENTS: typing.Final[tuple[str, ...]] = (\n    \"&lt;KeyPress&gt;\",\n    \"&lt;KeyRelease&gt;\",\n    \"&lt;Button-1&gt;\",\n    \"&lt;Button-2&gt;\",\n    \"&lt;Button-3&gt;\",\n    \"&lt;Button-4&gt;\",\n    \"&lt;Button-5&gt;\",\n    \"&lt;ButtonRelease-1&gt;\",\n    \"&lt;ButtonRelease-2&gt;\",\n    \"&lt;ButtonRelease-3&gt;\",\n    \"&lt;MouseWheel&gt;\",\n    \"&lt;Motion&gt;\",\n    \"&lt;B1-Motion&gt;\",\n    \"&lt;B2-Motion&gt;\",\n    \"&lt;B3-Motion&gt;\",\n    \"&lt;Configure&gt;\",\n)\n</code></pre> <p>Predefined events that can be used directly without registration. It is READ-ONLY.</p>"},{"location":"documents/#maliang.Constant.PREDEFINED_VIRTUAL_EVENTS","title":"PREDEFINED_VIRTUAL_EVENTS  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>PREDEFINED_VIRTUAL_EVENTS: typing.Final[tuple[str, ...]] = (\n    \"&lt;&lt;Copy&gt;&gt;\",\n    \"&lt;&lt;Paste&gt;&gt;\",\n    \"&lt;&lt;Cut&gt;&gt;\",\n    \"&lt;&lt;SelectAll&gt;&gt;\",\n    \"&lt;&lt;Redo&gt;&gt;\",\n    \"&lt;&lt;Undo&gt;&gt;\",\n)\n</code></pre> <p>Predefined virtual events that can be used directly without registration. It is READ-ONLY.</p>"},{"location":"documents/#maliang.Tk","title":"Tk","text":"<pre><code>Tk(\n    size: tuple[int, int] = (1280, 720),\n    position: tuple[int, int] | None = None,\n    *,\n    title: str | None = None,\n    icon: str | enhanced.PhotoImage | None = None,\n    **kwargs,\n)\n</code></pre> <p>               Bases: <code>tkinter.Tk</code>, <code>Misc</code></p> <p>Main window.</p> <p>In general, there is only one main window. But after destroying it, another one can be created.</p> <ul> <li><code>size</code>: size of the window</li> <li><code>position</code>: position of the window, based on the upper left (nw) corner. And negative numbers are based on the bottom right (se) corner.</li> <li><code>title</code>: title of the window, default value is <code>\"tk\"</code></li> <li><code>icon</code>: icon of the window, default value is the icon of tk</li> <li><code>**kwargs</code>: compatible with other parameters of class <code>tkinter.Tk</code></li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>theme</code>             \u2013              <p>Change the color theme of the window</p> </li> <li> <code>geometry</code>             \u2013              <p>Change the size and position of the window and return the current</p> </li> <li> <code>center</code>             \u2013              <p>Center the container</p> </li> <li> <code>icon</code>             \u2013              <p>Set the icon of the window.</p> </li> <li> <code>alpha</code>             \u2013              <p>Set or get the transparency of the window</p> </li> <li> <code>topmost</code>             \u2013              <p>Set or get whether the window is pinned or not</p> </li> <li> <code>fullscreen</code>             \u2013              <p>Set or get whether the window is full-screen.</p> </li> <li> <code>toolwindow</code>             \u2013              <p>Set or get whether the window is tool-window.</p> </li> <li> <code>transparentcolor</code>             \u2013              <p>Set or get the penetration color of the window.</p> </li> <li> <code>modified</code>             \u2013              <p>Set or get whether the window is modified.</p> </li> <li> <code>transparent</code>             \u2013              <p>Set or get whether the window is transparent.</p> </li> <li> <code>destroy</code>             \u2013              <p>Destroy this and all descendants widgets.</p> </li> <li> <code>at_exit</code>             \u2013              <p>Set a function that will be called when the window is closed.</p> </li> </ul> <p>\u5c5e\u6027\uff1a</p> <ul> <li> <code>ratios</code>               (<code>tuple[float, float]</code>)           \u2013            <p>Return the aspect zoom ratio of the container.</p> </li> </ul>"},{"location":"documents/#maliang.Tk.ratios","title":"ratios  <code>cached</code> <code>property</code>","text":"<pre><code>ratios: tuple[float, float]\n</code></pre> <p>Return the aspect zoom ratio of the container.</p>"},{"location":"documents/#maliang.Tk.theme","title":"theme","text":"<pre><code>theme(\n    value: typing.Literal[\"light\", \"dark\"],\n    *,\n    include_children: bool = True,\n    include_canvases: bool = True,\n) -&gt; None\n</code></pre> <p>Change the color theme of the window</p> <ul> <li><code>value</code>: theme name</li> <li><code>include_children</code>: wether include its children, like Toplevel</li> <li><code>include_canvases</code>: wether include its canvases</li> </ul>"},{"location":"documents/#maliang.Tk.geometry","title":"geometry","text":"<pre><code>geometry(\n    *, size: tuple[int, int] | None = None, position: tuple[int, int] | None = None\n) -&gt; tuple[int, int, int, int] | None\n</code></pre> <p>Change the size and position of the window and return the current size and position of the window.</p> <ul> <li><code>size</code>: the size of the window, if it is None, does not change anything</li> <li><code>position</code>: the position of the window, if it is None, does not change anything</li> </ul> <p>If you want to use <code>tkinter.Tk.geometry</code>, please use <code>tkinter.Tk.wm_geometry</code> instead.</p>"},{"location":"documents/#maliang.Tk.center","title":"center","text":"<pre><code>center(*, refer: tkinter.Misc | None = None) -&gt; None\n</code></pre> <p>Center the container</p> <p><code>refer</code>: The area of the reference widget, if it is None, means that the reference area is the entire screen.</p>"},{"location":"documents/#maliang.Tk.icon","title":"icon","text":"<pre><code>icon(value: str | enhanced.PhotoImage) -&gt; None\n</code></pre> <p>Set the icon of the window.</p> <ul> <li><code>value</code>: the icon</li> </ul>"},{"location":"documents/#maliang.Tk.alpha","title":"alpha","text":"<pre><code>alpha(value: float | None = None) -&gt; float | None\n</code></pre> <p>Set or get the transparency of the window</p> <ul> <li><code>value</code>: the transparency of the window, range is 0~1</li> </ul>"},{"location":"documents/#maliang.Tk.topmost","title":"topmost","text":"<pre><code>topmost(value: bool | None = True) -&gt; bool | None\n</code></pre> <p>Set or get whether the window is pinned or not</p> <ul> <li><code>value</code>: indicate whether the window is topmost</li> </ul>"},{"location":"documents/#maliang.Tk.fullscreen","title":"fullscreen","text":"<pre><code>fullscreen(value: bool | None = True) -&gt; bool | None\n</code></pre> <p>Set or get whether the window is full-screen.</p> <ul> <li><code>value</code>: indicate whether the window is full-screen</li> </ul> <p>The method should be called at the end of the code, or after some time after the program has started.</p>"},{"location":"documents/#maliang.Tk.toolwindow","title":"toolwindow","text":"<pre><code>toolwindow(value: bool | None = True) -&gt; bool | None\n</code></pre> <p>Set or get whether the window is tool-window.</p> <ul> <li><code>value</code>: indicate whether the window is tool-window</li> </ul> <p>This method only works on Windows!</p>"},{"location":"documents/#maliang.Tk.transparentcolor","title":"transparentcolor","text":"<pre><code>transparentcolor(value: str | None = None) -&gt; str | None\n</code></pre> <p>Set or get the penetration color of the window.</p> <ul> <li><code>value</code>: the penetration color of the window</li> </ul> <p>This method only works on Windows!</p>"},{"location":"documents/#maliang.Tk.modified","title":"modified","text":"<pre><code>modified(value: bool | None = None) -&gt; bool | None\n</code></pre> <p>Set or get whether the window is modified.</p> <ul> <li><code>value</code>: indicate whether the window is modified</li> </ul> <p>This method only works on macOS!</p>"},{"location":"documents/#maliang.Tk.transparent","title":"transparent","text":"<pre><code>transparent(value: bool | None = None) -&gt; bool | None\n</code></pre> <p>Set or get whether the window is transparent.</p> <ul> <li><code>value</code>: indicate whether the window is transparent</li> </ul> <p>This method only works on macOS!</p>"},{"location":"documents/#maliang.Tk.destroy","title":"destroy","text":"<pre><code>destroy() -&gt; None\n</code></pre> <p>Destroy this and all descendants widgets.</p>"},{"location":"documents/#maliang.Tk.at_exit","title":"at_exit","text":"<pre><code>at_exit(command: collections.abc.Callable[[], typing.Any], *, ensure_destroy: bool = True) -&gt; None\n</code></pre> <p>Set a function that will be called when the window is closed.</p> <ul> <li><code>command</code>: the function that was called</li> <li><code>ensure_destroy</code>: whether the window is guaranteed to be closed</li> </ul>"},{"location":"documents/#maliang.Toplevel","title":"Toplevel","text":"<pre><code>Toplevel(\n    master: Tk | Toplevel | None = None,\n    size: tuple[int, int] = (960, 540),\n    position: tuple[int, int] | None = None,\n    *,\n    title: str | None = None,\n    icon: str | enhanced.PhotoImage | None = None,\n    grab: bool = False,\n    focus: bool = True,\n    **kwargs,\n)\n</code></pre> <p>               Bases: <code>tkinter.Toplevel</code>, <code>Tk</code>, <code>Misc</code></p> <p>Toplevel window.</p> <p>It can be used as a pop-up window, or it can be customized to put anything you want to show.</p> <ul> <li><code>master</code>: parent widget</li> <li><code>size</code>: size of the window, default value is 960x540(px)</li> <li><code>position</code>: position of the window, default value indicates random</li> <li><code>title</code>: title of window, default is the same as title of master</li> <li><code>icon</code>: icon of the window, default is the same as title of master</li> <li><code>grab</code>: set grab for this window</li> <li><code>focus</code>: whether direct input focus to this window</li> <li><code>**kwargs</code>: compatible with other parameters of class <code>tkinter.Toplevel</code></li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>destroy</code>             \u2013              <p>Destroy this and all descendants widgets.</p> </li> </ul>"},{"location":"documents/#maliang.Toplevel.destroy","title":"destroy","text":"<pre><code>destroy() -&gt; None\n</code></pre> <p>Destroy this and all descendants widgets.</p>"},{"location":"documents/#maliang.Canvas","title":"Canvas","text":"<pre><code>Canvas(\n    master: Tk | Toplevel | Canvas | None = None,\n    *,\n    expand: typing.Literal[\"\", \"x\", \"y\", \"xy\"] = \"xy\",\n    auto_zoom: bool = False,\n    keep_ratio: typing.Literal[\"min\", \"max\"] | None = None,\n    free_anchor: bool = False,\n    auto_update: bool | None = None,\n    zoom_all_items: bool = False,\n    **kwargs,\n)\n</code></pre> <p>               Bases: <code>tkinter.Canvas</code>, <code>Misc</code></p> <p>Main contrainer: Canvas.</p> <p>The parent widget of all virtual widgets is <code>Canvas</code>.</p> <ul> <li><code>master</code>: parent widget</li> <li><code>expand</code>: the mode of expand, <code>x</code> is horizontal, and <code>y</code> is vertical</li> <li><code>auto_zoom</code>: whether or not to scale its items automatically</li> <li><code>keep_ratio</code>: the mode of aspect ratio, <code>min</code> follows the minimum value, <code>max</code> follows the maximum value</li> <li><code>free_anchor</code>: whether the anchor point is free-floating</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>zoom_all_items</code>: (Experimental) whether or not to scale its all items</li> <li><code>kwargs</code>: compatible with other parameters of class <code>tkinter.Canvas</code></li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>theme</code>             \u2013              <p>Change the color theme of the Canvas and its items</p> </li> <li> <code>zoom</code>             \u2013              <p>Resize and position the <code>Canvas</code> based on the relevant parameters.</p> </li> <li> <code>destroy</code>             \u2013              <p>Destroy this and all descendants widgets.</p> </li> <li> <code>clear</code>             \u2013              <p>Clear all things in the Canvas.</p> </li> <li> <code>create_text</code>             \u2013              <p>Create text with coordinates x, y.</p> </li> <li> <code>on_motion</code>             \u2013              <p>Events to move the mouse</p> </li> <li> <code>on_click</code>             \u2013              <p>Events to active the mouse</p> </li> <li> <code>on_release</code>             \u2013              <p>Events to release the mouse</p> </li> <li> <code>on_wheel</code>             \u2013              <p>Events to scroll the mouse wheel</p> </li> <li> <code>on_key_press</code>             \u2013              <p>Events for typing</p> </li> <li> <code>on_key_release</code>             \u2013              <p>Events for typing</p> </li> <li> <code>register_event</code>             \u2013              <p>Register a event to process.</p> </li> </ul> <p>\u5c5e\u6027\uff1a</p> <ul> <li> <code>ratios</code>               (<code>tuple[float, float]</code>)           \u2013            <p>Return the aspect zoom ratio of the widget.</p> </li> </ul>"},{"location":"documents/#maliang.Canvas.ratios","title":"ratios  <code>cached</code> <code>property</code>","text":"<pre><code>ratios: tuple[float, float]\n</code></pre> <p>Return the aspect zoom ratio of the widget.</p>"},{"location":"documents/#maliang.Canvas.theme","title":"theme","text":"<pre><code>theme(value: typing.Literal['light', 'dark']) -&gt; None\n</code></pre> <p>Change the color theme of the Canvas and its items</p> <ul> <li><code>value</code>: theme name</li> </ul>"},{"location":"documents/#maliang.Canvas.zoom","title":"zoom","text":"<pre><code>zoom() -&gt; None\n</code></pre> <p>Resize and position the <code>Canvas</code> based on the relevant parameters.</p> <p>This method only works for Canvas with Place layout.</p>"},{"location":"documents/#maliang.Canvas.destroy","title":"destroy","text":"<pre><code>destroy() -&gt; None\n</code></pre> <p>Destroy this and all descendants widgets.</p>"},{"location":"documents/#maliang.Canvas.clear","title":"clear","text":"<pre><code>clear() -&gt; None\n</code></pre> <p>Clear all things in the Canvas.</p>"},{"location":"documents/#maliang.Canvas.create_text","title":"create_text","text":"<pre><code>create_text(x: float, y: float, /, *args, **kwargs) -&gt; int\n</code></pre> <p>Create text with coordinates x, y.</p>"},{"location":"documents/#maliang.Canvas.on_motion","title":"on_motion","text":"<pre><code>on_motion(event: tkinter.Event, name: str) -&gt; None\n</code></pre> <p>Events to move the mouse</p>"},{"location":"documents/#maliang.Canvas.on_click","title":"on_click","text":"<pre><code>on_click(event: tkinter.Event, name: str) -&gt; None\n</code></pre> <p>Events to active the mouse</p>"},{"location":"documents/#maliang.Canvas.on_release","title":"on_release","text":"<pre><code>on_release(event: tkinter.Event, name: str) -&gt; None\n</code></pre> <p>Events to release the mouse</p>"},{"location":"documents/#maliang.Canvas.on_wheel","title":"on_wheel","text":"<pre><code>on_wheel(event: tkinter.Event, type_: bool | None) -&gt; None\n</code></pre> <p>Events to scroll the mouse wheel</p>"},{"location":"documents/#maliang.Canvas.on_key_press","title":"on_key_press","text":"<pre><code>on_key_press(event: tkinter.Event) -&gt; None\n</code></pre> <p>Events for typing</p>"},{"location":"documents/#maliang.Canvas.on_key_release","title":"on_key_release","text":"<pre><code>on_key_release(event: tkinter.Event) -&gt; None\n</code></pre> <p>Events for typing</p>"},{"location":"documents/#maliang.Canvas.register_event","title":"register_event","text":"<pre><code>register_event(name: str, *, add: bool | typing.Literal['', '+'] | None = None) -&gt; str\n</code></pre> <p>Register a event to process.</p> <ul> <li><code>name</code>: event name, such as \u201c\u201c <li><code>add</code>: whether it is an attached call</li> <p>In general, you don\u2019t need to call this method, but when the event to be bound is not in the predefined event, you need to manually call the method once.</p>"},{"location":"documents/#maliang.TkMessage","title":"TkMessage","text":"<pre><code>TkMessage(\n    message: str | None = None,\n    detail: str | None = None,\n    *,\n    title: str | None = None,\n    icon: typing.Literal[\"error\", \"info\", \"question\", \"warning\"] = \"info\",\n    option: typing.Literal[\n        \"abortretryignore\", \"ok\", \"okcancel\", \"retrycancel\", \"yesno\", \"yesnocancel\"\n    ] = \"ok\",\n    default: typing.Literal[\"abort\", \"retry\", \"ignore\", \"ok\", \"cancel\", \"yes\", \"no\"] | None = None,\n    master: tkinter.Tk | None = None,\n    command: collections.abc.Callable[\n        [typing.Literal[\"abort\", \"retry\", \"ignore\", \"ok\", \"cancel\", \"yes\", \"no\"]], typing.Any\n    ]\n    | None = None,\n)\n</code></pre> <p>Message pop-up</p> <ul> <li><code>message</code>: message</li> <li><code>detail</code>: detail message</li> <li><code>title</code>: title of the window</li> <li><code>icon</code>: icon</li> <li><code>option</code>: type of the message pop-up</li> <li><code>default</code>: button where the focus is, default is the leftmost one</li> <li><code>master</code>: parent widget of the window</li> <li><code>command</code>: callback function</li> </ul>"},{"location":"documents/#maliang.TkColorChooser","title":"TkColorChooser","text":"<pre><code>TkColorChooser(\n    *,\n    title: str | None = None,\n    color: str | None = None,\n    master: tkinter.Tk | None = None,\n    command: collections.abc.Callable[[str], typing.Any] | None = None,\n)\n</code></pre> <p>Color chooser pop-up</p> <ul> <li><code>title</code>: title of the window</li> <li><code>color</code>: default color</li> <li><code>master</code>: parent widget of the window</li> <li><code>command</code>: callback function</li> </ul>"},{"location":"documents/#maliang.TkFontChooser","title":"TkFontChooser","text":"<pre><code>TkFontChooser(\n    *,\n    title: str | None = None,\n    font: str | None = None,\n    master: tkinter.Tk | None = None,\n    command: collections.abc.Callable[[str], typing.Any] | None = None,\n)\n</code></pre> <p>Font chooser pop-up</p> <ul> <li><code>title</code>: title of the window</li> <li><code>font</code>: default font</li> <li><code>master</code>: parent widget of the window</li> <li><code>command</code>: callback function</li> </ul>"},{"location":"documents/#maliang.Text","title":"Text","text":"<pre><code>Text(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    *,\n    text: str = \"\",\n    family: str | None = None,\n    fontsize: int | None = None,\n    weight: typing.Literal[\"normal\", \"bold\"] = \"normal\",\n    slant: typing.Literal[\"roman\", \"italic\"] = \"roman\",\n    underline: bool = False,\n    overstrike: bool = False,\n    justify: typing.Literal[\"left\", \"center\", \"right\"] = \"left\",\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>Text widget, generally used to display plain text</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>text</code>: text of the widget</li> <li><code>family</code>: font family</li> <li><code>fontsize</code>: font size</li> <li><code>weight</code>: weight of the text</li> <li><code>slant</code>: slant of the text</li> <li><code>underline</code>: whether the text is underline</li> <li><code>overstrike</code>: whether the text is overstrike</li> <li><code>justify</code>: justify mode of the text</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the text of the widget</p> </li> <li> <code>set</code>             \u2013              <p>Set the text of the widget</p> </li> </ul>"},{"location":"documents/#maliang.Text.get","title":"get","text":"<pre><code>get() -&gt; str\n</code></pre> <p>Get the text of the widget</p>"},{"location":"documents/#maliang.Text.set","title":"set","text":"<pre><code>set(text: str) -&gt; None\n</code></pre> <p>Set the text of the widget</p>"},{"location":"documents/#maliang.Image","title":"Image","text":"<pre><code>Image(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    size: tuple[int, int] | None = None,\n    *,\n    image: enhanced.PhotoImage | None = None,\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>Image widget, generally used to display normal still image</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>size</code>: size of the widget</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the image of the widget</p> </li> <li> <code>set</code>             \u2013              <p>Set the image of the widget</p> </li> </ul>"},{"location":"documents/#maliang.Image.get","title":"get","text":"<pre><code>get() -&gt; enhanced.PhotoImage\n</code></pre> <p>Get the image of the widget</p>"},{"location":"documents/#maliang.Image.set","title":"set","text":"<pre><code>set(image: enhanced.PhotoImage | None) -&gt; None\n</code></pre> <p>Set the image of the widget</p>"},{"location":"documents/#maliang.Label","title":"Label","text":"<pre><code>Label(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    size: tuple[int, int] | None = None,\n    *,\n    text: str = \"\",\n    family: str | None = None,\n    fontsize: int | None = None,\n    weight: typing.Literal[\"normal\", \"bold\"] = \"normal\",\n    slant: typing.Literal[\"roman\", \"italic\"] = \"roman\",\n    underline: bool = False,\n    overstrike: bool = False,\n    justify: typing.Literal[\"left\", \"center\", \"right\"] = \"left\",\n    image: enhanced.PhotoImage | None = None,\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>Label widget, which is generally used to display key information</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>size</code>: size of the widget</li> <li><code>text</code>: text of the widget</li> <li><code>family</code>: font family</li> <li><code>fontsize</code>: font size</li> <li><code>weight</code>: weight of the text</li> <li><code>slant</code>: slant of the text</li> <li><code>underline</code>: whether the text is underline</li> <li><code>overstrike</code>: whether the text is overstrike</li> <li><code>justify</code>: justify mode of the text</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the text of the widget</p> </li> <li> <code>set</code>             \u2013              <p>Set the text of the widget</p> </li> </ul>"},{"location":"documents/#maliang.Label.get","title":"get","text":"<pre><code>get() -&gt; str\n</code></pre> <p>Get the text of the widget</p>"},{"location":"documents/#maliang.Label.set","title":"set","text":"<pre><code>set(text: str) -&gt; None\n</code></pre> <p>Set the text of the widget</p>"},{"location":"documents/#maliang.Button","title":"Button","text":"<pre><code>Button(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    size: tuple[int, int] | None = None,\n    *,\n    text: str = \"\",\n    family: str | None = None,\n    fontsize: int | None = None,\n    weight: typing.Literal[\"normal\", \"bold\"] = \"normal\",\n    slant: typing.Literal[\"roman\", \"italic\"] = \"roman\",\n    underline: bool = False,\n    overstrike: bool = False,\n    justify: typing.Literal[\"left\", \"center\", \"right\"] = \"left\",\n    command: collections.abc.Callable | None = None,\n    image: enhanced.PhotoImage | None = None,\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>Button widget, typically used to trigger a function</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>size</code>: size of the widget</li> <li><code>text</code>: text of the widget</li> <li><code>family</code>: font family</li> <li><code>fontsize</code>: font size</li> <li><code>weight</code>: weight of the text</li> <li><code>slant</code>: slant of the text</li> <li><code>underline</code>: whether the text is underline</li> <li><code>overstrike</code>: whether the text is overstrike</li> <li><code>justify</code>: justify mode of the text</li> <li><code>command</code>: a function that is triggered when the button is pressed</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the text of the widget</p> </li> <li> <code>set</code>             \u2013              <p>Set the text of the widget</p> </li> </ul>"},{"location":"documents/#maliang.Button.get","title":"get","text":"<pre><code>get() -&gt; str\n</code></pre> <p>Get the text of the widget</p>"},{"location":"documents/#maliang.Button.set","title":"set","text":"<pre><code>set(text: str) -&gt; None\n</code></pre> <p>Set the text of the widget</p>"},{"location":"documents/#maliang.Switch","title":"Switch","text":"<pre><code>Switch(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    length: int = 60,\n    *,\n    default: bool | None = None,\n    command: collections.abc.Callable[[bool], typing.Any] | None = None,\n    image: enhanced.PhotoImage | None = None,\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>Switch widget, typically used to control the turning of a function on and off</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>length</code>: length of the widget</li> <li><code>default</code>: default value of the widget</li> <li><code>command</code>: a function that is triggered when the switch is changed</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the state of the switch</p> </li> <li> <code>set</code>             \u2013              <p>Set the state of the switch</p> </li> </ul>"},{"location":"documents/#maliang.Switch.get","title":"get","text":"<pre><code>get() -&gt; bool\n</code></pre> <p>Get the state of the switch</p>"},{"location":"documents/#maliang.Switch.set","title":"set","text":"<pre><code>set(value: bool, *, callback: bool = False) -&gt; None\n</code></pre> <p>Set the state of the switch</p>"},{"location":"documents/#maliang.InputBox","title":"InputBox","text":"<pre><code>InputBox(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    size: tuple[int, int] | None = None,\n    *,\n    family: str | None = None,\n    fontsize: int | None = None,\n    weight: typing.Literal[\"normal\", \"bold\"] = \"normal\",\n    slant: typing.Literal[\"roman\", \"italic\"] = \"roman\",\n    underline: bool = False,\n    overstrike: bool = False,\n    align: typing.Literal[\"left\", \"right\", \"center\"] = \"left\",\n    placeholder: str = \"\",\n    show: str | None = None,\n    ignore: tuple[str, ...] = (\"\\n\", \"\\r\"),\n    limit: int = math.inf,\n    limit_width: int = 0,\n    image: enhanced.PhotoImage | None = None,\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>Input box widget, generally used to enter certain information on a single line</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>size</code>: size of the widget</li> <li><code>family</code>: font family</li> <li><code>fontsize</code>: font size</li> <li><code>weight</code>: weight of the text</li> <li><code>slant</code>: slant of the text</li> <li><code>underline</code>: whether the text is underline</li> <li><code>overstrike</code>: whether the text is overstrike</li> <li><code>align</code>: align mode of the text</li> <li><code>show</code>: display a value that obscures the original content</li> <li><code>ignore</code>: ignore the input of some characters</li> <li><code>placeholder</code>: a placeholder for the prompt</li> <li><code>limit</code>: limit on the number of characters</li> <li><code>limit_width</code>: limit on the width of characters</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the value of the Entry</p> </li> <li> <code>set</code>             \u2013              <p>Set the text value of the Entry</p> </li> <li> <code>insert</code>             \u2013              <p>Insert</p> </li> <li> <code>append</code>             \u2013              <p>Append text to Entry</p> </li> <li> <code>remove</code>             \u2013              <p>Remove</p> </li> <li> <code>pop</code>             \u2013              <p>Delete a specified amount of text</p> </li> <li> <code>clear</code>             \u2013              <p>Clear the text value of the Entry</p> </li> </ul>"},{"location":"documents/#maliang.InputBox.get","title":"get","text":"<pre><code>get() -&gt; str\n</code></pre> <p>Get the value of the Entry</p>"},{"location":"documents/#maliang.InputBox.set","title":"set","text":"<pre><code>set(value: str) -&gt; bool\n</code></pre> <p>Set the text value of the Entry</p>"},{"location":"documents/#maliang.InputBox.insert","title":"insert","text":"<pre><code>insert(index: int, value: str) -&gt; bool\n</code></pre> <p>Insert</p>"},{"location":"documents/#maliang.InputBox.append","title":"append","text":"<pre><code>append(value: str) -&gt; bool\n</code></pre> <p>Append text to Entry</p>"},{"location":"documents/#maliang.InputBox.remove","title":"remove","text":"<pre><code>remove(start: int, end: int | None = None) -&gt; int\n</code></pre> <p>Remove</p>"},{"location":"documents/#maliang.InputBox.pop","title":"pop","text":"<pre><code>pop(index: int = -1) -&gt; str\n</code></pre> <p>Delete a specified amount of text</p>"},{"location":"documents/#maliang.InputBox.clear","title":"clear","text":"<pre><code>clear() -&gt; None\n</code></pre> <p>Clear the text value of the Entry</p>"},{"location":"documents/#maliang.CheckBox","title":"CheckBox","text":"<pre><code>CheckBox(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    length: int = 30,\n    *,\n    default: bool | None = None,\n    command: collections.abc.Callable[[bool], typing.Any] | None = None,\n    image: enhanced.PhotoImage | None = None,\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>Checkbox button widget, generally used to check some options</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>length</code>: length of the widget</li> <li><code>default</code>: default state of the widget</li> <li><code>command</code>: a function that is triggered when the state of check button is on</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the state of the check button</p> </li> <li> <code>set</code>             \u2013              <p>Set the state of the check button</p> </li> </ul>"},{"location":"documents/#maliang.CheckBox.get","title":"get","text":"<pre><code>get() -&gt; bool\n</code></pre> <p>Get the state of the check button</p>"},{"location":"documents/#maliang.CheckBox.set","title":"set","text":"<pre><code>set(value: bool, *, callback: bool = False) -&gt; None\n</code></pre> <p>Set the state of the check button</p>"},{"location":"documents/#maliang.ToggleButton","title":"ToggleButton","text":"<pre><code>ToggleButton(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    size: tuple[int, int] | None = None,\n    *,\n    text: str = \"\",\n    family: str | None = None,\n    fontsize: int | None = None,\n    weight: typing.Literal[\"normal\", \"bold\"] = \"normal\",\n    slant: typing.Literal[\"roman\", \"italic\"] = \"roman\",\n    underline: bool = False,\n    overstrike: bool = False,\n    justify: typing.Literal[\"left\", \"center\", \"right\"] = \"left\",\n    default: bool | None = None,\n    command: collections.abc.Callable[[bool], typing.Any] | None = None,\n    image: enhanced.PhotoImage | None = None,\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>A button that can display information and switch statuses</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>size</code>: size of the widget</li> <li><code>text</code>: text of the widget</li> <li><code>family</code>: font family</li> <li><code>fontsize</code>: font size</li> <li><code>weight</code>: weight of the text</li> <li><code>slant</code>: slant of the text</li> <li><code>underline</code>: whether the text is underline</li> <li><code>overstrike</code>: whether the text is overstrike</li> <li><code>justify</code>: justify mode of the text</li> <li><code>default</code>: default state of the widget</li> <li><code>command</code>: a function that is triggered when the state of check button is on</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the state of the check button</p> </li> <li> <code>set</code>             \u2013              <p>Set the state of the switch</p> </li> </ul>"},{"location":"documents/#maliang.ToggleButton.get","title":"get","text":"<pre><code>get() -&gt; bool\n</code></pre> <p>Get the state of the check button</p>"},{"location":"documents/#maliang.ToggleButton.set","title":"set","text":"<pre><code>set(value: bool, *, callback: bool = False) -&gt; None\n</code></pre> <p>Set the state of the switch</p>"},{"location":"documents/#maliang.RadioBox","title":"RadioBox","text":"<pre><code>RadioBox(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    length: int = 30,\n    *,\n    default: bool | None = None,\n    command: collections.abc.Callable[[int], typing.Any] | None = None,\n    image: enhanced.PhotoImage | None = None,\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>Radio button widget, generally used to select one of several options</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>length</code>: length of the widget</li> <li><code>default</code>: default state of the widget</li> <li><code>command</code>: a function that is triggered when the state of radio button is on</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the state of the radio button</p> </li> <li> <code>set</code>             \u2013              <p>Set the state of the radio button</p> </li> <li> <code>group</code>             \u2013              <p>Combine other radio boxes.</p> </li> </ul>"},{"location":"documents/#maliang.RadioBox.get","title":"get","text":"<pre><code>get() -&gt; bool\n</code></pre> <p>Get the state of the radio button</p>"},{"location":"documents/#maliang.RadioBox.set","title":"set","text":"<pre><code>set(value: bool, *, callback: bool = False) -&gt; None\n</code></pre> <p>Set the state of the radio button</p>"},{"location":"documents/#maliang.RadioBox.group","title":"group","text":"<pre><code>group(*radio_boxes: RadioBox) -&gt; None\n</code></pre> <p>Combine other radio boxes.</p> <ul> <li><code>radio_boxes</code>: other radio boxes</li> </ul>"},{"location":"documents/#maliang.ProgressBar","title":"ProgressBar","text":"<pre><code>ProgressBar(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    size: tuple[int, int] = (400, 20),\n    *,\n    default: float | None = None,\n    command: collections.abc.Callable[[float], typing.Any] | None = None,\n    image: enhanced.PhotoImage | None = None,\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>Progress bar widget, typically used to show the progress of an event</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>size</code>: size of the widget</li> <li><code>default</code>: default value of the widget</li> <li><code>command</code>: a function that is triggered when the progress of progress bar is 100%</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the progress of the progress bar</p> </li> <li> <code>set</code>             \u2013              <p>Set the progress of the progress bar</p> </li> </ul>"},{"location":"documents/#maliang.ProgressBar.get","title":"get","text":"<pre><code>get() -&gt; float\n</code></pre> <p>Get the progress of the progress bar</p>"},{"location":"documents/#maliang.ProgressBar.set","title":"set","text":"<pre><code>set(value: float, *, callback: bool = False) -&gt; None\n</code></pre> <p>Set the progress of the progress bar</p>"},{"location":"documents/#maliang.UnderlineButton","title":"UnderlineButton","text":"<pre><code>UnderlineButton(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    *,\n    text: str = \"\",\n    family: str | None = None,\n    fontsize: int | None = None,\n    weight: typing.Literal[\"normal\", \"bold\"] = \"normal\",\n    slant: typing.Literal[\"roman\", \"italic\"] = \"roman\",\n    underline: bool = False,\n    overstrike: bool = False,\n    justify: typing.Literal[\"left\", \"center\", \"right\"] = \"left\",\n    command: collections.abc.Callable | None = None,\n    image: enhanced.PhotoImage | None = None,\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool = False,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>Underline button, generally used to display web links</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>text</code>: text of the widget</li> <li><code>family</code>: font family</li> <li><code>fontsize</code>: font size</li> <li><code>weight</code>: weight of the text</li> <li><code>slant</code>: slant of the text</li> <li><code>underline</code>: whether the text is underline</li> <li><code>overstrike</code>: whether the text is overstrike</li> <li><code>justify</code>: justify mode of the text</li> <li><code>command</code>: a function that is triggered when the underline button is pressed</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul>"},{"location":"documents/#maliang.HighlightButton","title":"HighlightButton","text":"<pre><code>HighlightButton(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    *,\n    text: str = \"\",\n    family: str | None = None,\n    fontsize: int | None = None,\n    weight: typing.Literal[\"normal\", \"bold\"] = \"normal\",\n    slant: typing.Literal[\"roman\", \"italic\"] = \"roman\",\n    underline: bool = False,\n    overstrike: bool = False,\n    justify: typing.Literal[\"left\", \"center\", \"right\"] = \"left\",\n    command: collections.abc.Callable | None = None,\n    image: enhanced.PhotoImage | None = None,\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>Highlight button, no outline, which added a highlight effect</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>text</code>: text of the widget</li> <li><code>family</code>: font family</li> <li><code>fontsize</code>: font size</li> <li><code>weight</code>: weight of the text</li> <li><code>slant</code>: slant of the text</li> <li><code>underline</code>: whether the text is underline</li> <li><code>overstrike</code>: whether the text is overstrike</li> <li><code>justify</code>: justify mode of the text</li> <li><code>command</code>: a function that is triggered when the hightlight button is pressed</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul>"},{"location":"documents/#maliang.IconButton","title":"IconButton","text":"<pre><code>IconButton(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    size: tuple[int, int] | None = None,\n    *,\n    text: str = \"\",\n    family: str | None = None,\n    fontsize: int | None = None,\n    weight: typing.Literal[\"normal\", \"bold\"] = \"normal\",\n    slant: typing.Literal[\"roman\", \"italic\"] = \"roman\",\n    underline: bool = False,\n    overstrike: bool = False,\n    justify: typing.Literal[\"left\", \"center\", \"right\"] = \"left\",\n    command: collections.abc.Callable | None = None,\n    image: enhanced.PhotoImage | None = None,\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>A button with an icon on the left side</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>size</code>: size of the widget</li> <li><code>text</code>: text of the widget</li> <li><code>family</code>: font family</li> <li><code>fontsize</code>: font size</li> <li><code>weight</code>: weight of the text</li> <li><code>slant</code>: slant of the text</li> <li><code>underline</code>: whether the text is underline</li> <li><code>overstrike</code>: whether the text is overstrike</li> <li><code>justify</code>: justify mode of the text</li> <li><code>command</code>: a function that is triggered when the button is pressed</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the text of the widget</p> </li> <li> <code>set</code>             \u2013              <p>Set the text of the widget</p> </li> </ul>"},{"location":"documents/#maliang.IconButton.get","title":"get","text":"<pre><code>get() -&gt; str\n</code></pre> <p>Get the text of the widget</p>"},{"location":"documents/#maliang.IconButton.set","title":"set","text":"<pre><code>set(text: str) -&gt; None\n</code></pre> <p>Set the text of the widget</p>"},{"location":"documents/#maliang.Slider","title":"Slider","text":"<pre><code>Slider(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    size: tuple[int, int] = (400, 30),\n    *,\n    default: float | None = None,\n    command: collections.abc.Callable[[float], typing.Any] | None = None,\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>A slider for visually resizing values</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>size</code>: size of the widget</li> <li><code>default</code>: default value of the widget</li> <li><code>command</code>: a function that is triggered when the button is pressed</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the value of the slider</p> </li> <li> <code>set</code>             \u2013              <p>Set the value of the slider</p> </li> </ul>"},{"location":"documents/#maliang.Slider.get","title":"get","text":"<pre><code>get() -&gt; float\n</code></pre> <p>Get the value of the slider</p>"},{"location":"documents/#maliang.Slider.set","title":"set","text":"<pre><code>set(value: float, *, callback: bool = False) -&gt; None\n</code></pre> <p>Set the value of the slider</p>"},{"location":"documents/#maliang.SegmentedButton","title":"SegmentedButton","text":"<pre><code>SegmentedButton(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    sizes: tuple[tuple[int, int], ...] = (),\n    *,\n    text: tuple[str, ...] = (),\n    family: str | None = None,\n    fontsize: int | None = None,\n    weight: typing.Literal[\"normal\", \"bold\"] = \"normal\",\n    slant: typing.Literal[\"roman\", \"italic\"] = \"roman\",\n    underline: bool = False,\n    overstrike: bool = False,\n    justify: typing.Literal[\"left\", \"center\", \"right\"] = \"left\",\n    default: int | None = None,\n    command: collections.abc.Callable[[int | None], typing.Any] | None = None,\n    image: tuple[enhanced.PhotoImage | None, ...] = (),\n    layout: typing.Literal[\"horizontal\", \"vertical\"] = \"horizontal\",\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>A segmented button that can be used to toggle between multiple states</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>size</code>: size of the widget</li> <li><code>text</code>: text of the widget</li> <li><code>family</code>: font family</li> <li><code>fontsize</code>: font size</li> <li><code>weight</code>: weight of the text</li> <li><code>slant</code>: slant of the text</li> <li><code>underline</code>: whether the text is underline</li> <li><code>overstrike</code>: whether the text is overstrike</li> <li><code>justify</code>: justify mode of the text</li> <li><code>default</code>: default value of the widget</li> <li><code>command</code>: a function that is triggered when the button is pressed</li> <li><code>image</code>: image of the widget</li> <li><code>layout</code>: layout mode of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the index of the child toggle button with a value of True. If not, None is</p> </li> <li> <code>set</code>             \u2013              <p>Activate the child toggle button for the specified index</p> </li> </ul>"},{"location":"documents/#maliang.SegmentedButton.get","title":"get","text":"<pre><code>get() -&gt; int | None\n</code></pre> <p>Get the index of the child toggle button with a value of True. If not, None is returned.</p>"},{"location":"documents/#maliang.SegmentedButton.set","title":"set","text":"<pre><code>set(value: int | None, *, callback: bool = False) -&gt; None\n</code></pre> <p>Activate the child toggle button for the specified index</p>"},{"location":"documents/#maliang.SpinBox","title":"SpinBox","text":"<pre><code>SpinBox(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    size: tuple[int, int] | None = None,\n    *,\n    format_spec: str = \"d\",\n    step: int = 1,\n    family: str | None = None,\n    fontsize: int | None = None,\n    weight: typing.Literal[\"normal\", \"bold\"] = \"normal\",\n    slant: typing.Literal[\"roman\", \"italic\"] = \"roman\",\n    underline: bool = False,\n    overstrike: bool = False,\n    align: typing.Literal[\"left\", \"right\", \"center\"] = \"left\",\n    placeholder: str = \"\",\n    show: str | None = None,\n    limit: int = math.inf,\n    default: str | None = None,\n    command: collections.abc.Callable[[bool], typing.Any] | None = None,\n    image: enhanced.PhotoImage | None = None,\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>A widget that makes it easy to enter numeric type data</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>size</code>: size of the widget</li> <li><code>format_spec</code>: format of value</li> <li><code>step</code>: value of each change</li> <li><code>family</code>: font family</li> <li><code>fontsize</code>: font size</li> <li><code>weight</code>: weight of the text</li> <li><code>slant</code>: slant of the text</li> <li><code>underline</code>: whether the text is underline</li> <li><code>overstrike</code>: whether the text is overstrike</li> <li><code>align</code>: align mode of the text</li> <li><code>show</code>: display a value that obscures the original content</li> <li><code>placeholder</code>: a placeholder for the prompt</li> <li><code>limit</code>: limit on the number of characters</li> <li><code>default</code>: default value of the widget</li> <li><code>command</code>: a function that is triggered when the button is pressed</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>change</code>             \u2013              <p>Try change the current value</p> </li> <li> <code>get</code>             \u2013              <p>Get the value of the Entry</p> </li> <li> <code>set</code>             \u2013              <p>Set the text value of the Entry</p> </li> <li> <code>append</code>             \u2013              <p>Append text to Entry</p> </li> <li> <code>delete</code>             \u2013              <p>Delete a specified amount of text</p> </li> <li> <code>clear</code>             \u2013              <p>Clear the text value of the Entry</p> </li> </ul>"},{"location":"documents/#maliang.SpinBox.change","title":"change","text":"<pre><code>change(up: bool) -&gt; None\n</code></pre> <p>Try change the current value</p>"},{"location":"documents/#maliang.SpinBox.get","title":"get","text":"<pre><code>get() -&gt; str\n</code></pre> <p>Get the value of the Entry</p>"},{"location":"documents/#maliang.SpinBox.set","title":"set","text":"<pre><code>set(value: str) -&gt; None\n</code></pre> <p>Set the text value of the Entry</p>"},{"location":"documents/#maliang.SpinBox.append","title":"append","text":"<pre><code>append(value: str) -&gt; None\n</code></pre> <p>Append text to Entry</p>"},{"location":"documents/#maliang.SpinBox.delete","title":"delete","text":"<pre><code>delete(count: int) -&gt; None\n</code></pre> <p>Delete a specified amount of text</p>"},{"location":"documents/#maliang.SpinBox.clear","title":"clear","text":"<pre><code>clear() -&gt; None\n</code></pre> <p>Clear the text value of the Entry</p>"},{"location":"documents/#maliang.OptionButton","title":"OptionButton","text":"<pre><code>OptionButton(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    size: tuple[int, int] | None = None,\n    *,\n    text: tuple[str, ...] = (),\n    family: str | None = None,\n    fontsize: int | None = None,\n    weight: typing.Literal[\"normal\", \"bold\"] = \"normal\",\n    slant: typing.Literal[\"roman\", \"italic\"] = \"roman\",\n    underline: bool = False,\n    overstrike: bool = False,\n    justify: typing.Literal[\"left\", \"center\", \"right\"] = \"left\",\n    default: int | None = None,\n    command: collections.abc.Callable[[int | None], typing.Any] | None = None,\n    image: tuple[enhanced.PhotoImage | None, ...] = (),\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    align: typing.Literal[\"up\", \"center\", \"down\"] = \"center\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>A button that has many options to choose</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>size</code>: size of the widget</li> <li><code>text</code>: text of the widget</li> <li><code>family</code>: font family</li> <li><code>fontsize</code>: font size</li> <li><code>weight</code>: weight of the text</li> <li><code>slant</code>: slant of the text</li> <li><code>underline</code>: whether the text is underline</li> <li><code>overstrike</code>: whether the text is overstrike</li> <li><code>justify</code>: justify mode of the text</li> <li><code>default</code>: default value of the widget</li> <li><code>command</code>: a function that is triggered when the button is pressed</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>align</code>: align of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the index of the child toggle button with a value of True. If not, None is</p> </li> <li> <code>set</code>             \u2013              <p>Activate the child toggle button for the specified index</p> </li> </ul>"},{"location":"documents/#maliang.OptionButton.get","title":"get","text":"<pre><code>get() -&gt; int | None\n</code></pre> <p>Get the index of the child toggle button with a value of True. If not, None is returned.</p>"},{"location":"documents/#maliang.OptionButton.set","title":"set","text":"<pre><code>set(value: int | None, *, callback: bool = False) -&gt; None\n</code></pre> <p>Activate the child toggle button for the specified index</p>"},{"location":"documents/#maliang.ComboBox","title":"ComboBox","text":"<pre><code>ComboBox(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    size: tuple[int, int] | None = None,\n    *,\n    text: tuple[str, ...] = (),\n    family: str | None = None,\n    fontsize: int | None = None,\n    weight: typing.Literal[\"normal\", \"bold\"] = \"normal\",\n    slant: typing.Literal[\"roman\", \"italic\"] = \"roman\",\n    underline: bool = False,\n    overstrike: bool = False,\n    justify: typing.Literal[\"left\", \"center\", \"right\"] = \"left\",\n    default: int | None = None,\n    command: collections.abc.Callable[[int | None], typing.Any] | None = None,\n    image: tuple[enhanced.PhotoImage | None, ...] = (),\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    align: typing.Literal[\"up\", \"down\"] = \"down\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>An input box that can provide several options</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>size</code>: size of the widget</li> <li><code>text</code>: text of the widget</li> <li><code>family</code>: font family</li> <li><code>fontsize</code>: font size</li> <li><code>weight</code>: weight of the text</li> <li><code>slant</code>: slant of the text</li> <li><code>underline</code>: whether the text is underline</li> <li><code>overstrike</code>: whether the text is overstrike</li> <li><code>justify</code>: justify mode of the text</li> <li><code>default</code>: default value of the widget</li> <li><code>command</code>: a function that is triggered when the button is pressed</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>align</code>: align of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the index of the child toggle button with a value of True. If not, None is</p> </li> <li> <code>set</code>             \u2013              <p>Activate the child toggle button for the specified index</p> </li> </ul>"},{"location":"documents/#maliang.ComboBox.get","title":"get","text":"<pre><code>get() -&gt; int | None\n</code></pre> <p>Get the index of the child toggle button with a value of True. If not, None is returned.</p>"},{"location":"documents/#maliang.ComboBox.set","title":"set","text":"<pre><code>set(value: int | None, *, callback: bool = False) -&gt; None\n</code></pre> <p>Activate the child toggle button for the specified index</p>"},{"location":"documents/#maliang.Spinner","title":"Spinner","text":"<pre><code>Spinner(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    size: tuple[int, int] = (30, 30),\n    *,\n    default: float | None = None,\n    command: collections.abc.Callable[[float], typing.Any] | None = None,\n    widths: tuple[int, int] | None = None,\n    mode: typing.Literal[\"determinate\", \"indeterminate\"] = \"determinate\",\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>Spinners visually communicate that something is processing</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>size</code>: size of the widget</li> <li><code>default</code>: default value of the widget</li> <li><code>command</code>: a function that is triggered when the progress of progress bar is 100%</li> <li><code>widths</code>: width of the outside ring and inside ring</li> <li><code>mode</code>: mode of the Spinner</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the progress of the Spinner</p> </li> <li> <code>set</code>             \u2013              <p>Set the progress of the Spinner</p> </li> <li> <code>destroy</code>             \u2013              <p>Destroy the widget</p> </li> </ul>"},{"location":"documents/#maliang.Spinner.get","title":"get","text":"<pre><code>get() -&gt; float\n</code></pre> <p>Get the progress of the Spinner</p>"},{"location":"documents/#maliang.Spinner.set","title":"set","text":"<pre><code>set(value: float, *, callback: bool = False) -&gt; None\n</code></pre> <p>Set the progress of the Spinner</p>"},{"location":"documents/#maliang.Spinner.destroy","title":"destroy","text":"<pre><code>destroy() -&gt; None\n</code></pre> <p>Destroy the widget</p>"},{"location":"documents/#maliang.Tooltip","title":"Tooltip","text":"<pre><code>Tooltip(\n    widget: virtual.Widget,\n    size: tuple[int, int] | None = None,\n    *,\n    text: str = \"\",\n    align: typing.Literal[\"up\", \"down\", \"right\", \"left\", \"center\"] = \"down\",\n    padding: int = 3,\n    family: str | None = None,\n    fontsize: int | None = None,\n    weight: typing.Literal[\"normal\", \"bold\"] = \"normal\",\n    slant: typing.Literal[\"roman\", \"italic\"] = \"roman\",\n    underline: bool = False,\n    overstrike: bool = False,\n    justify: typing.Literal[\"left\", \"center\", \"right\"] = \"left\",\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>A tooltip that can display additional information</p> <ul> <li><code>widget</code>: the associated widget</li> <li><code>size</code>: size of the widget</li> <li><code>text</code>: text of the widget</li> <li><code>align</code>: align mode of the tooltip</li> <li><code>padding</code>: extra padding between tooltip and the associated widget</li> <li><code>family</code>: font family</li> <li><code>fontsize</code>: font size</li> <li><code>weight</code>: weight of the text</li> <li><code>slant</code>: slant of the text</li> <li><code>underline</code>: whether the text is underline</li> <li><code>overstrike</code>: whether the text is overstrike</li> <li><code>justify</code>: justify mode of the text</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the text of the widget</p> </li> <li> <code>set</code>             \u2013              <p>Set the text of the widget</p> </li> </ul>"},{"location":"documents/#maliang.Tooltip.get","title":"get","text":"<pre><code>get() -&gt; str\n</code></pre> <p>Get the text of the widget</p>"},{"location":"documents/#maliang.Tooltip.set","title":"set","text":"<pre><code>set(text: str) -&gt; None\n</code></pre> <p>Set the text of the widget</p>"},{"location":"documents/#maliang.PhotoImage","title":"PhotoImage","text":"<p>               Bases: <code>ImageTk.PhotoImage</code>, <code>tkinter.PhotoImage</code></p> <p>Pillow version of <code>tkinter.PhotoImage</code>.</p> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>scale</code>             \u2013              <p>Scale the PhotoImage.</p> </li> <li> <code>resize</code>             \u2013              <p>Resize the PhotoImage.</p> </li> </ul>"},{"location":"documents/#maliang.PhotoImage.scale","title":"scale","text":"<pre><code>scale(x: float, y: float) -&gt; PhotoImage\n</code></pre> <p>Scale the PhotoImage.</p> <ul> <li><code>x</code>: The x-axis scale factor</li> <li><code>y</code>: The y-axis scale factor</li> </ul>"},{"location":"documents/#maliang.PhotoImage.resize","title":"resize","text":"<pre><code>resize(width: int, height: int) -&gt; PhotoImage\n</code></pre> <p>Resize the PhotoImage.</p> <ul> <li><code>width</code>: The new width of the image</li> <li><code>height</code>: The new height of the image</li> </ul>"},{"location":"documents/#maliang.reset","title":"reset","text":"<pre><code>reset() -&gt; None\n</code></pre> <p>Reset all configuration options.</p>"},{"location":"documents/summary/","title":"Summary","text":"<p> \u5b57\u6570 34 \u4e2a \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <ul> <li> animation<ul> <li> animations</li> <li> controllers</li> </ul> </li> <li> color<ul> <li> colortable</li> <li> convert</li> <li> hsl</li> <li> rgb</li> </ul> </li> <li> core<ul> <li> configs</li> <li> containers</li> <li> virtual</li> </ul> </li> <li> media<ul> <li> icons</li> <li> main</li> </ul> </li> <li> mpl<ul> <li> constants</li> <li> main</li> </ul> </li> <li> standard<ul> <li> dialogs</li> <li> features</li> <li> images</li> <li> shapes</li> <li> styles</li> <li> texts</li> <li> widgets</li> </ul> </li> <li> theme<ul> <li> manager</li> </ul> </li> <li> three<ul> <li> engine</li> <li> geometries</li> </ul> </li> <li> toolbox<ul> <li> enhanced</li> <li> utility</li> </ul> </li> </ul>"},{"location":"documents/animation/","title":"maliang.animation","text":"<p> \u5b57\u6570 11 \u4e2a \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p> \u6e90\u4ee3\u7801\uff1a<code>maliang/animation/__init__.py</code></p> <p>A subpackage that provides animation-related features.</p> <p>A highly customizable animation base class and related subclasses are provided, as well as highly customizable control functions. In addition, control functions also applies to the related functions of the <code>color</code> subpackage.</p> <p>\u6a21\u5757\uff1a</p> <ul> <li> <code>animations</code>           \u2013            <p>Base and standard animation classes.</p> </li> <li> <code>controllers</code>           \u2013            <p>Controller generator and standard control functions.</p> </li> </ul> <p>\u7c7b\uff1a</p> <ul> <li> <code>Animation</code>           \u2013            <p>Base animation class.</p> </li> <li> <code>MoveWindow</code>           \u2013            <p>Animation of moving the window.</p> </li> <li> <code>MoveTkWidget</code>           \u2013            <p>Animation of moving <code>tkinter.Widget</code>.</p> </li> <li> <code>MoveWidget</code>           \u2013            <p>Animation of moving <code>virtual.Widget</code>.</p> </li> <li> <code>MoveElement</code>           \u2013            <p>Animation of moving <code>virtual.Element</code>.</p> </li> <li> <code>MoveItem</code>           \u2013            <p>Animation of moving a item of <code>tkinter.Canvas</code>.</p> </li> <li> <code>GradientTkWidget</code>           \u2013            <p>Animation of making the color of <code>tkinter.Widget</code> to be gradient.</p> </li> <li> <code>GradientItem</code>           \u2013            <p>Animation of making the color of canvas item to be gradient.</p> </li> <li> <code>ScaleFontSize</code>           \u2013            <p>Animation of scaling the font size of <code>virtual.Text</code>.</p> </li> </ul> <p>\u51fd\u6570\uff1a</p> <ul> <li> <code>generate</code>             \u2013              <p>Generate a control function from an ordinary mathematical function.</p> </li> <li> <code>linear</code>             \u2013              <p>Speed remains the same.</p> </li> <li> <code>smooth</code>             \u2013              <p>Speed is slow first, then fast and then slow. (slow -&gt; fast -&gt; slow)</p> </li> <li> <code>rebound</code>             \u2013              <p>Before the end, displacement will bounce off a bit.</p> </li> <li> <code>ease_in</code>             \u2013              <p>Gradually accelerate. (slow -&gt; fast)</p> </li> <li> <code>ease_out</code>             \u2013              <p>Gradually decelerate. (fast -&gt; slow)</p> </li> </ul>"},{"location":"documents/animation/#maliang.animation.Animation","title":"Animation","text":"<pre><code>Animation(\n    duration: int,\n    command: collections.abc.Callable[[float], typing.Any],\n    *,\n    controller: collections.abc.Callable[[float], float] = controllers.linear,\n    end: collections.abc.Callable[[], typing.Any] | None = None,\n    fps: int = 30,\n    repeat: int = 0,\n    repeat_delay: int = 0,\n    derivation: bool = False,\n)\n</code></pre> <p>Base animation class.</p> <ul> <li><code>duration</code>: duration of the animation, in milliseconds</li> <li><code>command</code>: callback function, which will be called once per frame</li> <li><code>controller</code>: a function that controls the animation process</li> <li><code>end</code>: end function, which is called once at the end of the animation</li> <li><code>fps</code>: frame rate of the animation</li> <li><code>repeat</code>: number of repetitions of the animation</li> <li><code>repeat_delay</code>: length of the delay before the animation repeats</li> <li><code>derivation</code>: whether the callback function is derivative</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>start</code>             \u2013              <p>Start the animation.</p> </li> <li> <code>stop</code>             \u2013              <p>Stop the animation.</p> </li> <li> <code>skip</code>             \u2013              <p>Skip some loops.</p> </li> </ul> <p>\u5c5e\u6027\uff1a</p> <ul> <li> <code>active</code>               (<code>bool</code>)           \u2013            <p>Returns the active state of the animation.</p> </li> <li> <code>count</code>               (<code>int</code>)           \u2013            <p>Returns the number of loops remaining.</p> </li> </ul>"},{"location":"documents/animation/#maliang.animation.Animation.active","title":"active  <code>property</code>","text":"<pre><code>active: bool\n</code></pre> <p>Returns the active state of the animation.</p>"},{"location":"documents/animation/#maliang.animation.Animation.count","title":"count  <code>property</code>","text":"<pre><code>count: int\n</code></pre> <p>Returns the number of loops remaining.</p>"},{"location":"documents/animation/#maliang.animation.Animation.start","title":"start","text":"<pre><code>start() -&gt; None\n</code></pre><pre><code>start(*, delay: int) -&gt; str\n</code></pre> <pre><code>start(*, delay: int = 0) -&gt; str | None\n</code></pre> <p>Start the animation.</p> <ul> <li><code>delay</code>: length of the delay before the animation starts</li> </ul>"},{"location":"documents/animation/#maliang.animation.Animation.stop","title":"stop","text":"<pre><code>stop() -&gt; None\n</code></pre><pre><code>stop(*, delay: int) -&gt; str\n</code></pre> <pre><code>stop(*, delay: int = 0) -&gt; str | None\n</code></pre> <p>Stop the animation.</p> <ul> <li><code>delay</code>: length of the delay before the animation stops</li> </ul>"},{"location":"documents/animation/#maliang.animation.Animation.skip","title":"skip","text":"<pre><code>skip(count: int = 1) -&gt; None\n</code></pre> <p>Skip some loops.</p> <ul> <li><code>count</code>: count of skipping</li> </ul>"},{"location":"documents/animation/#maliang.animation.MoveWindow","title":"MoveWindow","text":"<pre><code>MoveWindow(\n    window: tkinter.Tk | tkinter.Toplevel | containers.Tk | containers.Toplevel,\n    offset: tuple[float, float],\n    duration: int,\n    *,\n    controller: collections.abc.Callable[[float], float] = controllers.linear,\n    end: collections.abc.Callable[[], typing.Any] | None = None,\n    fps: int = 30,\n    repeat: int = 0,\n    repeat_delay: int = 0,\n)\n</code></pre> <p>               Bases: <code>Animation</code></p> <p>Animation of moving the window.</p> <ul> <li><code>window</code>: the window to be moved</li> <li><code>offset</code>: relative offset of the coordinates</li> <li><code>duration</code>: duration of the animation, in milliseconds</li> <li><code>controller</code>: a function that controls the animation process</li> <li><code>end</code>: end function, which is called once at the end of the animation</li> <li><code>fps</code>: frame rate of the animation</li> <li><code>repeat</code>: number of repetitions of the animation</li> <li><code>repeat_delay</code>: length of the delay before the animation repeats</li> </ul>"},{"location":"documents/animation/#maliang.animation.MoveTkWidget","title":"MoveTkWidget","text":"<pre><code>MoveTkWidget(\n    widget: tkinter.Widget,\n    offset: tuple[float, float],\n    duration: int,\n    *,\n    controller: collections.abc.Callable[[float], float] = controllers.linear,\n    end: collections.abc.Callable[[], typing.Any] | None = None,\n    fps: int = 30,\n    repeat: int = 0,\n    repeat_delay: int = 0,\n)\n</code></pre> <p>               Bases: <code>Animation</code></p> <p>Animation of moving <code>tkinter.Widget</code>.</p> <ul> <li><code>widget</code>: the <code>tkinter.Widget</code> to be moved</li> <li><code>offset</code>: relative offset of the coordinates</li> <li><code>duration</code>: duration of the animation, in milliseconds</li> <li><code>controller</code>: a function that controls the animation process</li> <li><code>end</code>: end function, which is called once at the end of the animation</li> <li><code>fps</code>: frame rate of the animation</li> <li><code>repeat</code>: number of repetitions of the animation</li> <li><code>repeat_delay</code>: length of the delay before the animation repeats</li> </ul>"},{"location":"documents/animation/#maliang.animation.MoveWidget","title":"MoveWidget","text":"<pre><code>MoveWidget(\n    widget: virtual.Widget,\n    offset: tuple[float, float],\n    duration: int,\n    *,\n    controller: collections.abc.Callable[[float], float] = controllers.linear,\n    end: collections.abc.Callable[[], typing.Any] | None = None,\n    fps: int = 30,\n    repeat: int = 0,\n    repeat_delay: int = 0,\n)\n</code></pre> <p>               Bases: <code>Animation</code></p> <p>Animation of moving <code>virtual.Widget</code>.</p> <ul> <li><code>widget</code>: the <code>virtual.Widget</code> to be moved</li> <li><code>offset</code>: relative offset of the coordinates</li> <li><code>duration</code>: duration of the animation, in milliseconds</li> <li><code>controller</code>: a function that controls the animation process</li> <li><code>end</code>: end function, which is called once at the end of the animation</li> <li><code>fps</code>: frame rate of the animation</li> <li><code>repeat</code>: number of repetitions of the animation</li> <li><code>repeat_delay</code>: length of the delay before the animation repeats</li> </ul>"},{"location":"documents/animation/#maliang.animation.MoveElement","title":"MoveElement","text":"<pre><code>MoveElement(\n    element: virtual.Element,\n    offset: tuple[float, float],\n    duration: int,\n    *,\n    controller: collections.abc.Callable[[float], float] = controllers.linear,\n    end: collections.abc.Callable[[], typing.Any] | None = None,\n    fps: int = 30,\n    repeat: int = 0,\n    repeat_delay: int = 0,\n)\n</code></pre> <p>               Bases: <code>Animation</code></p> <p>Animation of moving <code>virtual.Element</code>.</p> <ul> <li><code>element</code>: the <code>virtual.Element</code> to be moved</li> <li><code>offset</code>: relative offset of the coordinates</li> <li><code>duration</code>: duration of the animation, in milliseconds</li> <li><code>controller</code>: a function that controls the animation process</li> <li><code>end</code>: end function, which is called once at the end of the animation</li> <li><code>fps</code>: frame rate of the animation</li> <li><code>repeat</code>: number of repetitions of the animation</li> <li><code>repeat_delay</code>: length of the delay before the animation repeats</li> </ul>"},{"location":"documents/animation/#maliang.animation.MoveItem","title":"MoveItem","text":"<pre><code>MoveItem(\n    canvas: tkinter.Canvas | containers.Canvas,\n    item: int,\n    offset: tuple[float, float],\n    duration: int,\n    *,\n    controller: collections.abc.Callable[[float], float] = controllers.linear,\n    end: collections.abc.Callable[[], typing.Any] | None = None,\n    fps: int = 30,\n    repeat: int = 0,\n    repeat_delay: int = 0,\n)\n</code></pre> <p>               Bases: <code>Animation</code></p> <p>Animation of moving a item of <code>tkinter.Canvas</code>.</p> <ul> <li><code>canvas</code>: an instance of <code>tkinter.Canvas</code> that contains the item</li> <li><code>item</code>: the item to be moved</li> <li><code>offset</code>: relative offset of the coordinates</li> <li><code>duration</code>: duration of the animation, in milliseconds</li> <li><code>controller</code>: a function that controls the animation process</li> <li><code>end</code>: end function, which is called once at the end of the animation</li> <li><code>fps</code>: frame rate of the animation</li> <li><code>repeat</code>: number of repetitions of the animation</li> <li><code>repeat_delay</code>: length of the delay before the animation repeats</li> </ul>"},{"location":"documents/animation/#maliang.animation.GradientTkWidget","title":"GradientTkWidget","text":"<pre><code>GradientTkWidget(\n    widget: tkinter.Widget,\n    parameter: str,\n    colors: tuple[str, str],\n    duration: int,\n    *,\n    controller: collections.abc.Callable[[float], float] = controllers.linear,\n    end: collections.abc.Callable[[], typing.Any] | None = None,\n    fps: int = 30,\n    repeat: int = 0,\n    repeat_delay: int = 0,\n    derivation: bool = False,\n)\n</code></pre> <p>               Bases: <code>Animation</code></p> <p>Animation of making the color of <code>tkinter.Widget</code> to be gradient.</p> <ul> <li><code>widget</code>: the <code>tkinter.Widget</code> whose color is to be gradient</li> <li><code>parameter</code>: parameter name of widget that is to be modified in color</li> <li><code>colors</code>: a tuple of the initial and ending colors</li> <li><code>duration</code>: duration of the animation, in milliseconds</li> <li><code>controller</code>: a function that controls the animation process</li> <li><code>end</code>: end function, which is called once at the end of the animation</li> <li><code>fps</code>: frame rate of the animation</li> <li><code>repeat</code>: number of repetitions of the animation</li> <li><code>repeat_delay</code>: length of the delay before the animation repeats</li> <li><code>derivation</code>: whether the callback function is derivative</li> </ul>"},{"location":"documents/animation/#maliang.animation.GradientItem","title":"GradientItem","text":"<pre><code>GradientItem(\n    canvas: tkinter.Canvas | containers.Canvas,\n    item: int,\n    parameter: str,\n    colors: tuple[str, str],\n    duration: int,\n    *,\n    controller: collections.abc.Callable[[float], float] = controllers.linear,\n    end: collections.abc.Callable[[], typing.Any] | None = None,\n    fps: int = 30,\n    repeat: int = 0,\n    repeat_delay: int = 0,\n    derivation: bool = False,\n)\n</code></pre> <p>               Bases: <code>Animation</code></p> <p>Animation of making the color of canvas item to be gradient.</p> <ul> <li><code>canvas</code>: an instance of <code>tkinter.Canvas</code> that contains the item</li> <li><code>item</code>: item whose color is to be gradient</li> <li><code>parameter</code>: parameter name of item that is to be modified in color</li> <li><code>colors</code>: a tuple of the initial and ending colors</li> <li><code>duration</code>: duration of the animation, in milliseconds</li> <li><code>controller</code>: a function that controls the animation process</li> <li><code>end</code>: end function, which is called once at the end of the animation</li> <li><code>fps</code>: frame rate of the animation</li> <li><code>repeat</code>: number of repetitions of the animation</li> <li><code>repeat_delay</code>: length of the delay before the animation repeats</li> <li><code>derivation</code>: whether the callback function is derivative</li> </ul>"},{"location":"documents/animation/#maliang.animation.ScaleFontSize","title":"ScaleFontSize","text":"<pre><code>ScaleFontSize(\n    text: virtual.Text,\n    sizes: float,\n    duration: int,\n    *,\n    controller: collections.abc.Callable[[float], float] = controllers.linear,\n    end: collections.abc.Callable[[], typing.Any] | None = None,\n    fps: int = 30,\n    repeat: int = 0,\n    repeat_delay: int = 0,\n    derivation: bool = False,\n)\n</code></pre><pre><code>ScaleFontSize(\n    text: virtual.Text,\n    sizes: tuple[float, float],\n    duration: int,\n    *,\n    controller: collections.abc.Callable[[float], float] = controllers.linear,\n    end: collections.abc.Callable[[], typing.Any] | None = None,\n    fps: int = 30,\n    repeat: int = 0,\n    repeat_delay: int = 0,\n    derivation: bool = False,\n)\n</code></pre> <pre><code>ScaleFontSize(\n    text: virtual.Text,\n    sizes: float | tuple[float, float],\n    duration: int,\n    *,\n    controller: collections.abc.Callable[[float], float] = controllers.linear,\n    end: collections.abc.Callable[[], typing.Any] | None = None,\n    fps: int = 30,\n    repeat: int = 0,\n    repeat_delay: int = 0,\n    derivation: bool = False,\n)\n</code></pre> <p>               Bases: <code>Animation</code></p> <p>Animation of scaling the font size of <code>virtual.Text</code>.</p> <ul> <li><code>text</code>: an instance of <code>virtual.Text</code> that needs to be scaled</li> <li><code>sizes</code>: a tuple of the initial and ending sizes or target font size</li> <li><code>duration</code>: duration of the animation, in milliseconds</li> <li><code>controller</code>: a function that controls the animation process</li> <li><code>end</code>: end function, which is called once at the end of the animation</li> <li><code>fps</code>: frame rate of the animation</li> <li><code>repeat</code>: number of repetitions of the animation</li> <li><code>repeat_delay</code>: length of the delay before the animation repeats</li> <li><code>derivation</code>: whether the callback function is derivative</li> </ul>"},{"location":"documents/animation/#maliang.animation.generate","title":"generate","text":"<pre><code>generate(\n    base: collections.abc.Callable[[float], float], start: float, end: float\n) -&gt; collections.abc.Callable[[float], float]\n</code></pre><pre><code>generate(\n    base: collections.abc.Callable[[float], float],\n    start: float,\n    end: float,\n    *,\n    map_y: typing.Literal[False] = False,\n) -&gt; collections.abc.Callable[[float], float]\n</code></pre> <pre><code>generate(\n    base: collections.abc.Callable[[float], float], start: float, end: float, *, map_y: bool = True\n) -&gt; collections.abc.Callable[[float], float]\n</code></pre> <p>Generate a control function from an ordinary mathematical function.</p> <ul> <li><code>base</code>: base function, an ordinary mathematical function</li> <li><code>start</code>: the first value of the parameter of the base function</li> <li><code>end</code>: the last value of the parameter of the base function</li> <li><code>map_y</code>: whether map the final return value to 1</li> </ul>"},{"location":"documents/animation/#maliang.animation.linear","title":"linear","text":"<pre><code>linear(t: int) -&gt; int\n</code></pre><pre><code>linear(t: float) -&gt; float\n</code></pre> <pre><code>linear(t: float) -&gt; float\n</code></pre> <p>Speed remains the same.</p> <ul> <li><code>t</code>: the percentage of time</li> </ul>"},{"location":"documents/animation/#maliang.animation.smooth","title":"smooth","text":"<pre><code>smooth(t: float) -&gt; float\n</code></pre> <p>Speed is slow first, then fast and then slow. (slow -&gt; fast -&gt; slow)</p> <ul> <li><code>t</code>: the percentage of time</li> </ul>"},{"location":"documents/animation/#maliang.animation.rebound","title":"rebound","text":"<pre><code>rebound(t: float) -&gt; float\n</code></pre> <p>Before the end, displacement will bounce off a bit.</p> <ul> <li><code>t</code>: the percentage of time</li> </ul>"},{"location":"documents/animation/#maliang.animation.ease_in","title":"ease_in","text":"<pre><code>ease_in(t: float) -&gt; float\n</code></pre> <p>Gradually accelerate. (slow -&gt; fast)</p> <ul> <li><code>t</code>: the percentage of time</li> </ul>"},{"location":"documents/animation/#maliang.animation.ease_out","title":"ease_out","text":"<pre><code>ease_out(t: float) -&gt; float\n</code></pre> <p>Gradually decelerate. (fast -&gt; slow)</p> <ul> <li><code>t</code>: the percentage of time</li> </ul>"},{"location":"documents/animation/animations/","title":"maliang.animation.animations","text":"<p> \u5b57\u6570 9 \u4e2a \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p> \u6e90\u4ee3\u7801\uff1a<code>maliang/animation/animations.py</code></p> <p>Base and standard animation classes.</p> <p>The animation base class can be inherited or called directly. Other standard animation classes are best used by direct calls, rather than inheritance.</p> <p>\u7c7b\uff1a</p> <ul> <li> <code>Animation</code>           \u2013            <p>Base animation class.</p> </li> <li> <code>MoveWindow</code>           \u2013            <p>Animation of moving the window.</p> </li> <li> <code>MoveTkWidget</code>           \u2013            <p>Animation of moving <code>tkinter.Widget</code>.</p> </li> <li> <code>MoveWidget</code>           \u2013            <p>Animation of moving <code>virtual.Widget</code>.</p> </li> <li> <code>MoveElement</code>           \u2013            <p>Animation of moving <code>virtual.Element</code>.</p> </li> <li> <code>MoveItem</code>           \u2013            <p>Animation of moving a item of <code>tkinter.Canvas</code>.</p> </li> <li> <code>GradientTkWidget</code>           \u2013            <p>Animation of making the color of <code>tkinter.Widget</code> to be gradient.</p> </li> <li> <code>GradientItem</code>           \u2013            <p>Animation of making the color of canvas item to be gradient.</p> </li> <li> <code>ScaleFontSize</code>           \u2013            <p>Animation of scaling the font size of <code>virtual.Text</code>.</p> </li> </ul>"},{"location":"documents/animation/animations/#maliang.animation.animations.Animation","title":"Animation","text":"<pre><code>Animation(\n    duration: int,\n    command: collections.abc.Callable[[float], typing.Any],\n    *,\n    controller: collections.abc.Callable[[float], float] = controllers.linear,\n    end: collections.abc.Callable[[], typing.Any] | None = None,\n    fps: int = 30,\n    repeat: int = 0,\n    repeat_delay: int = 0,\n    derivation: bool = False,\n)\n</code></pre> <p>Base animation class.</p> <ul> <li><code>duration</code>: duration of the animation, in milliseconds</li> <li><code>command</code>: callback function, which will be called once per frame</li> <li><code>controller</code>: a function that controls the animation process</li> <li><code>end</code>: end function, which is called once at the end of the animation</li> <li><code>fps</code>: frame rate of the animation</li> <li><code>repeat</code>: number of repetitions of the animation</li> <li><code>repeat_delay</code>: length of the delay before the animation repeats</li> <li><code>derivation</code>: whether the callback function is derivative</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>start</code>             \u2013              <p>Start the animation.</p> </li> <li> <code>stop</code>             \u2013              <p>Stop the animation.</p> </li> <li> <code>skip</code>             \u2013              <p>Skip some loops.</p> </li> </ul> <p>\u5c5e\u6027\uff1a</p> <ul> <li> <code>active</code>               (<code>bool</code>)           \u2013            <p>Returns the active state of the animation.</p> </li> <li> <code>count</code>               (<code>int</code>)           \u2013            <p>Returns the number of loops remaining.</p> </li> </ul>"},{"location":"documents/animation/animations/#maliang.animation.animations.Animation.active","title":"active  <code>property</code>","text":"<pre><code>active: bool\n</code></pre> <p>Returns the active state of the animation.</p>"},{"location":"documents/animation/animations/#maliang.animation.animations.Animation.count","title":"count  <code>property</code>","text":"<pre><code>count: int\n</code></pre> <p>Returns the number of loops remaining.</p>"},{"location":"documents/animation/animations/#maliang.animation.animations.Animation.start","title":"start","text":"<pre><code>start() -&gt; None\n</code></pre><pre><code>start(*, delay: int) -&gt; str\n</code></pre> <pre><code>start(*, delay: int = 0) -&gt; str | None\n</code></pre> <p>Start the animation.</p> <ul> <li><code>delay</code>: length of the delay before the animation starts</li> </ul>"},{"location":"documents/animation/animations/#maliang.animation.animations.Animation.stop","title":"stop","text":"<pre><code>stop() -&gt; None\n</code></pre><pre><code>stop(*, delay: int) -&gt; str\n</code></pre> <pre><code>stop(*, delay: int = 0) -&gt; str | None\n</code></pre> <p>Stop the animation.</p> <ul> <li><code>delay</code>: length of the delay before the animation stops</li> </ul>"},{"location":"documents/animation/animations/#maliang.animation.animations.Animation.skip","title":"skip","text":"<pre><code>skip(count: int = 1) -&gt; None\n</code></pre> <p>Skip some loops.</p> <ul> <li><code>count</code>: count of skipping</li> </ul>"},{"location":"documents/animation/animations/#maliang.animation.animations.MoveWindow","title":"MoveWindow","text":"<pre><code>MoveWindow(\n    window: tkinter.Tk | tkinter.Toplevel | containers.Tk | containers.Toplevel,\n    offset: tuple[float, float],\n    duration: int,\n    *,\n    controller: collections.abc.Callable[[float], float] = controllers.linear,\n    end: collections.abc.Callable[[], typing.Any] | None = None,\n    fps: int = 30,\n    repeat: int = 0,\n    repeat_delay: int = 0,\n)\n</code></pre> <p>               Bases: <code>Animation</code></p> <p>Animation of moving the window.</p> <ul> <li><code>window</code>: the window to be moved</li> <li><code>offset</code>: relative offset of the coordinates</li> <li><code>duration</code>: duration of the animation, in milliseconds</li> <li><code>controller</code>: a function that controls the animation process</li> <li><code>end</code>: end function, which is called once at the end of the animation</li> <li><code>fps</code>: frame rate of the animation</li> <li><code>repeat</code>: number of repetitions of the animation</li> <li><code>repeat_delay</code>: length of the delay before the animation repeats</li> </ul>"},{"location":"documents/animation/animations/#maliang.animation.animations.MoveTkWidget","title":"MoveTkWidget","text":"<pre><code>MoveTkWidget(\n    widget: tkinter.Widget,\n    offset: tuple[float, float],\n    duration: int,\n    *,\n    controller: collections.abc.Callable[[float], float] = controllers.linear,\n    end: collections.abc.Callable[[], typing.Any] | None = None,\n    fps: int = 30,\n    repeat: int = 0,\n    repeat_delay: int = 0,\n)\n</code></pre> <p>               Bases: <code>Animation</code></p> <p>Animation of moving <code>tkinter.Widget</code>.</p> <ul> <li><code>widget</code>: the <code>tkinter.Widget</code> to be moved</li> <li><code>offset</code>: relative offset of the coordinates</li> <li><code>duration</code>: duration of the animation, in milliseconds</li> <li><code>controller</code>: a function that controls the animation process</li> <li><code>end</code>: end function, which is called once at the end of the animation</li> <li><code>fps</code>: frame rate of the animation</li> <li><code>repeat</code>: number of repetitions of the animation</li> <li><code>repeat_delay</code>: length of the delay before the animation repeats</li> </ul>"},{"location":"documents/animation/animations/#maliang.animation.animations.MoveWidget","title":"MoveWidget","text":"<pre><code>MoveWidget(\n    widget: virtual.Widget,\n    offset: tuple[float, float],\n    duration: int,\n    *,\n    controller: collections.abc.Callable[[float], float] = controllers.linear,\n    end: collections.abc.Callable[[], typing.Any] | None = None,\n    fps: int = 30,\n    repeat: int = 0,\n    repeat_delay: int = 0,\n)\n</code></pre> <p>               Bases: <code>Animation</code></p> <p>Animation of moving <code>virtual.Widget</code>.</p> <ul> <li><code>widget</code>: the <code>virtual.Widget</code> to be moved</li> <li><code>offset</code>: relative offset of the coordinates</li> <li><code>duration</code>: duration of the animation, in milliseconds</li> <li><code>controller</code>: a function that controls the animation process</li> <li><code>end</code>: end function, which is called once at the end of the animation</li> <li><code>fps</code>: frame rate of the animation</li> <li><code>repeat</code>: number of repetitions of the animation</li> <li><code>repeat_delay</code>: length of the delay before the animation repeats</li> </ul>"},{"location":"documents/animation/animations/#maliang.animation.animations.MoveElement","title":"MoveElement","text":"<pre><code>MoveElement(\n    element: virtual.Element,\n    offset: tuple[float, float],\n    duration: int,\n    *,\n    controller: collections.abc.Callable[[float], float] = controllers.linear,\n    end: collections.abc.Callable[[], typing.Any] | None = None,\n    fps: int = 30,\n    repeat: int = 0,\n    repeat_delay: int = 0,\n)\n</code></pre> <p>               Bases: <code>Animation</code></p> <p>Animation of moving <code>virtual.Element</code>.</p> <ul> <li><code>element</code>: the <code>virtual.Element</code> to be moved</li> <li><code>offset</code>: relative offset of the coordinates</li> <li><code>duration</code>: duration of the animation, in milliseconds</li> <li><code>controller</code>: a function that controls the animation process</li> <li><code>end</code>: end function, which is called once at the end of the animation</li> <li><code>fps</code>: frame rate of the animation</li> <li><code>repeat</code>: number of repetitions of the animation</li> <li><code>repeat_delay</code>: length of the delay before the animation repeats</li> </ul>"},{"location":"documents/animation/animations/#maliang.animation.animations.MoveItem","title":"MoveItem","text":"<pre><code>MoveItem(\n    canvas: tkinter.Canvas | containers.Canvas,\n    item: int,\n    offset: tuple[float, float],\n    duration: int,\n    *,\n    controller: collections.abc.Callable[[float], float] = controllers.linear,\n    end: collections.abc.Callable[[], typing.Any] | None = None,\n    fps: int = 30,\n    repeat: int = 0,\n    repeat_delay: int = 0,\n)\n</code></pre> <p>               Bases: <code>Animation</code></p> <p>Animation of moving a item of <code>tkinter.Canvas</code>.</p> <ul> <li><code>canvas</code>: an instance of <code>tkinter.Canvas</code> that contains the item</li> <li><code>item</code>: the item to be moved</li> <li><code>offset</code>: relative offset of the coordinates</li> <li><code>duration</code>: duration of the animation, in milliseconds</li> <li><code>controller</code>: a function that controls the animation process</li> <li><code>end</code>: end function, which is called once at the end of the animation</li> <li><code>fps</code>: frame rate of the animation</li> <li><code>repeat</code>: number of repetitions of the animation</li> <li><code>repeat_delay</code>: length of the delay before the animation repeats</li> </ul>"},{"location":"documents/animation/animations/#maliang.animation.animations.GradientTkWidget","title":"GradientTkWidget","text":"<pre><code>GradientTkWidget(\n    widget: tkinter.Widget,\n    parameter: str,\n    colors: tuple[str, str],\n    duration: int,\n    *,\n    controller: collections.abc.Callable[[float], float] = controllers.linear,\n    end: collections.abc.Callable[[], typing.Any] | None = None,\n    fps: int = 30,\n    repeat: int = 0,\n    repeat_delay: int = 0,\n    derivation: bool = False,\n)\n</code></pre> <p>               Bases: <code>Animation</code></p> <p>Animation of making the color of <code>tkinter.Widget</code> to be gradient.</p> <ul> <li><code>widget</code>: the <code>tkinter.Widget</code> whose color is to be gradient</li> <li><code>parameter</code>: parameter name of widget that is to be modified in color</li> <li><code>colors</code>: a tuple of the initial and ending colors</li> <li><code>duration</code>: duration of the animation, in milliseconds</li> <li><code>controller</code>: a function that controls the animation process</li> <li><code>end</code>: end function, which is called once at the end of the animation</li> <li><code>fps</code>: frame rate of the animation</li> <li><code>repeat</code>: number of repetitions of the animation</li> <li><code>repeat_delay</code>: length of the delay before the animation repeats</li> <li><code>derivation</code>: whether the callback function is derivative</li> </ul>"},{"location":"documents/animation/animations/#maliang.animation.animations.GradientItem","title":"GradientItem","text":"<pre><code>GradientItem(\n    canvas: tkinter.Canvas | containers.Canvas,\n    item: int,\n    parameter: str,\n    colors: tuple[str, str],\n    duration: int,\n    *,\n    controller: collections.abc.Callable[[float], float] = controllers.linear,\n    end: collections.abc.Callable[[], typing.Any] | None = None,\n    fps: int = 30,\n    repeat: int = 0,\n    repeat_delay: int = 0,\n    derivation: bool = False,\n)\n</code></pre> <p>               Bases: <code>Animation</code></p> <p>Animation of making the color of canvas item to be gradient.</p> <ul> <li><code>canvas</code>: an instance of <code>tkinter.Canvas</code> that contains the item</li> <li><code>item</code>: item whose color is to be gradient</li> <li><code>parameter</code>: parameter name of item that is to be modified in color</li> <li><code>colors</code>: a tuple of the initial and ending colors</li> <li><code>duration</code>: duration of the animation, in milliseconds</li> <li><code>controller</code>: a function that controls the animation process</li> <li><code>end</code>: end function, which is called once at the end of the animation</li> <li><code>fps</code>: frame rate of the animation</li> <li><code>repeat</code>: number of repetitions of the animation</li> <li><code>repeat_delay</code>: length of the delay before the animation repeats</li> <li><code>derivation</code>: whether the callback function is derivative</li> </ul>"},{"location":"documents/animation/animations/#maliang.animation.animations.ScaleFontSize","title":"ScaleFontSize","text":"<pre><code>ScaleFontSize(\n    text: virtual.Text,\n    sizes: float,\n    duration: int,\n    *,\n    controller: collections.abc.Callable[[float], float] = controllers.linear,\n    end: collections.abc.Callable[[], typing.Any] | None = None,\n    fps: int = 30,\n    repeat: int = 0,\n    repeat_delay: int = 0,\n    derivation: bool = False,\n)\n</code></pre><pre><code>ScaleFontSize(\n    text: virtual.Text,\n    sizes: tuple[float, float],\n    duration: int,\n    *,\n    controller: collections.abc.Callable[[float], float] = controllers.linear,\n    end: collections.abc.Callable[[], typing.Any] | None = None,\n    fps: int = 30,\n    repeat: int = 0,\n    repeat_delay: int = 0,\n    derivation: bool = False,\n)\n</code></pre> <pre><code>ScaleFontSize(\n    text: virtual.Text,\n    sizes: float | tuple[float, float],\n    duration: int,\n    *,\n    controller: collections.abc.Callable[[float], float] = controllers.linear,\n    end: collections.abc.Callable[[], typing.Any] | None = None,\n    fps: int = 30,\n    repeat: int = 0,\n    repeat_delay: int = 0,\n    derivation: bool = False,\n)\n</code></pre> <p>               Bases: <code>Animation</code></p> <p>Animation of scaling the font size of <code>virtual.Text</code>.</p> <ul> <li><code>text</code>: an instance of <code>virtual.Text</code> that needs to be scaled</li> <li><code>sizes</code>: a tuple of the initial and ending sizes or target font size</li> <li><code>duration</code>: duration of the animation, in milliseconds</li> <li><code>controller</code>: a function that controls the animation process</li> <li><code>end</code>: end function, which is called once at the end of the animation</li> <li><code>fps</code>: frame rate of the animation</li> <li><code>repeat</code>: number of repetitions of the animation</li> <li><code>repeat_delay</code>: length of the delay before the animation repeats</li> <li><code>derivation</code>: whether the callback function is derivative</li> </ul>"},{"location":"documents/animation/controllers/","title":"maliang.animation.controllers","text":"<p> \u5b57\u6570 9 \u4e2a \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p> \u6e90\u4ee3\u7801\uff1a<code>maliang/animation/controllers.py</code></p> <p>Controller generator and standard control functions.</p> <p>Definition of control function:</p> <pre><code>def f(t: float) -&gt; float: ...\n</code></pre> <ul> <li><code>t</code>: 0% ~ 100%, indicates the percentage of time</li> <li>return: real number, indicates a multiple of the cardinality of the animation</li> </ul> <p>\u51fd\u6570\uff1a</p> <ul> <li> <code>generate</code>             \u2013              <p>Generate a control function from an ordinary mathematical function.</p> </li> <li> <code>linear</code>             \u2013              <p>Speed remains the same.</p> </li> <li> <code>smooth</code>             \u2013              <p>Speed is slow first, then fast and then slow. (slow -&gt; fast -&gt; slow)</p> </li> <li> <code>rebound</code>             \u2013              <p>Before the end, displacement will bounce off a bit.</p> </li> <li> <code>ease_in</code>             \u2013              <p>Gradually accelerate. (slow -&gt; fast)</p> </li> <li> <code>ease_out</code>             \u2013              <p>Gradually decelerate. (fast -&gt; slow)</p> </li> </ul>"},{"location":"documents/animation/controllers/#maliang.animation.controllers.generate","title":"generate","text":"<pre><code>generate(\n    base: collections.abc.Callable[[float], float], start: float, end: float\n) -&gt; collections.abc.Callable[[float], float]\n</code></pre><pre><code>generate(\n    base: collections.abc.Callable[[float], float],\n    start: float,\n    end: float,\n    *,\n    map_y: typing.Literal[False] = False,\n) -&gt; collections.abc.Callable[[float], float]\n</code></pre> <pre><code>generate(\n    base: collections.abc.Callable[[float], float], start: float, end: float, *, map_y: bool = True\n) -&gt; collections.abc.Callable[[float], float]\n</code></pre> <p>Generate a control function from an ordinary mathematical function.</p> <ul> <li><code>base</code>: base function, an ordinary mathematical function</li> <li><code>start</code>: the first value of the parameter of the base function</li> <li><code>end</code>: the last value of the parameter of the base function</li> <li><code>map_y</code>: whether map the final return value to 1</li> </ul>"},{"location":"documents/animation/controllers/#maliang.animation.controllers.linear","title":"linear","text":"<pre><code>linear(t: int) -&gt; int\n</code></pre><pre><code>linear(t: float) -&gt; float\n</code></pre> <pre><code>linear(t: float) -&gt; float\n</code></pre> <p>Speed remains the same.</p> <ul> <li><code>t</code>: the percentage of time</li> </ul>"},{"location":"documents/animation/controllers/#maliang.animation.controllers.smooth","title":"smooth","text":"<pre><code>smooth(t: float) -&gt; float\n</code></pre> <p>Speed is slow first, then fast and then slow. (slow -&gt; fast -&gt; slow)</p> <ul> <li><code>t</code>: the percentage of time</li> </ul>"},{"location":"documents/animation/controllers/#maliang.animation.controllers.rebound","title":"rebound","text":"<pre><code>rebound(t: float) -&gt; float\n</code></pre> <p>Before the end, displacement will bounce off a bit.</p> <ul> <li><code>t</code>: the percentage of time</li> </ul>"},{"location":"documents/animation/controllers/#maliang.animation.controllers.ease_in","title":"ease_in","text":"<pre><code>ease_in(t: float) -&gt; float\n</code></pre> <p>Gradually accelerate. (slow -&gt; fast)</p> <ul> <li><code>t</code>: the percentage of time</li> </ul>"},{"location":"documents/animation/controllers/#maliang.animation.controllers.ease_out","title":"ease_out","text":"<pre><code>ease_out(t: float) -&gt; float\n</code></pre> <p>Gradually decelerate. (fast -&gt; slow)</p> <ul> <li><code>t</code>: the percentage of time</li> </ul>"},{"location":"documents/color/","title":"maliang.color","text":"<p> \u5b57\u6570 11 \u4e2a \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p> \u6e90\u4ee3\u7801\uff1a<code>maliang/color/__init__.py</code></p> <p>A subpackage that provides color-related features.</p> <p>Supports the processing of color strings in RGB and HSL formats, as well as the conversion between color names and color codes.</p> <p>\u6a21\u5757\uff1a</p> <ul> <li> <code>colortable</code>           \u2013            <p>Mapping table between the color names and the RGB codes.</p> </li> <li> <code>convert</code>           \u2013            <p>Convert a format of color to another format.</p> </li> <li> <code>hsl</code>           \u2013            <p>Some functions about HSL codes.</p> </li> <li> <code>rgb</code>           \u2013            <p>Some functions about RGB codes.</p> </li> </ul> <p>\u51fd\u6570\uff1a</p> <ul> <li> <code>rgb_to_hex</code>             \u2013              <p>Convert a RGB code to a hexadecimal code.</p> </li> <li> <code>hex_to_rgb</code>             \u2013              <p>Convert a hexadecimal code to a RGB code.</p> </li> <li> <code>rgba_to_hex</code>             \u2013              <p>Convert a RGBA code to a hexadecimal code.</p> </li> <li> <code>hex_to_rgba</code>             \u2013              <p>Convert a hexadecimal code to a RGBA code.</p> </li> <li> <code>hsl_to_rgb</code>             \u2013              <p>Convert a HSL code to a RGB code.</p> </li> <li> <code>rgb_to_hsl</code>             \u2013              <p>Convert a RGB code to a HSL code.</p> </li> <li> <code>hsl_to_hex</code>             \u2013              <p>Convert a HSL code to a hexadecimal code.</p> </li> <li> <code>hex_to_hsl</code>             \u2013              <p>Convert a hexadecimal code to a HSL code.</p> </li> <li> <code>name_to_rgb</code>             \u2013              <p>Convert a color name to a RGB code.</p> </li> <li> <code>rgb_to_name</code>             \u2013              <p>Convert a RGB code to a color name.</p> </li> <li> <code>name_to_hex</code>             \u2013              <p>Convert a color name to a hexadecimal code.</p> </li> <li> <code>hex_to_name</code>             \u2013              <p>Convert a hexadecimal code to a color name.</p> </li> <li> <code>fix_hex_length</code>             \u2013              <p>Fix the length of a hexadecimal code.</p> </li> <li> <code>str_to_rgb</code>             \u2013              <p>Convert a color name or a hexadecimal code to a RGB code.</p> </li> </ul>"},{"location":"documents/color/#maliang.color.rgb_to_hex","title":"rgb_to_hex","text":"<pre><code>rgb_to_hex(value: tuple[int, int, int]) -&gt; str\n</code></pre> <p>Convert a RGB code to a hexadecimal code.</p> <ul> <li><code>value</code>: a RGB code</li> </ul>"},{"location":"documents/color/#maliang.color.hex_to_rgb","title":"hex_to_rgb","text":"<pre><code>hex_to_rgb(value: str) -&gt; tuple[int, int, int]\n</code></pre> <p>Convert a hexadecimal code to a RGB code.</p> <ul> <li><code>value</code>: a hexadecimal code</li> </ul>"},{"location":"documents/color/#maliang.color.rgba_to_hex","title":"rgba_to_hex","text":"<pre><code>rgba_to_hex(value: tuple[int, int, int, float]) -&gt; str\n</code></pre> <p>Convert a RGBA code to a hexadecimal code.</p> <ul> <li><code>value</code>: a RGBA code</li> </ul>"},{"location":"documents/color/#maliang.color.hex_to_rgba","title":"hex_to_rgba","text":"<pre><code>hex_to_rgba(value: str) -&gt; tuple[int, int, int, float]\n</code></pre> <p>Convert a hexadecimal code to a RGBA code.</p> <ul> <li><code>value</code>: a hexadecimal code</li> </ul>"},{"location":"documents/color/#maliang.color.hsl_to_rgb","title":"hsl_to_rgb","text":"<pre><code>hsl_to_rgb(value: tuple[float, float, float]) -&gt; tuple[int, int, int]\n</code></pre> <p>Convert a HSL code to a RGB code.</p> <ul> <li><code>value</code>: a HSL code</li> </ul>"},{"location":"documents/color/#maliang.color.rgb_to_hsl","title":"rgb_to_hsl","text":"<pre><code>rgb_to_hsl(value: tuple[int, int, int]) -&gt; tuple[float, float, float]\n</code></pre> <p>Convert a RGB code to a HSL code.</p> <ul> <li><code>value</code>: a RGB code</li> </ul>"},{"location":"documents/color/#maliang.color.hsl_to_hex","title":"hsl_to_hex","text":"<pre><code>hsl_to_hex(value: tuple[float, float, float]) -&gt; str\n</code></pre> <p>Convert a HSL code to a hexadecimal code.</p> <ul> <li><code>value</code>: a HSL code</li> </ul>"},{"location":"documents/color/#maliang.color.hex_to_hsl","title":"hex_to_hsl","text":"<pre><code>hex_to_hsl(value: str) -&gt; tuple[float, float, float]\n</code></pre> <p>Convert a hexadecimal code to a HSL code.</p> <ul> <li><code>value</code>: a hexadecimal code</li> </ul>"},{"location":"documents/color/#maliang.color.name_to_rgb","title":"name_to_rgb","text":"<pre><code>name_to_rgb(value: str) -&gt; tuple[int, int, int]\n</code></pre> <p>Convert a color name to a RGB code.</p> <ul> <li><code>value</code>: a color name</li> </ul>"},{"location":"documents/color/#maliang.color.rgb_to_name","title":"rgb_to_name","text":"<pre><code>rgb_to_name(value: tuple[int, int, int]) -&gt; list[str]\n</code></pre> <p>Convert a RGB code to a color name.</p> <ul> <li><code>value</code>: a RGB code</li> </ul>"},{"location":"documents/color/#maliang.color.name_to_hex","title":"name_to_hex","text":"<pre><code>name_to_hex(value: str) -&gt; str\n</code></pre> <p>Convert a color name to a hexadecimal code.</p> <ul> <li><code>value</code>: a color name</li> </ul>"},{"location":"documents/color/#maliang.color.hex_to_name","title":"hex_to_name","text":"<pre><code>hex_to_name(value: str) -&gt; list[str]\n</code></pre> <p>Convert a hexadecimal code to a color name.</p> <ul> <li><code>value</code>: a hexadecimal code</li> </ul>"},{"location":"documents/color/#maliang.color.fix_hex_length","title":"fix_hex_length","text":"<pre><code>fix_hex_length(value: str) -&gt; str\n</code></pre> <p>Fix the length of a hexadecimal code.</p> <ul> <li><code>value</code>: a hexadecimal code</li> </ul>"},{"location":"documents/color/#maliang.color.str_to_rgb","title":"str_to_rgb","text":"<pre><code>str_to_rgb(value: str) -&gt; tuple[int, int, int]\n</code></pre> <p>Convert a color name or a hexadecimal code to a RGB code.</p> <ul> <li><code>value</code>: a color name or a hexadecimal code</li> </ul>"},{"location":"documents/color/colortable/","title":"maliang.color.colortable","text":"<p> \u5b57\u6570 9 \u4e2a \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p> \u6e90\u4ee3\u7801\uff1a<code>maliang/color/colortable.py</code></p> <p>Mapping table between the color names and the RGB codes.</p> <p>\u5c5e\u6027\uff1a</p> <ul> <li> <code>MAPPING_TABLE</code>               (<code>typing.Final[dict[str, tuple[int, int, int]]]</code>)           \u2013            <p>Mapping table for color names to RGB codes.</p> </li> </ul>"},{"location":"documents/color/colortable/#maliang.color.colortable.MAPPING_TABLE","title":"MAPPING_TABLE  <code>module-attribute</code>","text":"<pre><code>MAPPING_TABLE: typing.Final[dict[str, tuple[int, int, int]]] = {\n    \"alice blue\": (240, 248, 255),\n    \"aliceblue\": (240, 248, 255),\n    \"antique white\": (250, 235, 215),\n    \"antiquewhite\": (250, 235, 215),\n    \"antiquewhite1\": (255, 239, 219),\n    \"antiquewhite2\": (238, 223, 204),\n    \"antiquewhite3\": (205, 192, 176),\n    \"antiquewhite4\": (139, 131, 120),\n    \"agua\": (0, 255, 255),\n    \"aquamarine\": (127, 255, 212),\n    \"aquamarine1\": (127, 255, 212),\n    \"aquamarine2\": (118, 238, 198),\n    \"aquamarine3\": (102, 205, 170),\n    \"aquamarine4\": (69, 139, 116),\n    \"azure\": (240, 255, 255),\n    \"azure1\": (240, 255, 255),\n    \"azure2\": (224, 238, 238),\n    \"azure3\": (193, 205, 205),\n    \"azure4\": (131, 139, 139),\n    \"beige\": (245, 245, 220),\n    \"bisque\": (255, 228, 196),\n    \"bisque1\": (255, 228, 196),\n    \"bisque2\": (238, 213, 183),\n    \"bisque3\": (205, 183, 158),\n    \"bisque4\": (139, 125, 107),\n    \"black\": (0, 0, 0),\n    \"blanched almond\": (255, 235, 205),\n    \"blanchedalmond\": (255, 235, 205),\n    \"blue\": (0, 0, 255),\n    \"blue violet\": (138, 43, 226),\n    \"blue1\": (0, 0, 255),\n    \"blue2\": (0, 0, 238),\n    \"blue3\": (0, 0, 205),\n    \"blue4\": (0, 0, 139),\n    \"blueviolet\": (138, 43, 226),\n    \"brown\": (165, 42, 42),\n    \"brown1\": (255, 64, 64),\n    \"brown2\": (238, 59, 59),\n    \"brown3\": (205, 51, 51),\n    \"brown4\": (139, 35, 35),\n    \"burlywood\": (222, 184, 135),\n    \"burlywood1\": (255, 211, 155),\n    \"burlywood2\": (238, 197, 145),\n    \"burlywood3\": (205, 170, 125),\n    \"burlywood4\": (139, 115, 85),\n    \"cadet blue\": (95, 158, 160),\n    \"cadetblue\": (95, 158, 160),\n    \"cadetblue1\": (152, 245, 255),\n    \"cadetblue2\": (142, 229, 238),\n    \"cadetblue3\": (122, 197, 205),\n    \"cadetblue4\": (83, 134, 139),\n    \"chartreuse\": (127, 255, 0),\n    \"chartreuse1\": (127, 255, 0),\n    \"chartreuse2\": (118, 238, 0),\n    \"chartreuse3\": (102, 205, 0),\n    \"chartreuse4\": (69, 139, 0),\n    \"chocolate\": (210, 105, 30),\n    \"chocolate1\": (255, 127, 36),\n    \"chocolate2\": (238, 118, 33),\n    \"chocolate3\": (205, 102, 29),\n    \"chocolate4\": (139, 69, 19),\n    \"coral\": (255, 127, 80),\n    \"coral1\": (255, 114, 86),\n    \"coral2\": (238, 106, 80),\n    \"coral3\": (205, 91, 69),\n    \"coral4\": (139, 62, 47),\n    \"cornflower blue\": (100, 149, 237),\n    \"cornflowerblue\": (100, 149, 237),\n    \"cornsilk\": (255, 248, 220),\n    \"cornsilk1\": (255, 248, 220),\n    \"cornsilk2\": (238, 232, 205),\n    \"cornsilk3\": (205, 200, 177),\n    \"cornsilk4\": (139, 136, 120),\n    \"crymson\": (220, 20, 60),\n    \"cyan\": (0, 255, 255),\n    \"cyan1\": (0, 255, 255),\n    \"cyan2\": (0, 238, 238),\n    \"cyan3\": (0, 205, 205),\n    \"cyan4\": (0, 139, 139),\n    \"dark blue\": (0, 0, 139),\n    \"dark cyan\": (0, 139, 139),\n    \"dark goldenrod\": (184, 134, 11),\n    \"dark gray\": (169, 169, 169),\n    \"dark green\": (0, 100, 0),\n    \"dark grey\": (169, 169, 169),\n    \"dark khaki\": (189, 183, 107),\n    \"dark magenta\": (139, 0, 139),\n    \"dark olive green\": (85, 107, 47),\n    \"dark orange\": (255, 140, 0),\n    \"dark orchid\": (153, 50, 204),\n    \"dark red\": (139, 0, 0),\n    \"dark salmon\": (233, 150, 122),\n    \"dark sea green\": (143, 188, 143),\n    \"dark slate blue\": (72, 61, 139),\n    \"dark slate gray\": (47, 79, 79),\n    \"dark slate grey\": (47, 79, 79),\n    \"dark turquoise\": (0, 206, 209),\n    \"dark violet\": (148, 0, 211),\n    \"darkblue\": (0, 0, 139),\n    \"darkcyan\": (0, 139, 139),\n    \"darkgoldenrod\": (184, 134, 11),\n    \"darkgoldenrod1\": (255, 185, 15),\n    \"darkgoldenrod2\": (238, 173, 14),\n    \"darkgoldenrod3\": (205, 149, 12),\n    \"darkgoldenrod4\": (139, 101, 8),\n    \"darkgray\": (169, 169, 169),\n    \"darkgreen\": (0, 100, 0),\n    \"darkgrey\": (169, 169, 169),\n    \"darkkhaki\": (189, 183, 107),\n    \"darkmagenta\": (139, 0, 139),\n    \"darkolivegreen\": (85, 107, 47),\n    \"darkolivegreen1\": (202, 255, 112),\n    \"darkolivegreen2\": (188, 238, 104),\n    \"darkolivegreen3\": (162, 205, 90),\n    \"darkolivegreen4\": (110, 139, 61),\n    \"darkorange\": (255, 140, 0),\n    \"darkorange1\": (255, 127, 0),\n    \"darkorange2\": (238, 118, 0),\n    \"darkorange3\": (205, 102, 0),\n    \"darkorange4\": (139, 69, 0),\n    \"darkorchid\": (153, 50, 204),\n    \"darkorchid1\": (191, 62, 255),\n    \"darkorchid2\": (178, 58, 238),\n    \"darkorchid3\": (154, 50, 205),\n    \"darkorchid4\": (104, 34, 139),\n    \"darkred\": (139, 0, 0),\n    \"darksalmon\": (233, 150, 122),\n    \"darkseagreen\": (143, 188, 143),\n    \"darkseagreen1\": (193, 255, 193),\n    \"darkseagreen2\": (180, 238, 180),\n    \"darkseagreen3\": (155, 205, 155),\n    \"darkseagreen4\": (105, 139, 105),\n    \"darkslateblue\": (72, 61, 139),\n    \"darkslategray\": (47, 79, 79),\n    \"darkslategray1\": (151, 255, 255),\n    \"darkslategray2\": (141, 238, 238),\n    \"darkslategray3\": (121, 205, 205),\n    \"darkslategray4\": (82, 139, 139),\n    \"darkslategrey\": (47, 79, 79),\n    \"darkturquoise\": (0, 206, 209),\n    \"darkviolet\": (148, 0, 211),\n    \"deep pink\": (255, 20, 147),\n    \"deep sky blue\": (0, 191, 255),\n    \"deeppink\": (255, 20, 147),\n    \"deeppink1\": (255, 20, 147),\n    \"deeppink2\": (238, 18, 137),\n    \"deeppink3\": (205, 16, 118),\n    \"deeppink4\": (139, 10, 80),\n    \"deepskyblue\": (0, 191, 255),\n    \"deepskyblue1\": (0, 191, 255),\n    \"deepskyblue2\": (0, 178, 238),\n    \"deepskyblue3\": (0, 154, 205),\n    \"deepskyblue4\": (0, 104, 139),\n    \"dim gray\": (105, 105, 105),\n    \"dim grey\": (105, 105, 105),\n    \"dimgray\": (105, 105, 105),\n    \"dimgrey\": (105, 105, 105),\n    \"dodger blue\": (30, 144, 255),\n    \"dodgerblue\": (30, 144, 255),\n    \"dodgerblue1\": (30, 144, 255),\n    \"dodgerblue2\": (28, 134, 238),\n    \"dodgerblue3\": (24, 116, 205),\n    \"dodgerblue4\": (16, 78, 139),\n    \"firebrick\": (178, 34, 34),\n    \"firebrick1\": (255, 48, 48),\n    \"firebrick2\": (238, 44, 44),\n    \"firebrick3\": (205, 38, 38),\n    \"firebrick4\": (139, 26, 26),\n    \"floral white\": (255, 250, 240),\n    \"floralwhite\": (255, 250, 240),\n    \"forest green\": (34, 139, 34),\n    \"forestgreen\": (34, 139, 34),\n    \"fuchsia\": (255, 0, 255),\n    \"gainsboro\": (220, 220, 220),\n    \"ghost white\": (248, 248, 255),\n    \"ghostwhite\": (248, 248, 255),\n    \"gold\": (255, 215, 0),\n    \"gold1\": (255, 215, 0),\n    \"gold2\": (238, 201, 0),\n    \"gold3\": (205, 173, 0),\n    \"gold4\": (139, 117, 0),\n    \"goldenrod\": (218, 165, 32),\n    \"goldenrod1\": (255, 193, 37),\n    \"goldenrod2\": (238, 180, 34),\n    \"goldenrod3\": (205, 155, 29),\n    \"goldenrod4\": (139, 105, 20),\n    \"gray\": (128, 128, 128),\n    \"gray0\": (0, 0, 0),\n    \"gray1\": (3, 3, 3),\n    \"gray2\": (5, 5, 5),\n    \"gray3\": (8, 8, 8),\n    \"gray4\": (10, 10, 10),\n    \"gray5\": (13, 13, 13),\n    \"gray6\": (15, 15, 15),\n    \"gray7\": (18, 18, 18),\n    \"gray8\": (20, 20, 20),\n    \"gray9\": (23, 23, 23),\n    \"gray10\": (26, 26, 26),\n    \"gray11\": (28, 28, 28),\n    \"gray12\": (31, 31, 31),\n    \"gray13\": (33, 33, 33),\n    \"gray14\": (36, 36, 36),\n    \"gray15\": (38, 38, 38),\n    \"gray16\": (41, 41, 41),\n    \"gray17\": (43, 43, 43),\n    \"gray18\": (46, 46, 46),\n    \"gray19\": (48, 48, 48),\n    \"gray20\": (51, 51, 51),\n    \"gray21\": (54, 54, 54),\n    \"gray22\": (56, 56, 56),\n    \"gray23\": (59, 59, 59),\n    \"gray24\": (61, 61, 61),\n    \"gray25\": (64, 64, 64),\n    \"gray26\": (66, 66, 66),\n    \"gray27\": (69, 69, 69),\n    \"gray28\": (71, 71, 71),\n    \"gray29\": (74, 74, 74),\n    \"gray30\": (77, 77, 77),\n    \"gray31\": (79, 79, 79),\n    \"gray32\": (82, 82, 82),\n    \"gray33\": (84, 84, 84),\n    \"gray34\": (87, 87, 87),\n    \"gray35\": (89, 89, 89),\n    \"gray36\": (92, 92, 92),\n    \"gray37\": (94, 94, 94),\n    \"gray38\": (97, 97, 97),\n    \"gray39\": (99, 99, 99),\n    \"gray40\": (102, 102, 102),\n    \"gray41\": (105, 105, 105),\n    \"gray42\": (107, 107, 107),\n    \"gray43\": (110, 110, 110),\n    \"gray44\": (112, 112, 112),\n    \"gray45\": (115, 115, 115),\n    \"gray46\": (117, 117, 117),\n    \"gray47\": (120, 120, 120),\n    \"gray48\": (122, 122, 122),\n    \"gray49\": (125, 125, 125),\n    \"gray50\": (127, 127, 127),\n    \"gray51\": (130, 130, 130),\n    \"gray52\": (133, 133, 133),\n    \"gray53\": (135, 135, 135),\n    \"gray54\": (138, 138, 138),\n    \"gray55\": (140, 140, 140),\n    \"gray56\": (143, 143, 143),\n    \"gray57\": (145, 145, 145),\n    \"gray58\": (148, 148, 148),\n    \"gray59\": (150, 150, 150),\n    \"gray60\": (153, 153, 153),\n    \"gray61\": (156, 156, 156),\n    \"gray62\": (158, 158, 158),\n    \"gray63\": (161, 161, 161),\n    \"gray64\": (163, 163, 163),\n    \"gray65\": (166, 166, 166),\n    \"gray66\": (168, 168, 168),\n    \"gray67\": (171, 171, 171),\n    \"gray68\": (173, 173, 173),\n    \"gray69\": (176, 176, 176),\n    \"gray70\": (179, 179, 179),\n    \"gray71\": (181, 181, 181),\n    \"gray72\": (184, 184, 184),\n    \"gray73\": (186, 186, 186),\n    \"gray74\": (189, 189, 189),\n    \"gray75\": (191, 191, 191),\n    \"gray76\": (194, 194, 194),\n    \"gray77\": (196, 196, 196),\n    \"gray78\": (199, 199, 199),\n    \"gray79\": (201, 201, 201),\n    \"gray80\": (204, 204, 204),\n    \"gray81\": (207, 207, 207),\n    \"gray82\": (209, 209, 209),\n    \"gray83\": (212, 212, 212),\n    \"gray84\": (214, 214, 214),\n    \"gray85\": (217, 217, 217),\n    \"gray86\": (219, 219, 219),\n    \"gray87\": (222, 222, 222),\n    \"gray88\": (224, 224, 224),\n    \"gray89\": (227, 227, 227),\n    \"gray90\": (229, 229, 229),\n    \"gray91\": (232, 232, 232),\n    \"gray92\": (235, 235, 235),\n    \"gray93\": (237, 237, 237),\n    \"gray94\": (240, 240, 240),\n    \"gray95\": (242, 242, 242),\n    \"gray96\": (245, 245, 245),\n    \"gray97\": (247, 247, 247),\n    \"gray98\": (250, 250, 250),\n    \"gray99\": (252, 252, 252),\n    \"gray100\": (255, 255, 255),\n    \"green\": (0, 128, 0),\n    \"green yellow\": (173, 255, 47),\n    \"green1\": (0, 255, 0),\n    \"green2\": (0, 238, 0),\n    \"green3\": (0, 205, 0),\n    \"green4\": (0, 139, 0),\n    \"greenyellow\": (173, 255, 47),\n    \"grey\": (128, 128, 128),\n    \"grey0\": (0, 0, 0),\n    \"grey1\": (3, 3, 3),\n    \"grey2\": (5, 5, 5),\n    \"grey3\": (8, 8, 8),\n    \"grey4\": (10, 10, 10),\n    \"grey5\": (13, 13, 13),\n    \"grey6\": (15, 15, 15),\n    \"grey7\": (18, 18, 18),\n    \"grey8\": (20, 20, 20),\n    \"grey9\": (23, 23, 23),\n    \"grey10\": (26, 26, 26),\n    \"grey11\": (28, 28, 28),\n    \"grey12\": (31, 31, 31),\n    \"grey13\": (33, 33, 33),\n    \"grey14\": (36, 36, 36),\n    \"grey15\": (38, 38, 38),\n    \"grey16\": (41, 41, 41),\n    \"grey17\": (43, 43, 43),\n    \"grey18\": (46, 46, 46),\n    \"grey19\": (48, 48, 48),\n    \"grey20\": (51, 51, 51),\n    \"grey21\": (54, 54, 54),\n    \"grey22\": (56, 56, 56),\n    \"grey23\": (59, 59, 59),\n    \"grey24\": (61, 61, 61),\n    \"grey25\": (64, 64, 64),\n    \"grey26\": (66, 66, 66),\n    \"grey27\": (69, 69, 69),\n    \"grey28\": (71, 71, 71),\n    \"grey29\": (74, 74, 74),\n    \"grey30\": (77, 77, 77),\n    \"grey31\": (79, 79, 79),\n    \"grey32\": (82, 82, 82),\n    \"grey33\": (84, 84, 84),\n    \"grey34\": (87, 87, 87),\n    \"grey35\": (89, 89, 89),\n    \"grey36\": (92, 92, 92),\n    \"grey37\": (94, 94, 94),\n    \"grey38\": (97, 97, 97),\n    \"grey39\": (99, 99, 99),\n    \"grey40\": (102, 102, 102),\n    \"grey41\": (105, 105, 105),\n    \"grey42\": (107, 107, 107),\n    \"grey43\": (110, 110, 110),\n    \"grey44\": (112, 112, 112),\n    \"grey45\": (115, 115, 115),\n    \"grey46\": (117, 117, 117),\n    \"grey47\": (120, 120, 120),\n    \"grey48\": (122, 122, 122),\n    \"grey49\": (125, 125, 125),\n    \"grey50\": (127, 127, 127),\n    \"grey51\": (130, 130, 130),\n    \"grey52\": (133, 133, 133),\n    \"grey53\": (135, 135, 135),\n    \"grey54\": (138, 138, 138),\n    \"grey55\": (140, 140, 140),\n    \"grey56\": (143, 143, 143),\n    \"grey57\": (145, 145, 145),\n    \"grey58\": (148, 148, 148),\n    \"grey59\": (150, 150, 150),\n    \"grey60\": (153, 153, 153),\n    \"grey61\": (156, 156, 156),\n    \"grey62\": (158, 158, 158),\n    \"grey63\": (161, 161, 161),\n    \"grey64\": (163, 163, 163),\n    \"grey65\": (166, 166, 166),\n    \"grey66\": (168, 168, 168),\n    \"grey67\": (171, 171, 171),\n    \"grey68\": (173, 173, 173),\n    \"grey69\": (176, 176, 176),\n    \"grey70\": (179, 179, 179),\n    \"grey71\": (181, 181, 181),\n    \"grey72\": (184, 184, 184),\n    \"grey73\": (186, 186, 186),\n    \"grey74\": (189, 189, 189),\n    \"grey75\": (191, 191, 191),\n    \"grey76\": (194, 194, 194),\n    \"grey77\": (196, 196, 196),\n    \"grey78\": (199, 199, 199),\n    \"grey79\": (201, 201, 201),\n    \"grey80\": (204, 204, 204),\n    \"grey81\": (207, 207, 207),\n    \"grey82\": (209, 209, 209),\n    \"grey83\": (212, 212, 212),\n    \"grey84\": (214, 214, 214),\n    \"grey85\": (217, 217, 217),\n    \"grey86\": (219, 219, 219),\n    \"grey87\": (222, 222, 222),\n    \"grey88\": (224, 224, 224),\n    \"grey89\": (227, 227, 227),\n    \"grey90\": (229, 229, 229),\n    \"grey91\": (232, 232, 232),\n    \"grey92\": (235, 235, 235),\n    \"grey93\": (237, 237, 237),\n    \"grey94\": (240, 240, 240),\n    \"grey95\": (242, 242, 242),\n    \"grey96\": (245, 245, 245),\n    \"grey97\": (247, 247, 247),\n    \"grey98\": (250, 250, 250),\n    \"grey99\": (252, 252, 252),\n    \"grey100\": (255, 255, 255),\n    \"honeydew\": (240, 255, 240),\n    \"honeydew1\": (240, 255, 240),\n    \"honeydew2\": (224, 238, 224),\n    \"honeydew3\": (193, 205, 193),\n    \"honeydew4\": (131, 139, 131),\n    \"hot pink\": (255, 105, 180),\n    \"hotpink\": (255, 105, 180),\n    \"hotpink1\": (255, 110, 180),\n    \"hotpink2\": (238, 106, 167),\n    \"hotpink3\": (205, 96, 144),\n    \"hotpink4\": (139, 58, 98),\n    \"indian red\": (205, 92, 92),\n    \"indianred\": (205, 92, 92),\n    \"indianred1\": (255, 106, 106),\n    \"indianred2\": (238, 99, 99),\n    \"indianred3\": (205, 85, 85),\n    \"indianred4\": (139, 58, 58),\n    \"indigo\": (75, 0, 130),\n    \"ivory\": (255, 255, 240),\n    \"ivory1\": (255, 255, 240),\n    \"ivory2\": (238, 238, 224),\n    \"ivory3\": (205, 205, 193),\n    \"ivory4\": (139, 139, 131),\n    \"khaki\": (240, 230, 140),\n    \"khaki1\": (255, 246, 143),\n    \"khaki2\": (238, 230, 133),\n    \"khaki3\": (205, 198, 115),\n    \"khaki4\": (139, 134, 78),\n    \"lavender\": (230, 230, 250),\n    \"lavender blush\": (255, 240, 245),\n    \"lavenderblush\": (255, 240, 245),\n    \"lavenderblush1\": (255, 240, 245),\n    \"lavenderblush2\": (238, 224, 229),\n    \"lavenderblush3\": (205, 193, 197),\n    \"lavenderblush4\": (139, 131, 134),\n    \"lawn green\": (124, 252, 0),\n    \"lawngreen\": (124, 252, 0),\n    \"lemon chiffon\": (255, 250, 205),\n    \"lemonchiffon\": (255, 250, 205),\n    \"lemonchiffon1\": (255, 250, 205),\n    \"lemonchiffon2\": (238, 233, 191),\n    \"lemonchiffon3\": (205, 201, 165),\n    \"lemonchiffon4\": (139, 137, 112),\n    \"light blue\": (173, 216, 230),\n    \"light coral\": (240, 128, 128),\n    \"light cyan\": (224, 255, 255),\n    \"light goldenrod\": (238, 221, 130),\n    \"light goldenrod yellow\": (250, 250, 210),\n    \"light gray\": (211, 211, 211),\n    \"light green\": (144, 238, 144),\n    \"light grey\": (211, 211, 211),\n    \"light pink\": (255, 182, 193),\n    \"light salmon\": (255, 160, 122),\n    \"light sea green\": (32, 178, 170),\n    \"light sky blue\": (135, 206, 250),\n    \"light slate blue\": (132, 112, 255),\n    \"light slate gray\": (119, 136, 153),\n    \"light slate grey\": (119, 136, 153),\n    \"light steel blue\": (176, 196, 222),\n    \"light yellow\": (255, 255, 224),\n    \"lightblue\": (173, 216, 230),\n    \"lightblue1\": (191, 239, 255),\n    \"lightblue2\": (178, 223, 238),\n    \"lightblue3\": (154, 192, 205),\n    \"lightblue4\": (104, 131, 139),\n    \"lightcoral\": (240, 128, 128),\n    \"lightcyan\": (224, 255, 255),\n    \"lightcyan1\": (224, 255, 255),\n    \"lightcyan2\": (209, 238, 238),\n    \"lightcyan3\": (180, 205, 205),\n    \"lightcyan4\": (122, 139, 139),\n    \"lightgoldenrod\": (238, 221, 130),\n    \"lightgoldenrod1\": (255, 236, 139),\n    \"lightgoldenrod2\": (238, 220, 130),\n    \"lightgoldenrod3\": (205, 190, 112),\n    \"lightgoldenrod4\": (139, 129, 76),\n    \"lightgoldenrodyellow\": (250, 250, 210),\n    \"lightgray\": (211, 211, 211),\n    \"lightgreen\": (144, 238, 144),\n    \"lightgrey\": (211, 211, 211),\n    \"lightpink\": (255, 182, 193),\n    \"lightpink1\": (255, 174, 185),\n    \"lightpink2\": (238, 162, 173),\n    \"lightpink3\": (205, 140, 149),\n    \"lightpink4\": (139, 95, 101),\n    \"lightsalmon\": (255, 160, 122),\n    \"lightsalmon1\": (255, 160, 122),\n    \"lightsalmon2\": (238, 149, 114),\n    \"lightsalmon3\": (205, 129, 98),\n    \"lightsalmon4\": (139, 87, 66),\n    \"lightseagreen\": (32, 178, 170),\n    \"lightskyblue\": (135, 206, 250),\n    \"lightskyblue1\": (176, 226, 255),\n    \"lightskyblue2\": (164, 211, 238),\n    \"lightskyblue3\": (141, 182, 205),\n    \"lightskyblue4\": (96, 123, 139),\n    \"lightslateblue\": (132, 112, 255),\n    \"lightslategray\": (119, 136, 153),\n    \"lightslategrey\": (119, 136, 153),\n    \"lightsteelblue\": (176, 196, 222),\n    \"lightsteelblue1\": (202, 225, 255),\n    \"lightsteelblue2\": (188, 210, 238),\n    \"lightsteelblue3\": (162, 181, 205),\n    \"lightsteelblue4\": (110, 123, 139),\n    \"lightyellow\": (255, 255, 224),\n    \"lightyellow1\": (255, 255, 224),\n    \"lightyellow2\": (238, 238, 209),\n    \"lightyellow3\": (205, 205, 180),\n    \"lightyellow4\": (139, 139, 122),\n    \"lime\": (0, 255, 0),\n    \"lime green\": (50, 205, 50),\n    \"limegreen\": (50, 205, 50),\n    \"linen\": (250, 240, 230),\n    \"magenta\": (255, 0, 255),\n    \"magenta1\": (255, 0, 255),\n    \"magenta2\": (238, 0, 238),\n    \"magenta3\": (205, 0, 205),\n    \"magenta4\": (139, 0, 139),\n    \"maroon\": (128, 0, 0),\n    \"maroon1\": (255, 52, 179),\n    \"maroon2\": (238, 48, 167),\n    \"maroon3\": (205, 41, 144),\n    \"maroon4\": (139, 28, 98),\n    \"medium aquamarine\": (102, 205, 170),\n    \"medium blue\": (0, 0, 205),\n    \"medium orchid\": (186, 85, 211),\n    \"medium purple\": (147, 112, 219),\n    \"medium sea green\": (60, 179, 113),\n    \"medium slate blue\": (123, 104, 238),\n    \"medium spring green\": (0, 250, 154),\n    \"medium turquoise\": (72, 209, 204),\n    \"medium violet red\": (199, 21, 133),\n    \"mediumaquamarine\": (102, 205, 170),\n    \"mediumblue\": (0, 0, 205),\n    \"mediumorchid\": (186, 85, 211),\n    \"mediumorchid1\": (224, 102, 255),\n    \"mediumorchid2\": (209, 95, 238),\n    \"mediumorchid3\": (180, 82, 205),\n    \"mediumorchid4\": (122, 55, 139),\n    \"mediumpurple\": (147, 112, 219),\n    \"mediumpurple1\": (171, 130, 255),\n    \"mediumpurple2\": (159, 121, 238),\n    \"mediumpurple3\": (137, 104, 205),\n    \"mediumpurple4\": (93, 71, 139),\n    \"mediumseagreen\": (60, 179, 113),\n    \"mediumslateblue\": (123, 104, 238),\n    \"mediumspringgreen\": (0, 250, 154),\n    \"mediumturquoise\": (72, 209, 204),\n    \"mediumvioletred\": (199, 21, 133),\n    \"midnight blue\": (25, 25, 112),\n    \"midnightblue\": (25, 25, 112),\n    \"mint cream\": (245, 255, 250),\n    \"mintcream\": (245, 255, 250),\n    \"misty rose\": (255, 228, 225),\n    \"mistyrose\": (255, 228, 225),\n    \"mistyrose1\": (255, 228, 225),\n    \"mistyrose2\": (238, 213, 210),\n    \"mistyrose3\": (205, 183, 181),\n    \"mistyrose4\": (139, 125, 123),\n    \"moccasin\": (255, 228, 181),\n    \"navajo white\": (255, 222, 173),\n    \"navajowhite\": (255, 222, 173),\n    \"navajowhite1\": (255, 222, 173),\n    \"navajowhite2\": (238, 207, 161),\n    \"navajowhite3\": (205, 179, 139),\n    \"navajowhite4\": (139, 121, 94),\n    \"navy\": (0, 0, 128),\n    \"navy blue\": (0, 0, 128),\n    \"navyblue\": (0, 0, 128),\n    \"old lace\": (253, 245, 230),\n    \"oldlace\": (253, 245, 230),\n    \"olive\": (128, 128, 0),\n    \"olive drab\": (107, 142, 35),\n    \"olivedrab\": (107, 142, 35),\n    \"olivedrab1\": (192, 255, 62),\n    \"olivedrab2\": (179, 238, 58),\n    \"olivedrab3\": (154, 205, 50),\n    \"olivedrab4\": (105, 139, 34),\n    \"orange\": (255, 165, 0),\n    \"orange red\": (255, 69, 0),\n    \"orange1\": (255, 165, 0),\n    \"orange2\": (238, 154, 0),\n    \"orange3\": (205, 133, 0),\n    \"orange4\": (139, 90, 0),\n    \"orangered\": (255, 69, 0),\n    \"orangered1\": (255, 69, 0),\n    \"orangered2\": (238, 64, 0),\n    \"orangered3\": (205, 55, 0),\n    \"orangered4\": (139, 37, 0),\n    \"orchid\": (218, 112, 214),\n    \"orchid1\": (255, 131, 250),\n    \"orchid2\": (238, 122, 233),\n    \"orchid3\": (205, 105, 201),\n    \"orchid4\": (139, 71, 137),\n    \"pale goldenrod\": (238, 232, 170),\n    \"pale green\": (152, 251, 152),\n    \"pale turquoise\": (175, 238, 238),\n    \"pale violet red\": (219, 112, 147),\n    \"palegoldenrod\": (238, 232, 170),\n    \"palegreen\": (152, 251, 152),\n    \"palegreen1\": (154, 255, 154),\n    \"palegreen2\": (144, 238, 144),\n    \"palegreen3\": (124, 205, 124),\n    \"palegreen4\": (84, 139, 84),\n    \"paleturquoise\": (175, 238, 238),\n    \"paleturquoise1\": (187, 255, 255),\n    \"paleturquoise2\": (174, 238, 238),\n    \"paleturquoise3\": (150, 205, 205),\n    \"paleturquoise4\": (102, 139, 139),\n    \"palevioletred\": (219, 112, 147),\n    \"palevioletred1\": (255, 130, 171),\n    \"palevioletred2\": (238, 121, 159),\n    \"palevioletred3\": (205, 104, 127),\n    \"palevioletred4\": (139, 71, 93),\n    \"papaya whip\": (255, 239, 213),\n    \"papayawhip\": (255, 239, 213),\n    \"peach puff\": (255, 218, 185),\n    \"peachpuff\": (255, 218, 185),\n    \"peachpuff1\": (255, 218, 185),\n    \"peachpuff2\": (238, 203, 173),\n    \"peachpuff3\": (205, 175, 149),\n    \"peachpuff4\": (139, 119, 101),\n    \"peru\": (205, 133, 63),\n    \"pink\": (255, 192, 203),\n    \"pink1\": (255, 181, 197),\n    \"pink2\": (238, 169, 184),\n    \"pink3\": (205, 145, 158),\n    \"pink4\": (139, 99, 108),\n    \"plum\": (221, 160, 221),\n    \"plum1\": (255, 187, 255),\n    \"plum2\": (238, 174, 238),\n    \"plum3\": (205, 150, 205),\n    \"plum4\": (139, 102, 139),\n    \"powder blue\": (176, 224, 230),\n    \"powderblue\": (176, 224, 230),\n    \"purple\": (128, 0, 128),\n    \"purple1\": (155, 48, 255),\n    \"purple2\": (145, 44, 238),\n    \"purple3\": (125, 38, 205),\n    \"purple4\": (85, 26, 139),\n    \"red\": (255, 0, 0),\n    \"red1\": (255, 0, 0),\n    \"red2\": (238, 0, 0),\n    \"red3\": (205, 0, 0),\n    \"red4\": (139, 0, 0),\n    \"rosy brown\": (188, 143, 143),\n    \"rosybrown\": (188, 143, 143),\n    \"rosybrown1\": (255, 193, 193),\n    \"rosybrown2\": (238, 180, 180),\n    \"rosybrown3\": (205, 155, 155),\n    \"rosybrown4\": (139, 105, 105),\n    \"royal blue\": (65, 105, 225),\n    \"royalblue\": (65, 105, 225),\n    \"royalblue1\": (72, 118, 255),\n    \"royalblue2\": (67, 110, 238),\n    \"royalblue3\": (58, 95, 205),\n    \"royalblue4\": (39, 64, 139),\n    \"saddle brown\": (139, 69, 19),\n    \"saddlebrown\": (139, 69, 19),\n    \"salmon\": (250, 128, 114),\n    \"salmon1\": (255, 140, 105),\n    \"salmon2\": (238, 130, 98),\n    \"salmon3\": (205, 112, 84),\n    \"salmon4\": (139, 76, 57),\n    \"sandy brown\": (244, 164, 96),\n    \"sandybrown\": (244, 164, 96),\n    \"sea green\": (46, 139, 87),\n    \"seagreen\": (46, 139, 87),\n    \"seagreen1\": (84, 255, 159),\n    \"seagreen2\": (78, 238, 148),\n    \"seagreen3\": (67, 205, 128),\n    \"seagreen4\": (46, 139, 87),\n    \"seashell\": (255, 245, 238),\n    \"seashell1\": (255, 245, 238),\n    \"seashell2\": (238, 229, 222),\n    \"seashell3\": (205, 197, 191),\n    \"seashell4\": (139, 134, 130),\n    \"sienna\": (160, 82, 45),\n    \"sienna1\": (255, 130, 71),\n    \"sienna2\": (238, 121, 66),\n    \"sienna3\": (205, 104, 57),\n    \"sienna4\": (139, 71, 38),\n    \"silver\": (192, 192, 192),\n    \"sky blue\": (135, 206, 235),\n    \"skyblue\": (135, 206, 235),\n    \"skyblue1\": (135, 206, 255),\n    \"skyblue2\": (126, 192, 238),\n    \"skyblue3\": (108, 166, 205),\n    \"skyblue4\": (74, 112, 139),\n    \"slate blue\": (106, 90, 205),\n    \"slate gray\": (112, 128, 144),\n    \"slate grey\": (112, 128, 144),\n    \"slateblue\": (106, 90, 205),\n    \"slateblue1\": (131, 111, 255),\n    \"slateblue2\": (122, 103, 238),\n    \"slateblue3\": (105, 89, 205),\n    \"slateblue4\": (71, 60, 139),\n    \"slategray\": (112, 128, 144),\n    \"slategray1\": (198, 226, 255),\n    \"slategray2\": (185, 211, 238),\n    \"slategray3\": (159, 182, 205),\n    \"slategray4\": (108, 123, 139),\n    \"slategrey\": (112, 128, 144),\n    \"snow\": (255, 250, 250),\n    \"snow1\": (255, 250, 250),\n    \"snow2\": (238, 233, 233),\n    \"snow3\": (205, 201, 201),\n    \"snow4\": (139, 137, 137),\n    \"spring green\": (0, 255, 127),\n    \"springgreen\": (0, 255, 127),\n    \"springgreen1\": (0, 255, 127),\n    \"springgreen2\": (0, 238, 118),\n    \"springgreen3\": (0, 205, 102),\n    \"springgreen4\": (0, 139, 69),\n    \"steel blue\": (70, 130, 180),\n    \"steelblue\": (70, 130, 180),\n    \"steelblue1\": (99, 184, 255),\n    \"steelblue2\": (92, 172, 238),\n    \"steelblue3\": (79, 148, 205),\n    \"steelblue4\": (54, 100, 139),\n    \"tan\": (210, 180, 140),\n    \"tan1\": (255, 165, 79),\n    \"tan2\": (238, 154, 73),\n    \"tan3\": (205, 133, 63),\n    \"tan4\": (139, 90, 43),\n    \"teal\": (0, 128, 128),\n    \"thistle\": (216, 191, 216),\n    \"thistle1\": (255, 225, 255),\n    \"thistle2\": (238, 210, 238),\n    \"thistle3\": (205, 181, 205),\n    \"thistle4\": (139, 123, 139),\n    \"tomato\": (255, 99, 71),\n    \"tomato1\": (255, 99, 71),\n    \"tomato2\": (238, 92, 66),\n    \"tomato3\": (205, 79, 57),\n    \"tomato4\": (139, 54, 38),\n    \"turquoise\": (64, 224, 208),\n    \"turquoise1\": (0, 245, 255),\n    \"turquoise2\": (0, 229, 238),\n    \"turquoise3\": (0, 197, 205),\n    \"turquoise4\": (0, 134, 139),\n    \"violet\": (238, 130, 238),\n    \"violet red\": (208, 32, 144),\n    \"violetred\": (208, 32, 144),\n    \"violetred1\": (255, 62, 150),\n    \"violetred2\": (238, 58, 140),\n    \"violetred3\": (205, 50, 120),\n    \"violetred4\": (139, 34, 82),\n    \"wheat\": (245, 222, 179),\n    \"wheat1\": (255, 231, 186),\n    \"wheat2\": (238, 216, 174),\n    \"wheat3\": (205, 186, 150),\n    \"wheat4\": (139, 126, 102),\n    \"white\": (255, 255, 255),\n    \"white smoke\": (245, 245, 245),\n    \"whitesmoke\": (245, 245, 245),\n    \"yellow\": (255, 255, 0),\n    \"yellow green\": (154, 205, 50),\n    \"yellow1\": (255, 255, 0),\n    \"yellow2\": (238, 238, 0),\n    \"yellow3\": (205, 205, 0),\n    \"yellow4\": (139, 139, 0),\n    \"yellowgreen\": (154, 205, 50),\n}\n</code></pre> <p>Mapping table for color names to RGB codes.</p>"},{"location":"documents/color/convert/","title":"maliang.color.convert","text":"<p> \u5b57\u6570 9 \u4e2a \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p> \u6e90\u4ee3\u7801\uff1a<code>maliang/color/convert.py</code></p> <p>Convert a format of color to another format.</p> <ul> <li>RGB: tuple, (Red, Green, Blue)</li> <li>HSL: tuple, (Hue, Saturation, Lightness)</li> <li>RGBA: tuple, (Red, Green, Blue, Alpha)</li> <li>HEX: hexadecimal, such as \u2018#ABCDEF\u2019 or \u2018#12345678\u2019</li> <li>NAME: string, such as \u2018royalblue\u2019</li> </ul> <p>\u51fd\u6570\uff1a</p> <ul> <li> <code>rgb_to_hex</code>             \u2013              <p>Convert a RGB code to a hexadecimal code.</p> </li> <li> <code>hex_to_rgb</code>             \u2013              <p>Convert a hexadecimal code to a RGB code.</p> </li> <li> <code>rgba_to_hex</code>             \u2013              <p>Convert a RGBA code to a hexadecimal code.</p> </li> <li> <code>hex_to_rgba</code>             \u2013              <p>Convert a hexadecimal code to a RGBA code.</p> </li> <li> <code>hsl_to_rgb</code>             \u2013              <p>Convert a HSL code to a RGB code.</p> </li> <li> <code>rgb_to_hsl</code>             \u2013              <p>Convert a RGB code to a HSL code.</p> </li> <li> <code>hsl_to_hex</code>             \u2013              <p>Convert a HSL code to a hexadecimal code.</p> </li> <li> <code>hex_to_hsl</code>             \u2013              <p>Convert a hexadecimal code to a HSL code.</p> </li> <li> <code>name_to_rgb</code>             \u2013              <p>Convert a color name to a RGB code.</p> </li> <li> <code>rgb_to_name</code>             \u2013              <p>Convert a RGB code to a color name.</p> </li> <li> <code>name_to_hex</code>             \u2013              <p>Convert a color name to a hexadecimal code.</p> </li> <li> <code>hex_to_name</code>             \u2013              <p>Convert a hexadecimal code to a color name.</p> </li> <li> <code>fix_hex_length</code>             \u2013              <p>Fix the length of a hexadecimal code.</p> </li> <li> <code>str_to_rgb</code>             \u2013              <p>Convert a color name or a hexadecimal code to a RGB code.</p> </li> </ul>"},{"location":"documents/color/convert/#maliang.color.convert.rgb_to_hex","title":"rgb_to_hex","text":"<pre><code>rgb_to_hex(value: tuple[int, int, int]) -&gt; str\n</code></pre> <p>Convert a RGB code to a hexadecimal code.</p> <ul> <li><code>value</code>: a RGB code</li> </ul>"},{"location":"documents/color/convert/#maliang.color.convert.hex_to_rgb","title":"hex_to_rgb","text":"<pre><code>hex_to_rgb(value: str) -&gt; tuple[int, int, int]\n</code></pre> <p>Convert a hexadecimal code to a RGB code.</p> <ul> <li><code>value</code>: a hexadecimal code</li> </ul>"},{"location":"documents/color/convert/#maliang.color.convert.rgba_to_hex","title":"rgba_to_hex","text":"<pre><code>rgba_to_hex(value: tuple[int, int, int, float]) -&gt; str\n</code></pre> <p>Convert a RGBA code to a hexadecimal code.</p> <ul> <li><code>value</code>: a RGBA code</li> </ul>"},{"location":"documents/color/convert/#maliang.color.convert.hex_to_rgba","title":"hex_to_rgba","text":"<pre><code>hex_to_rgba(value: str) -&gt; tuple[int, int, int, float]\n</code></pre> <p>Convert a hexadecimal code to a RGBA code.</p> <ul> <li><code>value</code>: a hexadecimal code</li> </ul>"},{"location":"documents/color/convert/#maliang.color.convert.rgb_to_rgba","title":"rgb_to_rgba","text":"<pre><code>rgb_to_rgba(value: tuple[int, int, int]) -&gt; tuple[int, int, int, float]\n</code></pre> <p>Convert a RGB code to a RGBA code.</p> <ul> <li><code>value</code>: a RGB code</li> </ul>"},{"location":"documents/color/convert/#maliang.color.convert.rgba_to_rgb","title":"rgba_to_rgb","text":"<pre><code>rgba_to_rgb(\n    value: tuple[int, int, int, float], /, *, refer: tuple[int, int, int]\n) -&gt; tuple[int, int, int]\n</code></pre> <p>Convert a RGBA code to a RGB code.</p> <ul> <li><code>value</code>: a RGBA code</li> <li><code>refer</code>: a RGB code</li> </ul>"},{"location":"documents/color/convert/#maliang.color.convert.hsl_to_rgb","title":"hsl_to_rgb","text":"<pre><code>hsl_to_rgb(value: tuple[float, float, float]) -&gt; tuple[int, int, int]\n</code></pre> <p>Convert a HSL code to a RGB code.</p> <ul> <li><code>value</code>: a HSL code</li> </ul>"},{"location":"documents/color/convert/#maliang.color.convert.rgb_to_hsl","title":"rgb_to_hsl","text":"<pre><code>rgb_to_hsl(value: tuple[int, int, int]) -&gt; tuple[float, float, float]\n</code></pre> <p>Convert a RGB code to a HSL code.</p> <ul> <li><code>value</code>: a RGB code</li> </ul>"},{"location":"documents/color/convert/#maliang.color.convert.hsl_to_hex","title":"hsl_to_hex","text":"<pre><code>hsl_to_hex(value: tuple[float, float, float]) -&gt; str\n</code></pre> <p>Convert a HSL code to a hexadecimal code.</p> <ul> <li><code>value</code>: a HSL code</li> </ul>"},{"location":"documents/color/convert/#maliang.color.convert.hex_to_hsl","title":"hex_to_hsl","text":"<pre><code>hex_to_hsl(value: str) -&gt; tuple[float, float, float]\n</code></pre> <p>Convert a hexadecimal code to a HSL code.</p> <ul> <li><code>value</code>: a hexadecimal code</li> </ul>"},{"location":"documents/color/convert/#maliang.color.convert.name_to_rgb","title":"name_to_rgb","text":"<pre><code>name_to_rgb(value: str) -&gt; tuple[int, int, int]\n</code></pre> <p>Convert a color name to a RGB code.</p> <ul> <li><code>value</code>: a color name</li> </ul>"},{"location":"documents/color/convert/#maliang.color.convert.rgb_to_name","title":"rgb_to_name","text":"<pre><code>rgb_to_name(value: tuple[int, int, int]) -&gt; list[str]\n</code></pre> <p>Convert a RGB code to a color name.</p> <ul> <li><code>value</code>: a RGB code</li> </ul>"},{"location":"documents/color/convert/#maliang.color.convert.name_to_hex","title":"name_to_hex","text":"<pre><code>name_to_hex(value: str) -&gt; str\n</code></pre> <p>Convert a color name to a hexadecimal code.</p> <ul> <li><code>value</code>: a color name</li> </ul>"},{"location":"documents/color/convert/#maliang.color.convert.hex_to_name","title":"hex_to_name","text":"<pre><code>hex_to_name(value: str) -&gt; list[str]\n</code></pre> <p>Convert a hexadecimal code to a color name.</p> <ul> <li><code>value</code>: a hexadecimal code</li> </ul>"},{"location":"documents/color/convert/#maliang.color.convert.fix_hex_length","title":"fix_hex_length","text":"<pre><code>fix_hex_length(value: str) -&gt; str\n</code></pre> <p>Fix the length of a hexadecimal code.</p> <ul> <li><code>value</code>: a hexadecimal code</li> </ul>"},{"location":"documents/color/convert/#maliang.color.convert.str_to_rgb","title":"str_to_rgb","text":"<pre><code>str_to_rgb(value: str) -&gt; tuple[int, int, int]\n</code></pre> <p>Convert a color name or a hexadecimal code to a RGB code.</p> <ul> <li><code>value</code>: a color name or a hexadecimal code</li> </ul>"},{"location":"documents/color/hsl/","title":"maliang.color.hsl","text":"<p> \u5b57\u6570 9 \u4e2a \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p> \u6e90\u4ee3\u7801\uff1a<code>maliang/color/hsl.py</code></p> <p>Some functions about HSL codes.</p> <p>\u51fd\u6570\uff1a</p> <ul> <li> <code>contrast</code>             \u2013              <p>Get the contrasting color of a HSL code.</p> </li> <li> <code>transition</code>             \u2013              <p>Transition one color to another proportionally.</p> </li> <li> <code>blend</code>             \u2013              <p>Mix colors by weight.</p> </li> <li> <code>gradient</code>             \u2013              <p>Get a list of color gradients from one color to another proportionally.</p> </li> </ul>"},{"location":"documents/color/hsl/#maliang.color.hsl.contrast","title":"contrast","text":"<pre><code>contrast(\n    value: tuple[float, float, float], /, *, channels: tuple[bool, bool, bool] = (True, True, True)\n) -&gt; tuple[float, float, float]\n</code></pre> <p>Get the contrasting color of a HSL code.</p> <ul> <li><code>value</code>: a HSL code</li> <li><code>channels</code>: three color channels</li> </ul>"},{"location":"documents/color/hsl/#maliang.color.hsl.transition","title":"transition","text":"<pre><code>transition(\n    first: tuple[float, float, float],\n    second: tuple[float, float, float],\n    rate: float,\n    *,\n    channels: tuple[bool, bool, bool] = (True, True, True),\n) -&gt; tuple[float, float, float]\n</code></pre> <p>Transition one color to another proportionally.</p> <ul> <li><code>first</code>: the first HSL code</li> <li><code>second</code>: the second HSL code</li> <li><code>rate</code>: transition rate</li> <li><code>channels</code>: three color channels</li> </ul>"},{"location":"documents/color/hsl/#maliang.color.hsl.blend","title":"blend","text":"<pre><code>blend(\n    *values: tuple[float, float, float], weights: list[float] | None = None\n) -&gt; tuple[float, float, float]\n</code></pre> <p>Mix colors by weight.</p> <ul> <li><code>values</code>: HSL codes</li> <li><code>weights</code>: weight list, default value indicates the same weights</li> </ul>"},{"location":"documents/color/hsl/#maliang.color.hsl.gradient","title":"gradient","text":"<pre><code>gradient(\n    first: tuple[float, float, float],\n    second: tuple[float, float, float],\n    count: int,\n    rate: float = 1,\n    *,\n    channels: tuple[bool, bool, bool] = (True, True, True),\n    contoller: collections.abc.Callable[[float], float] = controllers.linear,\n) -&gt; list[tuple[float, float, float]]\n</code></pre> <p>Get a list of color gradients from one color to another proportionally.</p> <ul> <li><code>first</code>: the first HSL code</li> <li><code>second</code>: the second HSL code</li> <li><code>count</code>: the number of gradients</li> <li><code>rate</code>: transition rate</li> <li><code>channels</code>: three color channels</li> <li><code>controller</code>: control function</li> </ul>"},{"location":"documents/color/rgb/","title":"maliang.color.rgb","text":"<p> \u5b57\u6570 9 \u4e2a \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p> \u6e90\u4ee3\u7801\uff1a<code>maliang/color/rgb.py</code></p> <p>Some functions about RGB codes.</p> <p>\u51fd\u6570\uff1a</p> <ul> <li> <code>contrast</code>             \u2013              <p>Get the contrasting color of a RGB code.</p> </li> <li> <code>transition</code>             \u2013              <p>Transition one color to another proportionally.</p> </li> <li> <code>blend</code>             \u2013              <p>Mix colors by weight.</p> </li> <li> <code>gradient</code>             \u2013              <p>Get a list of color gradients from one color to another proportionally.</p> </li> </ul>"},{"location":"documents/color/rgb/#maliang.color.rgb.contrast","title":"contrast","text":"<pre><code>contrast(\n    value: tuple[int, int, int], /, *, channels: tuple[bool, bool, bool] = (True, True, True)\n) -&gt; tuple[int, int, int]\n</code></pre> <p>Get the contrasting color of a RGB code.</p> <ul> <li><code>value</code>: a RGB code</li> <li><code>channels</code>: three color channels</li> </ul>"},{"location":"documents/color/rgb/#maliang.color.rgb.transition","title":"transition","text":"<pre><code>transition(\n    first: tuple[int, int, int],\n    second: tuple[int, int, int],\n    rate: float,\n    *,\n    channels: tuple[bool, bool, bool] = (True, True, True),\n) -&gt; tuple[int, int, int]\n</code></pre> <p>Transition one color to another proportionally.</p> <ul> <li><code>first</code>: the first RGB code</li> <li><code>second</code>: the second RGB code</li> <li><code>rate</code>: transition rate</li> <li><code>channels</code>: three color channels</li> </ul>"},{"location":"documents/color/rgb/#maliang.color.rgb.blend","title":"blend","text":"<pre><code>blend(*values: tuple[int, int, int], weights: list[float] | None = None) -&gt; tuple[int, int, int]\n</code></pre> <p>Mix colors by weight.</p> <ul> <li><code>values</code>: RGB codes</li> <li><code>weights</code>: weight list, default value indicates the same weights</li> </ul>"},{"location":"documents/color/rgb/#maliang.color.rgb.gradient","title":"gradient","text":"<pre><code>gradient(\n    first: tuple[int, int, int],\n    second: tuple[int, int, int],\n    count: int,\n    rate: float = 1,\n    *,\n    channels: tuple[bool, bool, bool] = (True, True, True),\n    contoller: collections.abc.Callable[[float], float] = controllers.linear,\n) -&gt; list[tuple[int, int, int]]\n</code></pre> <p>Get a list of color gradients from one color to another proportionally.</p> <ul> <li><code>first</code>: the first RGB code</li> <li><code>second</code>: the second RGB code</li> <li><code>count</code>: the number of gradients</li> <li><code>rate</code>: transition rate</li> <li><code>channels</code>: three color channels</li> <li><code>controller</code>: control function</li> </ul>"},{"location":"documents/core/","title":"maliang.core","text":"<p> \u5b57\u6570 11 \u4e2a \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p> \u6e90\u4ee3\u7801\uff1a<code>maliang/core/__init__.py</code></p> <p>The core code, you can see the general framework here.</p> <p>Most of the abstract and base classes are defined here.</p> <p>\u6a21\u5757\uff1a</p> <ul> <li> <code>configs</code>           \u2013            <p>All global configuration options.</p> </li> <li> <code>containers</code>           \u2013            <p>All containers.</p> </li> <li> <code>virtual</code>           \u2013            <p>All virtual classes.</p> </li> </ul> <p>\u7c7b\uff1a</p> <ul> <li> <code>Env</code>           \u2013            <p>Configurations for default environment values.</p> </li> <li> <code>Font</code>           \u2013            <p>Configurations for default font.</p> </li> <li> <code>Constant</code>           \u2013            <p>All Constants.</p> </li> <li> <code>Tk</code>           \u2013            <p>Main window.</p> </li> <li> <code>Toplevel</code>           \u2013            <p>Toplevel window.</p> </li> <li> <code>Canvas</code>           \u2013            <p>Main contrainer: Canvas.</p> </li> </ul> <p>\u51fd\u6570\uff1a</p> <ul> <li> <code>reset</code>             \u2013              <p>Reset all configuration options.</p> </li> </ul>"},{"location":"documents/core/#maliang.core.Env","title":"Env","text":"<p>Configurations for default environment values.</p> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>reset</code>             \u2013              <p>Reset all configuration options.</p> </li> <li> <code>get_default_system</code>             \u2013              <p>Get the system of environment.</p> </li> </ul>"},{"location":"documents/core/#maliang.core.Env.reset","title":"reset  <code>classmethod</code>","text":"<pre><code>reset() -&gt; None\n</code></pre> <p>Reset all configuration options.</p>"},{"location":"documents/core/#maliang.core.Env.get_default_system","title":"get_default_system  <code>staticmethod</code>","text":"<pre><code>get_default_system() -&gt; str\n</code></pre> <p>Get the system of environment.</p>"},{"location":"documents/core/#maliang.core.Font","title":"Font","text":"<p>Configurations for default font.</p> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>reset</code>             \u2013              <p>Reset all configuration options.</p> </li> <li> <code>get_default_family</code>             \u2013              <p>Get the default font family.</p> </li> </ul>"},{"location":"documents/core/#maliang.core.Font.reset","title":"reset  <code>classmethod</code>","text":"<pre><code>reset() -&gt; None\n</code></pre> <p>Reset all configuration options.</p>"},{"location":"documents/core/#maliang.core.Font.get_default_family","title":"get_default_family  <code>staticmethod</code>","text":"<pre><code>get_default_family() -&gt; str\n</code></pre> <p>Get the default font family.</p>"},{"location":"documents/core/#maliang.core.Constant","title":"Constant","text":"<p>All Constants.</p> <p>\u5c5e\u6027\uff1a</p> <ul> <li> <code>GOLDEN_RATIO</code>               (<code>typing.Final[float]</code>)           \u2013            <p>The golden ratio, which is needed to automatically calculate the color</p> </li> <li> <code>PREDEFINED_EVENTS</code>               (<code>typing.Final[tuple[str, ...]]</code>)           \u2013            <p>Predefined events that can be used directly without registration. It is</p> </li> <li> <code>PREDEFINED_VIRTUAL_EVENTS</code>               (<code>typing.Final[tuple[str, ...]]</code>)           \u2013            <p>Predefined virtual events that can be used directly without</p> </li> </ul>"},{"location":"documents/core/#maliang.core.Constant.GOLDEN_RATIO","title":"GOLDEN_RATIO  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>GOLDEN_RATIO: typing.Final[float] = math.sqrt(5) - 1 / 2\n</code></pre> <p>The golden ratio, which is needed to automatically calculate the color of widget on <code>\"disabled\"</code> state. It is READ-ONLY.</p>"},{"location":"documents/core/#maliang.core.Constant.PREDEFINED_EVENTS","title":"PREDEFINED_EVENTS  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>PREDEFINED_EVENTS: typing.Final[tuple[str, ...]] = (\n    \"&lt;KeyPress&gt;\",\n    \"&lt;KeyRelease&gt;\",\n    \"&lt;Button-1&gt;\",\n    \"&lt;Button-2&gt;\",\n    \"&lt;Button-3&gt;\",\n    \"&lt;Button-4&gt;\",\n    \"&lt;Button-5&gt;\",\n    \"&lt;ButtonRelease-1&gt;\",\n    \"&lt;ButtonRelease-2&gt;\",\n    \"&lt;ButtonRelease-3&gt;\",\n    \"&lt;MouseWheel&gt;\",\n    \"&lt;Motion&gt;\",\n    \"&lt;B1-Motion&gt;\",\n    \"&lt;B2-Motion&gt;\",\n    \"&lt;B3-Motion&gt;\",\n    \"&lt;Configure&gt;\",\n)\n</code></pre> <p>Predefined events that can be used directly without registration. It is READ-ONLY.</p>"},{"location":"documents/core/#maliang.core.Constant.PREDEFINED_VIRTUAL_EVENTS","title":"PREDEFINED_VIRTUAL_EVENTS  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>PREDEFINED_VIRTUAL_EVENTS: typing.Final[tuple[str, ...]] = (\n    \"&lt;&lt;Copy&gt;&gt;\",\n    \"&lt;&lt;Paste&gt;&gt;\",\n    \"&lt;&lt;Cut&gt;&gt;\",\n    \"&lt;&lt;SelectAll&gt;&gt;\",\n    \"&lt;&lt;Redo&gt;&gt;\",\n    \"&lt;&lt;Undo&gt;&gt;\",\n)\n</code></pre> <p>Predefined virtual events that can be used directly without registration. It is READ-ONLY.</p>"},{"location":"documents/core/#maliang.core.Tk","title":"Tk","text":"<pre><code>Tk(\n    size: tuple[int, int] = (1280, 720),\n    position: tuple[int, int] | None = None,\n    *,\n    title: str | None = None,\n    icon: str | enhanced.PhotoImage | None = None,\n    **kwargs,\n)\n</code></pre> <p>               Bases: <code>tkinter.Tk</code>, <code>Misc</code></p> <p>Main window.</p> <p>In general, there is only one main window. But after destroying it, another one can be created.</p> <ul> <li><code>size</code>: size of the window</li> <li><code>position</code>: position of the window, based on the upper left (nw) corner. And negative numbers are based on the bottom right (se) corner.</li> <li><code>title</code>: title of the window, default value is <code>\"tk\"</code></li> <li><code>icon</code>: icon of the window, default value is the icon of tk</li> <li><code>**kwargs</code>: compatible with other parameters of class <code>tkinter.Tk</code></li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>theme</code>             \u2013              <p>Change the color theme of the window</p> </li> <li> <code>geometry</code>             \u2013              <p>Change the size and position of the window and return the current</p> </li> <li> <code>center</code>             \u2013              <p>Center the container</p> </li> <li> <code>icon</code>             \u2013              <p>Set the icon of the window.</p> </li> <li> <code>alpha</code>             \u2013              <p>Set or get the transparency of the window</p> </li> <li> <code>topmost</code>             \u2013              <p>Set or get whether the window is pinned or not</p> </li> <li> <code>fullscreen</code>             \u2013              <p>Set or get whether the window is full-screen.</p> </li> <li> <code>toolwindow</code>             \u2013              <p>Set or get whether the window is tool-window.</p> </li> <li> <code>transparentcolor</code>             \u2013              <p>Set or get the penetration color of the window.</p> </li> <li> <code>modified</code>             \u2013              <p>Set or get whether the window is modified.</p> </li> <li> <code>transparent</code>             \u2013              <p>Set or get whether the window is transparent.</p> </li> <li> <code>destroy</code>             \u2013              <p>Destroy this and all descendants widgets.</p> </li> <li> <code>at_exit</code>             \u2013              <p>Set a function that will be called when the window is closed.</p> </li> </ul> <p>\u5c5e\u6027\uff1a</p> <ul> <li> <code>ratios</code>               (<code>tuple[float, float]</code>)           \u2013            <p>Return the aspect zoom ratio of the container.</p> </li> </ul>"},{"location":"documents/core/#maliang.core.Tk.ratios","title":"ratios  <code>cached</code> <code>property</code>","text":"<pre><code>ratios: tuple[float, float]\n</code></pre> <p>Return the aspect zoom ratio of the container.</p>"},{"location":"documents/core/#maliang.core.Tk.theme","title":"theme","text":"<pre><code>theme(\n    value: typing.Literal[\"light\", \"dark\"],\n    *,\n    include_children: bool = True,\n    include_canvases: bool = True,\n) -&gt; None\n</code></pre> <p>Change the color theme of the window</p> <ul> <li><code>value</code>: theme name</li> <li><code>include_children</code>: wether include its children, like Toplevel</li> <li><code>include_canvases</code>: wether include its canvases</li> </ul>"},{"location":"documents/core/#maliang.core.Tk.geometry","title":"geometry","text":"<pre><code>geometry(\n    *, size: tuple[int, int] | None = None, position: tuple[int, int] | None = None\n) -&gt; tuple[int, int, int, int] | None\n</code></pre> <p>Change the size and position of the window and return the current size and position of the window.</p> <ul> <li><code>size</code>: the size of the window, if it is None, does not change anything</li> <li><code>position</code>: the position of the window, if it is None, does not change anything</li> </ul> <p>If you want to use <code>tkinter.Tk.geometry</code>, please use <code>tkinter.Tk.wm_geometry</code> instead.</p>"},{"location":"documents/core/#maliang.core.Tk.center","title":"center","text":"<pre><code>center(*, refer: tkinter.Misc | None = None) -&gt; None\n</code></pre> <p>Center the container</p> <p><code>refer</code>: The area of the reference widget, if it is None, means that the reference area is the entire screen.</p>"},{"location":"documents/core/#maliang.core.Tk.icon","title":"icon","text":"<pre><code>icon(value: str | enhanced.PhotoImage) -&gt; None\n</code></pre> <p>Set the icon of the window.</p> <ul> <li><code>value</code>: the icon</li> </ul>"},{"location":"documents/core/#maliang.core.Tk.alpha","title":"alpha","text":"<pre><code>alpha(value: float | None = None) -&gt; float | None\n</code></pre> <p>Set or get the transparency of the window</p> <ul> <li><code>value</code>: the transparency of the window, range is 0~1</li> </ul>"},{"location":"documents/core/#maliang.core.Tk.topmost","title":"topmost","text":"<pre><code>topmost(value: bool | None = True) -&gt; bool | None\n</code></pre> <p>Set or get whether the window is pinned or not</p> <ul> <li><code>value</code>: indicate whether the window is topmost</li> </ul>"},{"location":"documents/core/#maliang.core.Tk.fullscreen","title":"fullscreen","text":"<pre><code>fullscreen(value: bool | None = True) -&gt; bool | None\n</code></pre> <p>Set or get whether the window is full-screen.</p> <ul> <li><code>value</code>: indicate whether the window is full-screen</li> </ul> <p>The method should be called at the end of the code, or after some time after the program has started.</p>"},{"location":"documents/core/#maliang.core.Tk.toolwindow","title":"toolwindow","text":"<pre><code>toolwindow(value: bool | None = True) -&gt; bool | None\n</code></pre> <p>Set or get whether the window is tool-window.</p> <ul> <li><code>value</code>: indicate whether the window is tool-window</li> </ul> <p>This method only works on Windows!</p>"},{"location":"documents/core/#maliang.core.Tk.transparentcolor","title":"transparentcolor","text":"<pre><code>transparentcolor(value: str | None = None) -&gt; str | None\n</code></pre> <p>Set or get the penetration color of the window.</p> <ul> <li><code>value</code>: the penetration color of the window</li> </ul> <p>This method only works on Windows!</p>"},{"location":"documents/core/#maliang.core.Tk.modified","title":"modified","text":"<pre><code>modified(value: bool | None = None) -&gt; bool | None\n</code></pre> <p>Set or get whether the window is modified.</p> <ul> <li><code>value</code>: indicate whether the window is modified</li> </ul> <p>This method only works on macOS!</p>"},{"location":"documents/core/#maliang.core.Tk.transparent","title":"transparent","text":"<pre><code>transparent(value: bool | None = None) -&gt; bool | None\n</code></pre> <p>Set or get whether the window is transparent.</p> <ul> <li><code>value</code>: indicate whether the window is transparent</li> </ul> <p>This method only works on macOS!</p>"},{"location":"documents/core/#maliang.core.Tk.destroy","title":"destroy","text":"<pre><code>destroy() -&gt; None\n</code></pre> <p>Destroy this and all descendants widgets.</p>"},{"location":"documents/core/#maliang.core.Tk.at_exit","title":"at_exit","text":"<pre><code>at_exit(command: collections.abc.Callable[[], typing.Any], *, ensure_destroy: bool = True) -&gt; None\n</code></pre> <p>Set a function that will be called when the window is closed.</p> <ul> <li><code>command</code>: the function that was called</li> <li><code>ensure_destroy</code>: whether the window is guaranteed to be closed</li> </ul>"},{"location":"documents/core/#maliang.core.Toplevel","title":"Toplevel","text":"<pre><code>Toplevel(\n    master: Tk | Toplevel | None = None,\n    size: tuple[int, int] = (960, 540),\n    position: tuple[int, int] | None = None,\n    *,\n    title: str | None = None,\n    icon: str | enhanced.PhotoImage | None = None,\n    grab: bool = False,\n    focus: bool = True,\n    **kwargs,\n)\n</code></pre> <p>               Bases: <code>tkinter.Toplevel</code>, <code>Tk</code>, <code>Misc</code></p> <p>Toplevel window.</p> <p>It can be used as a pop-up window, or it can be customized to put anything you want to show.</p> <ul> <li><code>master</code>: parent widget</li> <li><code>size</code>: size of the window, default value is 960x540(px)</li> <li><code>position</code>: position of the window, default value indicates random</li> <li><code>title</code>: title of window, default is the same as title of master</li> <li><code>icon</code>: icon of the window, default is the same as title of master</li> <li><code>grab</code>: set grab for this window</li> <li><code>focus</code>: whether direct input focus to this window</li> <li><code>**kwargs</code>: compatible with other parameters of class <code>tkinter.Toplevel</code></li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>destroy</code>             \u2013              <p>Destroy this and all descendants widgets.</p> </li> </ul>"},{"location":"documents/core/#maliang.core.Toplevel.destroy","title":"destroy","text":"<pre><code>destroy() -&gt; None\n</code></pre> <p>Destroy this and all descendants widgets.</p>"},{"location":"documents/core/#maliang.core.Canvas","title":"Canvas","text":"<pre><code>Canvas(\n    master: Tk | Toplevel | Canvas | None = None,\n    *,\n    expand: typing.Literal[\"\", \"x\", \"y\", \"xy\"] = \"xy\",\n    auto_zoom: bool = False,\n    keep_ratio: typing.Literal[\"min\", \"max\"] | None = None,\n    free_anchor: bool = False,\n    auto_update: bool | None = None,\n    zoom_all_items: bool = False,\n    **kwargs,\n)\n</code></pre> <p>               Bases: <code>tkinter.Canvas</code>, <code>Misc</code></p> <p>Main contrainer: Canvas.</p> <p>The parent widget of all virtual widgets is <code>Canvas</code>.</p> <ul> <li><code>master</code>: parent widget</li> <li><code>expand</code>: the mode of expand, <code>x</code> is horizontal, and <code>y</code> is vertical</li> <li><code>auto_zoom</code>: whether or not to scale its items automatically</li> <li><code>keep_ratio</code>: the mode of aspect ratio, <code>min</code> follows the minimum value, <code>max</code> follows the maximum value</li> <li><code>free_anchor</code>: whether the anchor point is free-floating</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>zoom_all_items</code>: (Experimental) whether or not to scale its all items</li> <li><code>kwargs</code>: compatible with other parameters of class <code>tkinter.Canvas</code></li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>theme</code>             \u2013              <p>Change the color theme of the Canvas and its items</p> </li> <li> <code>zoom</code>             \u2013              <p>Resize and position the <code>Canvas</code> based on the relevant parameters.</p> </li> <li> <code>destroy</code>             \u2013              <p>Destroy this and all descendants widgets.</p> </li> <li> <code>clear</code>             \u2013              <p>Clear all things in the Canvas.</p> </li> <li> <code>create_text</code>             \u2013              <p>Create text with coordinates x, y.</p> </li> <li> <code>on_motion</code>             \u2013              <p>Events to move the mouse</p> </li> <li> <code>on_click</code>             \u2013              <p>Events to active the mouse</p> </li> <li> <code>on_release</code>             \u2013              <p>Events to release the mouse</p> </li> <li> <code>on_wheel</code>             \u2013              <p>Events to scroll the mouse wheel</p> </li> <li> <code>on_key_press</code>             \u2013              <p>Events for typing</p> </li> <li> <code>on_key_release</code>             \u2013              <p>Events for typing</p> </li> <li> <code>register_event</code>             \u2013              <p>Register a event to process.</p> </li> </ul> <p>\u5c5e\u6027\uff1a</p> <ul> <li> <code>ratios</code>               (<code>tuple[float, float]</code>)           \u2013            <p>Return the aspect zoom ratio of the widget.</p> </li> </ul>"},{"location":"documents/core/#maliang.core.Canvas.ratios","title":"ratios  <code>cached</code> <code>property</code>","text":"<pre><code>ratios: tuple[float, float]\n</code></pre> <p>Return the aspect zoom ratio of the widget.</p>"},{"location":"documents/core/#maliang.core.Canvas.theme","title":"theme","text":"<pre><code>theme(value: typing.Literal['light', 'dark']) -&gt; None\n</code></pre> <p>Change the color theme of the Canvas and its items</p> <ul> <li><code>value</code>: theme name</li> </ul>"},{"location":"documents/core/#maliang.core.Canvas.zoom","title":"zoom","text":"<pre><code>zoom() -&gt; None\n</code></pre> <p>Resize and position the <code>Canvas</code> based on the relevant parameters.</p> <p>This method only works for Canvas with Place layout.</p>"},{"location":"documents/core/#maliang.core.Canvas.destroy","title":"destroy","text":"<pre><code>destroy() -&gt; None\n</code></pre> <p>Destroy this and all descendants widgets.</p>"},{"location":"documents/core/#maliang.core.Canvas.clear","title":"clear","text":"<pre><code>clear() -&gt; None\n</code></pre> <p>Clear all things in the Canvas.</p>"},{"location":"documents/core/#maliang.core.Canvas.create_text","title":"create_text","text":"<pre><code>create_text(x: float, y: float, /, *args, **kwargs) -&gt; int\n</code></pre> <p>Create text with coordinates x, y.</p>"},{"location":"documents/core/#maliang.core.Canvas.on_motion","title":"on_motion","text":"<pre><code>on_motion(event: tkinter.Event, name: str) -&gt; None\n</code></pre> <p>Events to move the mouse</p>"},{"location":"documents/core/#maliang.core.Canvas.on_click","title":"on_click","text":"<pre><code>on_click(event: tkinter.Event, name: str) -&gt; None\n</code></pre> <p>Events to active the mouse</p>"},{"location":"documents/core/#maliang.core.Canvas.on_release","title":"on_release","text":"<pre><code>on_release(event: tkinter.Event, name: str) -&gt; None\n</code></pre> <p>Events to release the mouse</p>"},{"location":"documents/core/#maliang.core.Canvas.on_wheel","title":"on_wheel","text":"<pre><code>on_wheel(event: tkinter.Event, type_: bool | None) -&gt; None\n</code></pre> <p>Events to scroll the mouse wheel</p>"},{"location":"documents/core/#maliang.core.Canvas.on_key_press","title":"on_key_press","text":"<pre><code>on_key_press(event: tkinter.Event) -&gt; None\n</code></pre> <p>Events for typing</p>"},{"location":"documents/core/#maliang.core.Canvas.on_key_release","title":"on_key_release","text":"<pre><code>on_key_release(event: tkinter.Event) -&gt; None\n</code></pre> <p>Events for typing</p>"},{"location":"documents/core/#maliang.core.Canvas.register_event","title":"register_event","text":"<pre><code>register_event(name: str, *, add: bool | typing.Literal['', '+'] | None = None) -&gt; str\n</code></pre> <p>Register a event to process.</p> <ul> <li><code>name</code>: event name, such as \u201c\u201c <li><code>add</code>: whether it is an attached call</li> <p>In general, you don\u2019t need to call this method, but when the event to be bound is not in the predefined event, you need to manually call the method once.</p>"},{"location":"documents/core/#maliang.core.reset","title":"reset","text":"<pre><code>reset() -&gt; None\n</code></pre> <p>Reset all configuration options.</p>"},{"location":"documents/core/configs/","title":"maliang.core.configs","text":"<p> \u5b57\u6570 9 \u4e2a \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p> \u6e90\u4ee3\u7801\uff1a<code>maliang/core/configs.py</code></p> <p>All global configuration options.</p> <p>Some options are read-only, but most of them can be changed, and once changed, they will take effect globally for the program. Some changes take effect immediately, but some need to take effect when the relevant option is invoked.</p> <p>\u7c7b\uff1a</p> <ul> <li> <code>Env</code>           \u2013            <p>Configurations for default environment values.</p> </li> <li> <code>Font</code>           \u2013            <p>Configurations for default font.</p> </li> <li> <code>Constant</code>           \u2013            <p>All Constants.</p> </li> </ul> <p>\u51fd\u6570\uff1a</p> <ul> <li> <code>reset</code>             \u2013              <p>Reset all configuration options.</p> </li> </ul>"},{"location":"documents/core/configs/#maliang.core.configs.Env","title":"Env","text":"<p>Configurations for default environment values.</p> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>reset</code>             \u2013              <p>Reset all configuration options.</p> </li> <li> <code>get_default_system</code>             \u2013              <p>Get the system of environment.</p> </li> </ul>"},{"location":"documents/core/configs/#maliang.core.configs.Env.reset","title":"reset  <code>classmethod</code>","text":"<pre><code>reset() -&gt; None\n</code></pre> <p>Reset all configuration options.</p>"},{"location":"documents/core/configs/#maliang.core.configs.Env.get_default_system","title":"get_default_system  <code>staticmethod</code>","text":"<pre><code>get_default_system() -&gt; str\n</code></pre> <p>Get the system of environment.</p>"},{"location":"documents/core/configs/#maliang.core.configs.Font","title":"Font","text":"<p>Configurations for default font.</p> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>reset</code>             \u2013              <p>Reset all configuration options.</p> </li> <li> <code>get_default_family</code>             \u2013              <p>Get the default font family.</p> </li> </ul>"},{"location":"documents/core/configs/#maliang.core.configs.Font.reset","title":"reset  <code>classmethod</code>","text":"<pre><code>reset() -&gt; None\n</code></pre> <p>Reset all configuration options.</p>"},{"location":"documents/core/configs/#maliang.core.configs.Font.get_default_family","title":"get_default_family  <code>staticmethod</code>","text":"<pre><code>get_default_family() -&gt; str\n</code></pre> <p>Get the default font family.</p>"},{"location":"documents/core/configs/#maliang.core.configs.Constant","title":"Constant","text":"<p>All Constants.</p> <p>\u5c5e\u6027\uff1a</p> <ul> <li> <code>GOLDEN_RATIO</code>               (<code>typing.Final[float]</code>)           \u2013            <p>The golden ratio, which is needed to automatically calculate the color</p> </li> <li> <code>PREDEFINED_EVENTS</code>               (<code>typing.Final[tuple[str, ...]]</code>)           \u2013            <p>Predefined events that can be used directly without registration. It is</p> </li> <li> <code>PREDEFINED_VIRTUAL_EVENTS</code>               (<code>typing.Final[tuple[str, ...]]</code>)           \u2013            <p>Predefined virtual events that can be used directly without</p> </li> </ul>"},{"location":"documents/core/configs/#maliang.core.configs.Constant.GOLDEN_RATIO","title":"GOLDEN_RATIO  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>GOLDEN_RATIO: typing.Final[float] = math.sqrt(5) - 1 / 2\n</code></pre> <p>The golden ratio, which is needed to automatically calculate the color of widget on <code>\"disabled\"</code> state. It is READ-ONLY.</p>"},{"location":"documents/core/configs/#maliang.core.configs.Constant.PREDEFINED_EVENTS","title":"PREDEFINED_EVENTS  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>PREDEFINED_EVENTS: typing.Final[tuple[str, ...]] = (\n    \"&lt;KeyPress&gt;\",\n    \"&lt;KeyRelease&gt;\",\n    \"&lt;Button-1&gt;\",\n    \"&lt;Button-2&gt;\",\n    \"&lt;Button-3&gt;\",\n    \"&lt;Button-4&gt;\",\n    \"&lt;Button-5&gt;\",\n    \"&lt;ButtonRelease-1&gt;\",\n    \"&lt;ButtonRelease-2&gt;\",\n    \"&lt;ButtonRelease-3&gt;\",\n    \"&lt;MouseWheel&gt;\",\n    \"&lt;Motion&gt;\",\n    \"&lt;B1-Motion&gt;\",\n    \"&lt;B2-Motion&gt;\",\n    \"&lt;B3-Motion&gt;\",\n    \"&lt;Configure&gt;\",\n)\n</code></pre> <p>Predefined events that can be used directly without registration. It is READ-ONLY.</p>"},{"location":"documents/core/configs/#maliang.core.configs.Constant.PREDEFINED_VIRTUAL_EVENTS","title":"PREDEFINED_VIRTUAL_EVENTS  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>PREDEFINED_VIRTUAL_EVENTS: typing.Final[tuple[str, ...]] = (\n    \"&lt;&lt;Copy&gt;&gt;\",\n    \"&lt;&lt;Paste&gt;&gt;\",\n    \"&lt;&lt;Cut&gt;&gt;\",\n    \"&lt;&lt;SelectAll&gt;&gt;\",\n    \"&lt;&lt;Redo&gt;&gt;\",\n    \"&lt;&lt;Undo&gt;&gt;\",\n)\n</code></pre> <p>Predefined virtual events that can be used directly without registration. It is READ-ONLY.</p>"},{"location":"documents/core/configs/#maliang.core.configs.reset","title":"reset","text":"<pre><code>reset() -&gt; None\n</code></pre> <p>Reset all configuration options.</p>"},{"location":"documents/core/containers/","title":"maliang.core.containers","text":"<p> \u5b57\u6570 9 \u4e2a \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p> \u6e90\u4ee3\u7801\uff1a<code>maliang/core/containers.py</code></p> <p>All containers.</p> <p>There are two containers at the window level: <code>Tk</code> and <code>Toplevel</code>. <code>Tk</code> is generally used for the main window, while <code>Toplevel</code> is a pop-up window.</p> <p>There is another container at the canvas level: <code>Canvas</code>. <code>Canvas</code> is the main container carrier.</p> <p>\u7c7b\uff1a</p> <ul> <li> <code>Tk</code>           \u2013            <p>Main window.</p> </li> <li> <code>Toplevel</code>           \u2013            <p>Toplevel window.</p> </li> <li> <code>Canvas</code>           \u2013            <p>Main contrainer: Canvas.</p> </li> </ul>"},{"location":"documents/core/containers/#maliang.core.containers.Misc","title":"Misc","text":"<p>               Bases: <code>abc.ABC</code></p> <p>An abstract miscellaneous class that implements some details.</p> <p>Currently, this class implements the ability to use the <code>with</code> statement for its subclasses for testing.</p> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>destroy</code>             \u2013              <p>Destroy the object.</p> </li> </ul>"},{"location":"documents/core/containers/#maliang.core.containers.Misc.destroy","title":"destroy  <code>abstractmethod</code>","text":"<pre><code>destroy() -&gt; None\n</code></pre> <p>Destroy the object.</p>"},{"location":"documents/core/containers/#maliang.core.containers.Tk","title":"Tk","text":"<pre><code>Tk(\n    size: tuple[int, int] = (1280, 720),\n    position: tuple[int, int] | None = None,\n    *,\n    title: str | None = None,\n    icon: str | enhanced.PhotoImage | None = None,\n    **kwargs,\n)\n</code></pre> <p>               Bases: <code>tkinter.Tk</code>, <code>Misc</code></p> <p>Main window.</p> <p>In general, there is only one main window. But after destroying it, another one can be created.</p> <ul> <li><code>size</code>: size of the window</li> <li><code>position</code>: position of the window, based on the upper left (nw) corner. And negative numbers are based on the bottom right (se) corner.</li> <li><code>title</code>: title of the window, default value is <code>\"tk\"</code></li> <li><code>icon</code>: icon of the window, default value is the icon of tk</li> <li><code>**kwargs</code>: compatible with other parameters of class <code>tkinter.Tk</code></li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>theme</code>             \u2013              <p>Change the color theme of the window</p> </li> <li> <code>geometry</code>             \u2013              <p>Change the size and position of the window and return the current</p> </li> <li> <code>center</code>             \u2013              <p>Center the container</p> </li> <li> <code>icon</code>             \u2013              <p>Set the icon of the window.</p> </li> <li> <code>alpha</code>             \u2013              <p>Set or get the transparency of the window</p> </li> <li> <code>topmost</code>             \u2013              <p>Set or get whether the window is pinned or not</p> </li> <li> <code>fullscreen</code>             \u2013              <p>Set or get whether the window is full-screen.</p> </li> <li> <code>toolwindow</code>             \u2013              <p>Set or get whether the window is tool-window.</p> </li> <li> <code>transparentcolor</code>             \u2013              <p>Set or get the penetration color of the window.</p> </li> <li> <code>modified</code>             \u2013              <p>Set or get whether the window is modified.</p> </li> <li> <code>transparent</code>             \u2013              <p>Set or get whether the window is transparent.</p> </li> <li> <code>destroy</code>             \u2013              <p>Destroy this and all descendants widgets.</p> </li> <li> <code>at_exit</code>             \u2013              <p>Set a function that will be called when the window is closed.</p> </li> </ul> <p>\u5c5e\u6027\uff1a</p> <ul> <li> <code>ratios</code>               (<code>tuple[float, float]</code>)           \u2013            <p>Return the aspect zoom ratio of the container.</p> </li> </ul>"},{"location":"documents/core/containers/#maliang.core.containers.Tk.ratios","title":"ratios  <code>cached</code> <code>property</code>","text":"<pre><code>ratios: tuple[float, float]\n</code></pre> <p>Return the aspect zoom ratio of the container.</p>"},{"location":"documents/core/containers/#maliang.core.containers.Tk.theme","title":"theme","text":"<pre><code>theme(\n    value: typing.Literal[\"light\", \"dark\"],\n    *,\n    include_children: bool = True,\n    include_canvases: bool = True,\n) -&gt; None\n</code></pre> <p>Change the color theme of the window</p> <ul> <li><code>value</code>: theme name</li> <li><code>include_children</code>: wether include its children, like Toplevel</li> <li><code>include_canvases</code>: wether include its canvases</li> </ul>"},{"location":"documents/core/containers/#maliang.core.containers.Tk.geometry","title":"geometry","text":"<pre><code>geometry(\n    *, size: tuple[int, int] | None = None, position: tuple[int, int] | None = None\n) -&gt; tuple[int, int, int, int] | None\n</code></pre> <p>Change the size and position of the window and return the current size and position of the window.</p> <ul> <li><code>size</code>: the size of the window, if it is None, does not change anything</li> <li><code>position</code>: the position of the window, if it is None, does not change anything</li> </ul> <p>If you want to use <code>tkinter.Tk.geometry</code>, please use <code>tkinter.Tk.wm_geometry</code> instead.</p>"},{"location":"documents/core/containers/#maliang.core.containers.Tk.center","title":"center","text":"<pre><code>center(*, refer: tkinter.Misc | None = None) -&gt; None\n</code></pre> <p>Center the container</p> <p><code>refer</code>: The area of the reference widget, if it is None, means that the reference area is the entire screen.</p>"},{"location":"documents/core/containers/#maliang.core.containers.Tk.icon","title":"icon","text":"<pre><code>icon(value: str | enhanced.PhotoImage) -&gt; None\n</code></pre> <p>Set the icon of the window.</p> <ul> <li><code>value</code>: the icon</li> </ul>"},{"location":"documents/core/containers/#maliang.core.containers.Tk.alpha","title":"alpha","text":"<pre><code>alpha(value: float | None = None) -&gt; float | None\n</code></pre> <p>Set or get the transparency of the window</p> <ul> <li><code>value</code>: the transparency of the window, range is 0~1</li> </ul>"},{"location":"documents/core/containers/#maliang.core.containers.Tk.topmost","title":"topmost","text":"<pre><code>topmost(value: bool | None = True) -&gt; bool | None\n</code></pre> <p>Set or get whether the window is pinned or not</p> <ul> <li><code>value</code>: indicate whether the window is topmost</li> </ul>"},{"location":"documents/core/containers/#maliang.core.containers.Tk.fullscreen","title":"fullscreen","text":"<pre><code>fullscreen(value: bool | None = True) -&gt; bool | None\n</code></pre> <p>Set or get whether the window is full-screen.</p> <ul> <li><code>value</code>: indicate whether the window is full-screen</li> </ul> <p>The method should be called at the end of the code, or after some time after the program has started.</p>"},{"location":"documents/core/containers/#maliang.core.containers.Tk.toolwindow","title":"toolwindow","text":"<pre><code>toolwindow(value: bool | None = True) -&gt; bool | None\n</code></pre> <p>Set or get whether the window is tool-window.</p> <ul> <li><code>value</code>: indicate whether the window is tool-window</li> </ul> <p>This method only works on Windows!</p>"},{"location":"documents/core/containers/#maliang.core.containers.Tk.transparentcolor","title":"transparentcolor","text":"<pre><code>transparentcolor(value: str | None = None) -&gt; str | None\n</code></pre> <p>Set or get the penetration color of the window.</p> <ul> <li><code>value</code>: the penetration color of the window</li> </ul> <p>This method only works on Windows!</p>"},{"location":"documents/core/containers/#maliang.core.containers.Tk.modified","title":"modified","text":"<pre><code>modified(value: bool | None = None) -&gt; bool | None\n</code></pre> <p>Set or get whether the window is modified.</p> <ul> <li><code>value</code>: indicate whether the window is modified</li> </ul> <p>This method only works on macOS!</p>"},{"location":"documents/core/containers/#maliang.core.containers.Tk.transparent","title":"transparent","text":"<pre><code>transparent(value: bool | None = None) -&gt; bool | None\n</code></pre> <p>Set or get whether the window is transparent.</p> <ul> <li><code>value</code>: indicate whether the window is transparent</li> </ul> <p>This method only works on macOS!</p>"},{"location":"documents/core/containers/#maliang.core.containers.Tk.destroy","title":"destroy","text":"<pre><code>destroy() -&gt; None\n</code></pre> <p>Destroy this and all descendants widgets.</p>"},{"location":"documents/core/containers/#maliang.core.containers.Tk.at_exit","title":"at_exit","text":"<pre><code>at_exit(command: collections.abc.Callable[[], typing.Any], *, ensure_destroy: bool = True) -&gt; None\n</code></pre> <p>Set a function that will be called when the window is closed.</p> <ul> <li><code>command</code>: the function that was called</li> <li><code>ensure_destroy</code>: whether the window is guaranteed to be closed</li> </ul>"},{"location":"documents/core/containers/#maliang.core.containers.Toplevel","title":"Toplevel","text":"<pre><code>Toplevel(\n    master: Tk | Toplevel | None = None,\n    size: tuple[int, int] = (960, 540),\n    position: tuple[int, int] | None = None,\n    *,\n    title: str | None = None,\n    icon: str | enhanced.PhotoImage | None = None,\n    grab: bool = False,\n    focus: bool = True,\n    **kwargs,\n)\n</code></pre> <p>               Bases: <code>tkinter.Toplevel</code>, <code>Tk</code>, <code>Misc</code></p> <p>Toplevel window.</p> <p>It can be used as a pop-up window, or it can be customized to put anything you want to show.</p> <ul> <li><code>master</code>: parent widget</li> <li><code>size</code>: size of the window, default value is 960x540(px)</li> <li><code>position</code>: position of the window, default value indicates random</li> <li><code>title</code>: title of window, default is the same as title of master</li> <li><code>icon</code>: icon of the window, default is the same as title of master</li> <li><code>grab</code>: set grab for this window</li> <li><code>focus</code>: whether direct input focus to this window</li> <li><code>**kwargs</code>: compatible with other parameters of class <code>tkinter.Toplevel</code></li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>destroy</code>             \u2013              <p>Destroy this and all descendants widgets.</p> </li> </ul>"},{"location":"documents/core/containers/#maliang.core.containers.Toplevel.destroy","title":"destroy","text":"<pre><code>destroy() -&gt; None\n</code></pre> <p>Destroy this and all descendants widgets.</p>"},{"location":"documents/core/containers/#maliang.core.containers.Canvas","title":"Canvas","text":"<pre><code>Canvas(\n    master: Tk | Toplevel | Canvas | None = None,\n    *,\n    expand: typing.Literal[\"\", \"x\", \"y\", \"xy\"] = \"xy\",\n    auto_zoom: bool = False,\n    keep_ratio: typing.Literal[\"min\", \"max\"] | None = None,\n    free_anchor: bool = False,\n    auto_update: bool | None = None,\n    zoom_all_items: bool = False,\n    **kwargs,\n)\n</code></pre> <p>               Bases: <code>tkinter.Canvas</code>, <code>Misc</code></p> <p>Main contrainer: Canvas.</p> <p>The parent widget of all virtual widgets is <code>Canvas</code>.</p> <ul> <li><code>master</code>: parent widget</li> <li><code>expand</code>: the mode of expand, <code>x</code> is horizontal, and <code>y</code> is vertical</li> <li><code>auto_zoom</code>: whether or not to scale its items automatically</li> <li><code>keep_ratio</code>: the mode of aspect ratio, <code>min</code> follows the minimum value, <code>max</code> follows the maximum value</li> <li><code>free_anchor</code>: whether the anchor point is free-floating</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>zoom_all_items</code>: (Experimental) whether or not to scale its all items</li> <li><code>kwargs</code>: compatible with other parameters of class <code>tkinter.Canvas</code></li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>theme</code>             \u2013              <p>Change the color theme of the Canvas and its items</p> </li> <li> <code>zoom</code>             \u2013              <p>Resize and position the <code>Canvas</code> based on the relevant parameters.</p> </li> <li> <code>destroy</code>             \u2013              <p>Destroy this and all descendants widgets.</p> </li> <li> <code>clear</code>             \u2013              <p>Clear all things in the Canvas.</p> </li> <li> <code>create_text</code>             \u2013              <p>Create text with coordinates x, y.</p> </li> <li> <code>on_motion</code>             \u2013              <p>Events to move the mouse</p> </li> <li> <code>on_click</code>             \u2013              <p>Events to active the mouse</p> </li> <li> <code>on_release</code>             \u2013              <p>Events to release the mouse</p> </li> <li> <code>on_wheel</code>             \u2013              <p>Events to scroll the mouse wheel</p> </li> <li> <code>on_key_press</code>             \u2013              <p>Events for typing</p> </li> <li> <code>on_key_release</code>             \u2013              <p>Events for typing</p> </li> <li> <code>register_event</code>             \u2013              <p>Register a event to process.</p> </li> </ul> <p>\u5c5e\u6027\uff1a</p> <ul> <li> <code>ratios</code>               (<code>tuple[float, float]</code>)           \u2013            <p>Return the aspect zoom ratio of the widget.</p> </li> </ul>"},{"location":"documents/core/containers/#maliang.core.containers.Canvas.ratios","title":"ratios  <code>cached</code> <code>property</code>","text":"<pre><code>ratios: tuple[float, float]\n</code></pre> <p>Return the aspect zoom ratio of the widget.</p>"},{"location":"documents/core/containers/#maliang.core.containers.Canvas.theme","title":"theme","text":"<pre><code>theme(value: typing.Literal['light', 'dark']) -&gt; None\n</code></pre> <p>Change the color theme of the Canvas and its items</p> <ul> <li><code>value</code>: theme name</li> </ul>"},{"location":"documents/core/containers/#maliang.core.containers.Canvas.zoom","title":"zoom","text":"<pre><code>zoom() -&gt; None\n</code></pre> <p>Resize and position the <code>Canvas</code> based on the relevant parameters.</p> <p>This method only works for Canvas with Place layout.</p>"},{"location":"documents/core/containers/#maliang.core.containers.Canvas.destroy","title":"destroy","text":"<pre><code>destroy() -&gt; None\n</code></pre> <p>Destroy this and all descendants widgets.</p>"},{"location":"documents/core/containers/#maliang.core.containers.Canvas.clear","title":"clear","text":"<pre><code>clear() -&gt; None\n</code></pre> <p>Clear all things in the Canvas.</p>"},{"location":"documents/core/containers/#maliang.core.containers.Canvas.create_text","title":"create_text","text":"<pre><code>create_text(x: float, y: float, /, *args, **kwargs) -&gt; int\n</code></pre> <p>Create text with coordinates x, y.</p>"},{"location":"documents/core/containers/#maliang.core.containers.Canvas.on_motion","title":"on_motion","text":"<pre><code>on_motion(event: tkinter.Event, name: str) -&gt; None\n</code></pre> <p>Events to move the mouse</p>"},{"location":"documents/core/containers/#maliang.core.containers.Canvas.on_click","title":"on_click","text":"<pre><code>on_click(event: tkinter.Event, name: str) -&gt; None\n</code></pre> <p>Events to active the mouse</p>"},{"location":"documents/core/containers/#maliang.core.containers.Canvas.on_release","title":"on_release","text":"<pre><code>on_release(event: tkinter.Event, name: str) -&gt; None\n</code></pre> <p>Events to release the mouse</p>"},{"location":"documents/core/containers/#maliang.core.containers.Canvas.on_wheel","title":"on_wheel","text":"<pre><code>on_wheel(event: tkinter.Event, type_: bool | None) -&gt; None\n</code></pre> <p>Events to scroll the mouse wheel</p>"},{"location":"documents/core/containers/#maliang.core.containers.Canvas.on_key_press","title":"on_key_press","text":"<pre><code>on_key_press(event: tkinter.Event) -&gt; None\n</code></pre> <p>Events for typing</p>"},{"location":"documents/core/containers/#maliang.core.containers.Canvas.on_key_release","title":"on_key_release","text":"<pre><code>on_key_release(event: tkinter.Event) -&gt; None\n</code></pre> <p>Events for typing</p>"},{"location":"documents/core/containers/#maliang.core.containers.Canvas.register_event","title":"register_event","text":"<pre><code>register_event(name: str, *, add: bool | typing.Literal['', '+'] | None = None) -&gt; str\n</code></pre> <p>Register a event to process.</p> <ul> <li><code>name</code>: event name, such as \u201c\u201c <li><code>add</code>: whether it is an attached call</li> <p>In general, you don\u2019t need to call this method, but when the event to be bound is not in the predefined event, you need to manually call the method once.</p>"},{"location":"documents/core/virtual/","title":"maliang.core.virtual","text":"<p> \u5b57\u6570 9 \u4e2a \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p> \u6e90\u4ee3\u7801\uff1a<code>maliang/core/virtual.py</code></p> <p>All virtual classes.</p> <p>The <code>virtual.Widget</code> consists of five parts, which are <code>Shape</code>, <code>Text</code>, <code>Image</code>, <code>Style</code> and <code>Feature</code>. In addition, they can be nested within each other.</p> <p>Where <code>Feature</code> is the function of widgets, <code>Style</code> control the color of the widget, and each widget can be bound to up to one <code>Feature</code> and one <code>Style</code>, but in terms of appearance, there is no limit to the number of <code>Shape</code>, <code>Text</code>, and <code>Image</code>.</p> <p><code>Shape</code>, <code>Text</code>, and <code>Image</code> are all appearance elements that inherit from abstract base class <code>Elements</code>.</p> <p>\u7c7b\uff1a</p> <ul> <li> <code>Element</code>           \u2013            <p>The basic visible part of a <code>virtual.Widget</code>.</p> </li> <li> <code>Shape</code>           \u2013            <p>The Shape of a <code>Widget</code></p> </li> <li> <code>Text</code>           \u2013            <p>The Text of a <code>Widget</code>.</p> </li> <li> <code>Image</code>           \u2013            <p>The Image of a <code>Widget</code>.</p> </li> <li> <code>Style</code>           \u2013            <p>The styles of a <code>Widget</code>.</p> </li> <li> <code>Feature</code>           \u2013            <p>The features of a <code>Widget</code>.</p> </li> <li> <code>Widget</code>           \u2013            <p>Base Widget Class.</p> </li> </ul>"},{"location":"documents/core/virtual/#maliang.core.virtual.Element","title":"Element","text":"<pre><code>Element(\n    widget: Widget,\n    position: tuple[int, int] = (0, 0),\n    size: tuple[int, int] | None = None,\n    *,\n    name: str | None = None,\n    gradient_animation: bool | None = None,\n    **kwargs,\n)\n</code></pre> <p>               Bases: <code>abc.ABC</code></p> <p>The basic visible part of a <code>virtual.Widget</code>.</p> <ul> <li><code>widget</code>: parent widget</li> <li><code>position</code>: position relative to its widgets</li> <li><code>size</code>: size of element</li> <li><code>name</code>: name of element</li> <li><code>gradient_animation</code>: Wether use animation to change color</li> <li><code>kwargs</code>: extra parameters for CanvasItem</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>move</code>             \u2013              <p>Move the <code>Element</code>.</p> </li> <li> <code>moveto</code>             \u2013              <p>Move the <code>Element</code> to a certain position.</p> </li> <li> <code>destroy</code>             \u2013              <p>Destroy the <code>Element</code>.</p> </li> <li> <code>center</code>             \u2013              <p>Return the geometric center of the <code>Element</code>.</p> </li> <li> <code>region</code>             \u2013              <p>Return the decision region of the <code>Element</code>.</p> </li> <li> <code>detect</code>             \u2013              <p>Detect whether the specified coordinates are within <code>Element</code>.</p> </li> <li> <code>update</code>             \u2013              <p>Update the style of the <code>Element</code> to the corresponding state.</p> </li> <li> <code>configure</code>             \u2013              <p>Configure properties of <code>Element</code> and update them immediately.</p> </li> <li> <code>forget</code>             \u2013              <p>Let the element to forget.</p> </li> <li> <code>zoom</code>             \u2013              <p>Zoom the <code>Element</code>.</p> </li> <li> <code>display</code>             \u2013              <p>Display the <code>Element</code> on a <code>Canvas</code>.</p> </li> <li> <code>coords</code>             \u2013              <p>Resize the <code>Element</code>.</p> </li> </ul>"},{"location":"documents/core/virtual/#maliang.core.virtual.Element.move","title":"move","text":"<pre><code>move(dx: float, dy: float) -&gt; None\n</code></pre> <p>Move the <code>Element</code>.</p> <ul> <li><code>dx</code>: x-coordinate offset</li> <li><code>dy</code>: y-coordinate offset</li> </ul>"},{"location":"documents/core/virtual/#maliang.core.virtual.Element.moveto","title":"moveto","text":"<pre><code>moveto(x: float, y: float) -&gt; None\n</code></pre> <p>Move the <code>Element</code> to a certain position.</p> <ul> <li><code>x</code>: x-coordinate of the target location</li> <li><code>y</code>: y-coordinate of the target location</li> </ul>"},{"location":"documents/core/virtual/#maliang.core.virtual.Element.destroy","title":"destroy","text":"<pre><code>destroy() -&gt; None\n</code></pre> <p>Destroy the <code>Element</code>.</p>"},{"location":"documents/core/virtual/#maliang.core.virtual.Element.center","title":"center","text":"<pre><code>center() -&gt; tuple[float, float]\n</code></pre> <p>Return the geometric center of the <code>Element</code>.</p>"},{"location":"documents/core/virtual/#maliang.core.virtual.Element.region","title":"region","text":"<pre><code>region() -&gt; tuple[int, int, int, int]\n</code></pre> <p>Return the decision region of the <code>Element</code>.</p>"},{"location":"documents/core/virtual/#maliang.core.virtual.Element.detect","title":"detect","text":"<pre><code>detect(x: float, y: float) -&gt; bool\n</code></pre> <p>Detect whether the specified coordinates are within <code>Element</code>.</p> <ul> <li><code>x</code>: x-coordinate of the location to be detected</li> <li><code>y</code>: y-coordinate of the location to be detected</li> </ul>"},{"location":"documents/core/virtual/#maliang.core.virtual.Element.update","title":"update","text":"<pre><code>update(state: str | None = None, *, gradient_animation: bool = False) -&gt; None\n</code></pre> <p>Update the style of the <code>Element</code> to the corresponding state.</p> <ul> <li><code>state</code>: the state of the <code>Element</code></li> <li><code>gradient_animation</code>: whether use gradient animation</li> </ul>"},{"location":"documents/core/virtual/#maliang.core.virtual.Element.configure","title":"configure","text":"<pre><code>configure(style: dict[str, str], *, gradient_animation: bool = True) -&gt; None\n</code></pre> <p>Configure properties of <code>Element</code> and update them immediately.</p> <ul> <li><code>style</code>: style data</li> <li><code>gradient_animation</code>: whether use gradient animation</li> </ul>"},{"location":"documents/core/virtual/#maliang.core.virtual.Element.forget","title":"forget","text":"<pre><code>forget(value: bool = True, *, gradient_animation: bool = False) -&gt; None\n</code></pre> <p>Let the element to forget.</p> <ul> <li><code>value</code>: whether to forget</li> <li><code>gradient_animation</code>: whether use gradient animation</li> </ul>"},{"location":"documents/core/virtual/#maliang.core.virtual.Element.zoom","title":"zoom","text":"<pre><code>zoom(ratios: tuple[float, float], *, zoom_position: bool = True, zoom_size: bool = True) -&gt; None\n</code></pre> <p>Zoom the <code>Element</code>.</p> <ul> <li><code>ratios</code>: ratios of zooming</li> <li><code>zoom_position</code>: whether or not to zoom the location of the element</li> <li><code>zoom_size</code>: whether or not to zoom the size of the element</li> </ul>"},{"location":"documents/core/virtual/#maliang.core.virtual.Element.display","title":"display  <code>abstractmethod</code>","text":"<pre><code>display() -&gt; None\n</code></pre> <p>Display the <code>Element</code> on a <code>Canvas</code>.</p>"},{"location":"documents/core/virtual/#maliang.core.virtual.Element.coords","title":"coords  <code>abstractmethod</code>","text":"<pre><code>coords(\n    size: tuple[float, float] | None = None, position: tuple[float, float] | None = None\n) -&gt; None\n</code></pre> <p>Resize the <code>Element</code>.</p> <ul> <li><code>size</code>: new size of the element</li> <li><code>position</code>: new position of the element</li> </ul>"},{"location":"documents/core/virtual/#maliang.core.virtual.Shape","title":"Shape","text":"<pre><code>Shape(\n    widget: Widget,\n    position: tuple[int, int] = (0, 0),\n    size: tuple[int, int] | None = None,\n    *,\n    name: str | None = None,\n    gradient_animation: bool | None = None,\n    **kwargs,\n)\n</code></pre> <p>               Bases: <code>Element</code></p> <p>The Shape of a <code>Widget</code></p> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>zoom</code>             \u2013              <p>Scale the shape.</p> </li> </ul>"},{"location":"documents/core/virtual/#maliang.core.virtual.Shape.zoom","title":"zoom","text":"<pre><code>zoom(ratios: tuple[float, float], *, zoom_position: bool = True, zoom_size: bool = True) -&gt; None\n</code></pre> <p>Scale the shape.</p> <ul> <li><code>ratios</code>: ratios of zooming</li> <li><code>zoom_position</code>: whether or not to zoom the location of the shape</li> <li><code>zoom_size</code>: whether or not to zoom the size of the shape</li> </ul>"},{"location":"documents/core/virtual/#maliang.core.virtual.Text","title":"Text","text":"<pre><code>Text(\n    widget: Widget,\n    relative_position: tuple[int, int] = (0, 0),\n    size: tuple[int, int] | None = None,\n    *,\n    text: str = \"\",\n    limit: int = -1,\n    show: str | None = None,\n    placeholder: str = \"\",\n    family: str | None = None,\n    fontsize: int | None = None,\n    weight: typing.Literal[\"normal\", \"bold\"] = \"normal\",\n    slant: typing.Literal[\"roman\", \"italic\"] = \"roman\",\n    underline: bool = False,\n    overstrike: bool = False,\n    name: str | None = None,\n    gradient_animation: bool = True,\n    **kwargs,\n)\n</code></pre> <p>               Bases: <code>Element</code></p> <p>The Text of a <code>Widget</code>.</p> <ul> <li><code>widget</code>: parent widget</li> <li><code>relative_position</code>: position relative to its widgets</li> <li><code>size</code>: size of element</li> <li><code>text</code>: text value</li> <li><code>family</code>: font family</li> <li><code>fontsize</code>: font size</li> <li><code>weight</code>: weight of the font</li> <li><code>slant</code>: slant of the font</li> <li><code>underline</code>: wether text is underline</li> <li><code>overstrike</code>: wether text is overstrike</li> <li><code>limit</code>: limit on the number of characters</li> <li><code>show</code>: display a value that obscures the original content</li> <li><code>placeholder</code>: a placeholder for the prompt</li> <li><code>name</code>: name of element</li> <li><code>gradient_animation</code>: Wether use animation to change color</li> <li><code>kwargs</code>: extra parameters for CanvasItem</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>region</code>             \u2013              <p>Return the decision region of the <code>Text</code>.</p> </li> <li> <code>zoom</code>             \u2013              <p>Scale the text.</p> </li> </ul>"},{"location":"documents/core/virtual/#maliang.core.virtual.Text.region","title":"region","text":"<pre><code>region() -&gt; tuple[int, int, int, int]\n</code></pre> <p>Return the decision region of the <code>Text</code>.</p>"},{"location":"documents/core/virtual/#maliang.core.virtual.Text.zoom","title":"zoom","text":"<pre><code>zoom(ratios: tuple[float, float], *, zoom_position: bool = True, zoom_size: bool = True) -&gt; None\n</code></pre> <p>Scale the text.</p> <ul> <li><code>ratios</code>: ratios of zooming</li> <li><code>zoom_position</code>: whether or not to zoom the location of the text</li> <li><code>zoom_size</code>: whether or not to zoom the size of the text</li> </ul>"},{"location":"documents/core/virtual/#maliang.core.virtual.Image","title":"Image","text":"<pre><code>Image(\n    widget: Widget,\n    relative_position: tuple[int, int] = (0, 0),\n    size: tuple[int, int] | None = None,\n    *,\n    image: enhanced.PhotoImage | None = None,\n    name: str | None = None,\n    gradient_animation: bool = True,\n    **kwargs,\n)\n</code></pre> <p>               Bases: <code>Element</code></p> <p>The Image of a <code>Widget</code>.</p> <ul> <li><code>widget</code>: parent widget</li> <li><code>relative_position</code>: position relative to its widgets</li> <li><code>size</code>: size of element</li> <li><code>image</code>: image object of the element</li> <li><code>name</code>: name of element</li> <li><code>gradient_animation</code>: Wether use animation to change color</li> <li><code>kwargs</code>: extra parameters for CanvasItem</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>region</code>             \u2013              <p>Return the decision region of the <code>Image</code>.</p> </li> <li> <code>zoom</code>             \u2013              <p>Scale the image.</p> </li> </ul>"},{"location":"documents/core/virtual/#maliang.core.virtual.Image.region","title":"region","text":"<pre><code>region() -&gt; tuple[int, int, int, int]\n</code></pre> <p>Return the decision region of the <code>Image</code>.</p>"},{"location":"documents/core/virtual/#maliang.core.virtual.Image.zoom","title":"zoom","text":"<pre><code>zoom(ratios: tuple[float, float], *, zoom_position: bool = True, zoom_size: bool = True) -&gt; None\n</code></pre> <p>Scale the image.</p> <ul> <li><code>ratios</code>: ratios of zooming</li> <li><code>zoom_position</code>: whether or not to zoom the location of the image</li> <li><code>zoom_size</code>: whether or not to zoom the size of the image</li> </ul>"},{"location":"documents/core/virtual/#maliang.core.virtual.Style","title":"Style","text":"<pre><code>Style(widget: Widget, *, auto_update: bool | None = None)\n</code></pre> <p>The styles of a <code>Widget</code>.</p> <ul> <li><code>widget</code>: parent widget</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get_disabled_style</code>             \u2013              <p>Get the style data of disabled state.</p> </li> <li> <code>init</code>             \u2013              <p>Initialize some style of an element.</p> </li> <li> <code>get</code>             \u2013              <p>Return the style of the widget.</p> </li> <li> <code>reset</code>             \u2013              <p>Reset the style of the widget and update.</p> </li> <li> <code>set</code>             \u2013              <p>Set the style of the widget.</p> </li> </ul>"},{"location":"documents/core/virtual/#maliang.core.virtual.Style.get_disabled_style","title":"get_disabled_style","text":"<pre><code>get_disabled_style(*, element: Element) -&gt; dict[str, str]\n</code></pre> <p>Get the style data of disabled state.</p> <ul> <li><code>element</code>: element that style to be calculated</li> </ul>"},{"location":"documents/core/virtual/#maliang.core.virtual.Style.init","title":"init","text":"<pre><code>init(key: Element | str | int, *, theme: typing.Literal['light', 'dark'] | None = None) -&gt; None\n</code></pre> <p>Initialize some style of an element.</p> <ul> <li><code>name</code>: the key of the element</li> <li><code>theme</code>: the theme name, None indicates both</li> </ul>"},{"location":"documents/core/virtual/#maliang.core.virtual.Style.get","title":"get","text":"<pre><code>get(\n    *, theme: typing.Literal[\"light\", \"dark\"] | None = None\n) -&gt; dict[str, dict[str, dict[str, str]]]\n</code></pre> <p>Return the style of the widget.</p> <ul> <li><code>theme</code>: the theme of the widget, None indicates the current theme</li> </ul>"},{"location":"documents/core/virtual/#maliang.core.virtual.Style.reset","title":"reset","text":"<pre><code>reset(*, theme: typing.Literal['light', 'dark'] | None = None) -&gt; None\n</code></pre> <p>Reset the style of the widget and update.</p> <ul> <li><code>theme</code>: the theme to be reset, None indicates both</li> </ul>"},{"location":"documents/core/virtual/#maliang.core.virtual.Style.set","title":"set","text":"<pre><code>set() -&gt; None\n</code></pre> <p>Set the style of the widget.</p>"},{"location":"documents/core/virtual/#maliang.core.virtual.Feature","title":"Feature","text":"<pre><code>Feature(widget: Widget)\n</code></pre> <p>The features of a <code>Widget</code>.</p> <ul> <li><code>widget</code>: parent widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get_method</code>             \u2013              <p>Return method by name.</p> </li> </ul>"},{"location":"documents/core/virtual/#maliang.core.virtual.Feature.get_method","title":"get_method","text":"<pre><code>get_method(name: str) -&gt; collections.abc.Callable\n</code></pre> <p>Return method by name.</p> <ul> <li><code>name</code>: name of the method</li> </ul>"},{"location":"documents/core/virtual/#maliang.core.virtual.Widget","title":"Widget","text":"<pre><code>Widget(\n    master: containers.Canvas | Widget,\n    position: tuple[int, int] = (0, 0),\n    size: tuple[int, int] | None = None,\n    *,\n    anchor: typing.Literal[\"n\", \"s\", \"w\", \"e\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[Style] | None = None,\n)\n</code></pre> <p>Base Widget Class.</p> <p><code>Widget</code> = <code>Element</code> + <code>Style</code> + <code>Feature</code></p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>size</code>: size of the widget</li> <li><code>anchor</code>: layout anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>register_elements</code>             \u2013              <p>Register elements to the widget.</p> </li> <li> <code>deregister_elements</code>             \u2013              <p>Deregister a element from the widget.</p> </li> <li> <code>update</code>             \u2013              <p>Update the widget.</p> </li> <li> <code>bind_on_update</code>             \u2013              <p>Bind an extra function to the widget on update.</p> </li> <li> <code>unbind_on_update</code>             \u2013              <p>Unbind an extra function to the widget on update.</p> </li> <li> <code>bind</code>             \u2013              <p>Bind to this widget at event sequence a call to function command.</p> </li> <li> <code>unbind</code>             \u2013              <p>Unbind for this widget the event sequence.</p> </li> <li> <code>generate_event</code>             \u2013              <p>Generate an event sequence. Additional keyword arguments specify</p> </li> <li> <code>disable</code>             \u2013              <p>Disable the widget.</p> </li> <li> <code>forget</code>             \u2013              <p>Let all elements of the widget to forget.</p> </li> <li> <code>move</code>             \u2013              <p>Move the widget.</p> </li> <li> <code>moveto</code>             \u2013              <p>Move the Widget to a certain position.</p> </li> <li> <code>destroy</code>             \u2013              <p>Destroy the widget.</p> </li> <li> <code>detect</code>             \u2013              <p>Detect whether the specified coordinates are within the <code>Widget</code>.</p> </li> <li> <code>zoom</code>             \u2013              <p>Zoom widget ifself.</p> </li> </ul> <p>\u5c5e\u6027\uff1a</p> <ul> <li> <code>elements</code>               (<code>tuple[Element, ...]</code>)           \u2013            <p>Return all elements of the widget.</p> </li> <li> <code>nested</code>               (<code>bool</code>)           \u2013            <p>Whether the widget is a nested widget.</p> </li> <li> <code>offset</code>               (<code>tuple[float, float]</code>)           \u2013            <p>Return the offset of the anchor relative to \u201cnw\u201d.</p> </li> </ul>"},{"location":"documents/core/virtual/#maliang.core.virtual.Widget.elements","title":"elements  <code>property</code>","text":"<pre><code>elements: tuple[Element, ...]\n</code></pre> <p>Return all elements of the widget.</p>"},{"location":"documents/core/virtual/#maliang.core.virtual.Widget.nested","title":"nested  <code>property</code>","text":"<pre><code>nested: bool\n</code></pre> <p>Whether the widget is a nested widget.</p>"},{"location":"documents/core/virtual/#maliang.core.virtual.Widget.offset","title":"offset  <code>property</code>","text":"<pre><code>offset: tuple[float, float]\n</code></pre> <p>Return the offset of the anchor relative to \u201cnw\u201d.</p>"},{"location":"documents/core/virtual/#maliang.core.virtual.Widget.register_elements","title":"register_elements","text":"<pre><code>register_elements(*elements: Element) -&gt; None\n</code></pre> <p>Register elements to the widget.</p> <ul> <li><code>elements</code>: elements to be registered</li> </ul>"},{"location":"documents/core/virtual/#maliang.core.virtual.Widget.deregister_elements","title":"deregister_elements","text":"<pre><code>deregister_elements(*elements: Element) -&gt; None\n</code></pre> <p>Deregister a element from the widget.</p> <ul> <li><code>elements</code>: elements to be deregistered</li> </ul>"},{"location":"documents/core/virtual/#maliang.core.virtual.Widget.update","title":"update","text":"<pre><code>update(\n    state: str | None = None, *, gradient_animation: bool | None = None, nested: bool = True\n) -&gt; None\n</code></pre> <p>Update the widget.</p> <ul> <li><code>state</code>: state of the widget</li> <li><code>gradient_animation</code>: whether use gradient animation</li> <li><code>nested</code>: whether nested</li> </ul>"},{"location":"documents/core/virtual/#maliang.core.virtual.Widget.bind_on_update","title":"bind_on_update","text":"<pre><code>bind_on_update(command: collections.abc.Callable[[str, bool], typing.Any]) -&gt; None\n</code></pre> <p>Bind an extra function to the widget on update.</p> <p>This extra function has two positional arguments, both of which are arguments to the method <code>update</code>. And this extra function will be called when the widget is updated (whether it\u2019s automatically updated or manually updated).</p> <ul> <li><code>command</code>: the extra function that is bound</li> </ul>"},{"location":"documents/core/virtual/#maliang.core.virtual.Widget.unbind_on_update","title":"unbind_on_update","text":"<pre><code>unbind_on_update(command: collections.abc.Callable[[str, bool], typing.Any]) -&gt; None\n</code></pre> <p>Unbind an extra function to the widget on update.</p> <ul> <li><code>command</code>: the extra function that is bound</li> </ul>"},{"location":"documents/core/virtual/#maliang.core.virtual.Widget.bind","title":"bind","text":"<pre><code>bind(\n    sequence: str,\n    command: collections.abc.Callable[[tkinter.Event], typing.Any],\n    add: bool | typing.Literal[\"\", \"+\"] | None = None,\n    *,\n    auto_detect: bool = True,\n) -&gt; None\n</code></pre> <p>Bind to this widget at event sequence a call to function command.</p> <ul> <li><code>sequence</code>: event name</li> <li><code>command</code>: callback function</li> <li><code>add</code>: if True, original callback function will not be overwritten</li> <li><code>auto_detect</code>: Automatically determine whether to execute binding events based on the method <code>detect</code></li> </ul>"},{"location":"documents/core/virtual/#maliang.core.virtual.Widget.unbind","title":"unbind","text":"<pre><code>unbind(sequence: str, command: collections.abc.Callable[[tkinter.Event], typing.Any]) -&gt; None\n</code></pre> <p>Unbind for this widget the event sequence.</p> <ul> <li><code>sequence</code>: event name</li> <li><code>command</code>: callback function</li> </ul>"},{"location":"documents/core/virtual/#maliang.core.virtual.Widget.generate_event","title":"generate_event","text":"<pre><code>generate_event(sequence: str, event: tkinter.Event | None = None, **kwargs) -&gt; None\n</code></pre> <p>Generate an event sequence. Additional keyword arguments specify parameter of the event.</p> <ul> <li><code>sequence</code>: event name</li> <li><code>event</code>: event</li> <li><code>kwargs</code>: attr of event</li> </ul>"},{"location":"documents/core/virtual/#maliang.core.virtual.Widget.disable","title":"disable","text":"<pre><code>disable(value: bool = True) -&gt; None\n</code></pre> <p>Disable the widget.</p> <ul> <li><code>value</code>: whether to disable</li> </ul>"},{"location":"documents/core/virtual/#maliang.core.virtual.Widget.forget","title":"forget","text":"<pre><code>forget(value: bool = True) -&gt; None\n</code></pre> <p>Let all elements of the widget to forget.</p> <ul> <li><code>value</code>: whether to forget the widget</li> </ul>"},{"location":"documents/core/virtual/#maliang.core.virtual.Widget.move","title":"move","text":"<pre><code>move(dx: float, dy: float) -&gt; None\n</code></pre> <p>Move the widget.</p> <ul> <li><code>dx</code>: x-coordinate offset</li> <li><code>dy</code>: y-coordinate offset</li> </ul>"},{"location":"documents/core/virtual/#maliang.core.virtual.Widget.moveto","title":"moveto","text":"<pre><code>moveto(x: float, y: float) -&gt; None\n</code></pre> <p>Move the Widget to a certain position.</p> <ul> <li><code>x</code>: x-coordinate of the target location</li> <li><code>y</code>: y-coordinate of the target location</li> </ul>"},{"location":"documents/core/virtual/#maliang.core.virtual.Widget.destroy","title":"destroy","text":"<pre><code>destroy() -&gt; None\n</code></pre> <p>Destroy the widget.</p>"},{"location":"documents/core/virtual/#maliang.core.virtual.Widget.detect","title":"detect","text":"<pre><code>detect(x: float, y: float) -&gt; bool\n</code></pre> <p>Detect whether the specified coordinates are within the <code>Widget</code>.</p> <ul> <li><code>x</code>: x-coordinate of the location to be detected</li> <li><code>y</code>: y-coordinate of the location to be detected</li> </ul>"},{"location":"documents/core/virtual/#maliang.core.virtual.Widget.zoom","title":"zoom","text":"<pre><code>zoom(\n    ratios: tuple[float, float] | None = None, *, zoom_position: bool = True, zoom_size: bool = True\n) -&gt; None\n</code></pre> <p>Zoom widget ifself.</p> <ul> <li><code>ratios</code>: ratios of zooming</li> <li><code>zoom_position</code>: whether or not to zoom the location of the widget</li> <li><code>zoom_size</code>: whether or not to zoom the size of the widget</li> </ul>"},{"location":"documents/media/","title":"maliang.media","text":"<p> \u5b57\u6570 11 \u4e2a \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p> \u6e90\u4ee3\u7801\uff1a<code>maliang/media/__init__.py</code></p> <p>Extension package of maliang to play media files</p> <p>Provides:</p> <ul> <li>The ability to play videos with audio;</li> </ul> <p>\u6a21\u5757\uff1a</p> <ul> <li> <code>icons</code>           \u2013            <p>All icons with base64 format</p> </li> <li> <code>main</code>           \u2013            <p>APIs for playing videos</p> </li> </ul> <p>\u7c7b\uff1a</p> <ul> <li> <code>VideoCanvas</code>           \u2013            <p>A canvas that is scalable and playable for videos</p> </li> </ul>"},{"location":"documents/media/#maliang.media.VideoCanvas","title":"VideoCanvas","text":"<pre><code>VideoCanvas(\n    master: containers.Tk | containers.Toplevel | containers.Canvas | None = None,\n    *,\n    controls: bool = False,\n    loop: bool = False,\n    click_pause: bool = True,\n    expand: typing.Literal[\"\", \"x\", \"y\", \"xy\"] = \"xy\",\n    auto_zoom: bool = False,\n    keep_ratio: typing.Literal[\"min\", \"max\"] | None = None,\n    free_anchor: bool = False,\n    **kwargs,\n)\n</code></pre> <p>               Bases: <code>containers.Canvas</code></p> <p>A canvas that is scalable and playable for videos</p> <ul> <li><code>master</code>: parent widget</li> <li><code>controls</code>: whether to enable the built-in UI</li> <li><code>loop</code>: whether the video loops automatically</li> <li><code>click_pause</code>: whether to pause when clicked</li> <li><code>expand</code>: the mode of expand, <code>x</code> is horizontal, and <code>y</code> is vertical</li> <li><code>auto_zoom</code>: whether or not to scale its items</li> <li><code>keep_ratio</code>: the mode of aspect ratio, <code>min</code> follows the minimum value, <code>max</code> follows the maximum value</li> <li><code>free_anchor</code>: whether the anchor point is free-floating</li> <li><code>kwargs</code>: compatible with other parameters of class <code>tkinter.Canvas</code></li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>open</code>             \u2013              <p>Open a video file and play</p> </li> <li> <code>close</code>             \u2013              <p>Close the video player</p> </li> </ul>"},{"location":"documents/media/#maliang.media.VideoCanvas.open","title":"open","text":"<pre><code>open(file: str, *, auto_play: bool = False, muted: bool = False) -&gt; None\n</code></pre> <p>Open a video file and play</p> <ul> <li><code>file</code>: the video file path</li> <li><code>auto_play</code>: whether to start playing the video automatically</li> <li><code>muted</code>: whether or not to mute the video at the start</li> </ul>"},{"location":"documents/media/#maliang.media.VideoCanvas.close","title":"close","text":"<pre><code>close() -&gt; None\n</code></pre> <p>Close the video player</p>"},{"location":"documents/media/icons/","title":"maliang.media.icons","text":"<p> \u5b57\u6570 9 \u4e2a \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p> \u6e90\u4ee3\u7801\uff1a<code>maliang/media/icons.py</code></p> <p>All icons with base64 format</p> <p>\u51fd\u6570\uff1a</p> <ul> <li> <code>parse</code>             \u2013              <p>Parse the base64 data to <code>enhanced.PhotoImage</code> with diffrent themes.</p> </li> </ul>"},{"location":"documents/media/icons/#maliang.media.icons.parse","title":"parse","text":"<pre><code>parse(\n    *, light: str = \"black\", dark: str = \"white\"\n) -&gt; dict[str, dict[typing.Literal[\"light\", \"dark\"], enhanced.PhotoImage]]\n</code></pre> <p>Parse the base64 data to <code>enhanced.PhotoImage</code> with diffrent themes.</p>"},{"location":"documents/media/main/","title":"maliang.media.main","text":"<p> \u5b57\u6570 9 \u4e2a \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p> \u6e90\u4ee3\u7801\uff1a<code>maliang/media/main.py</code></p> <p>APIs for playing videos</p> <p>\u7c7b\uff1a</p> <ul> <li> <code>VideoCanvas</code>           \u2013            <p>A canvas that is scalable and playable for videos</p> </li> </ul>"},{"location":"documents/media/main/#maliang.media.main.VideoCanvas","title":"VideoCanvas","text":"<pre><code>VideoCanvas(\n    master: containers.Tk | containers.Toplevel | containers.Canvas | None = None,\n    *,\n    controls: bool = False,\n    loop: bool = False,\n    click_pause: bool = True,\n    expand: typing.Literal[\"\", \"x\", \"y\", \"xy\"] = \"xy\",\n    auto_zoom: bool = False,\n    keep_ratio: typing.Literal[\"min\", \"max\"] | None = None,\n    free_anchor: bool = False,\n    **kwargs,\n)\n</code></pre> <p>               Bases: <code>containers.Canvas</code></p> <p>A canvas that is scalable and playable for videos</p> <ul> <li><code>master</code>: parent widget</li> <li><code>controls</code>: whether to enable the built-in UI</li> <li><code>loop</code>: whether the video loops automatically</li> <li><code>click_pause</code>: whether to pause when clicked</li> <li><code>expand</code>: the mode of expand, <code>x</code> is horizontal, and <code>y</code> is vertical</li> <li><code>auto_zoom</code>: whether or not to scale its items</li> <li><code>keep_ratio</code>: the mode of aspect ratio, <code>min</code> follows the minimum value, <code>max</code> follows the maximum value</li> <li><code>free_anchor</code>: whether the anchor point is free-floating</li> <li><code>kwargs</code>: compatible with other parameters of class <code>tkinter.Canvas</code></li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>open</code>             \u2013              <p>Open a video file and play</p> </li> <li> <code>close</code>             \u2013              <p>Close the video player</p> </li> </ul>"},{"location":"documents/media/main/#maliang.media.main.VideoCanvas.open","title":"open","text":"<pre><code>open(file: str, *, auto_play: bool = False, muted: bool = False) -&gt; None\n</code></pre> <p>Open a video file and play</p> <ul> <li><code>file</code>: the video file path</li> <li><code>auto_play</code>: whether to start playing the video automatically</li> <li><code>muted</code>: whether or not to mute the video at the start</li> </ul>"},{"location":"documents/media/main/#maliang.media.main.VideoCanvas.close","title":"close","text":"<pre><code>close() -&gt; None\n</code></pre> <p>Close the video player</p>"},{"location":"documents/mpl/","title":"maliang.mpl","text":"<p> \u5b57\u6570 11 \u4e2a \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p> \u6e90\u4ee3\u7801\uff1a<code>maliang/mpl/__init__.py</code></p> <p>Extension package of maliang for matplotlib</p> <p>Provides:</p> <ul> <li>Implemented an easy-to-use <code>matplotlib</code> interface to <code>tkinter</code></li> <li>Themed drawing experience</li> <li>Good interaction with <code>matplotlib</code> plottings</li> </ul> <p>\u6a21\u5757\uff1a</p> <ul> <li> <code>constants</code>           \u2013            <p>Constants for theme</p> </li> <li> <code>main</code>           \u2013            <p>APIs for Matplotlib</p> </li> </ul> <p>\u7c7b\uff1a</p> <ul> <li> <code>FigureCanvas</code>           \u2013            <p>A canvas for interface of <code>matplotlib</code></p> </li> <li> <code>FigureToolbar</code>           \u2013            <p>An interface class for the matplotlib navigation cursor</p> </li> </ul> <p>\u51fd\u6570\uff1a</p> <ul> <li> <code>set_mpl_default_theme</code>             \u2013              <p>Set default color constants of <code>matplotlib</code>.</p> </li> </ul>"},{"location":"documents/mpl/#maliang.mpl.FigureCanvas","title":"FigureCanvas","text":"<pre><code>FigureCanvas(master: tkinter.Misc, figure: matplotlib.figure.Figure, *args, **kwargs)\n</code></pre> <p>               Bases: <code>tkinter.Canvas</code>, <code>matplotlib.backends.backend_tkagg.FigureCanvasTkAgg</code></p> <p>A canvas for interface of <code>matplotlib</code></p> <ul> <li><code>master</code>: parent widget</li> <li><code>figure</code>: a <code>Figure</code> object from <code>matplotlib</code></li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>theme</code>             \u2013              <p>Change the color theme of the Figure.</p> </li> </ul>"},{"location":"documents/mpl/#maliang.mpl.FigureCanvas.theme","title":"theme","text":"<pre><code>theme(theme: typing.Literal['light', 'dark']) -&gt; None\n</code></pre> <p>Change the color theme of the Figure.</p> <ul> <li><code>theme</code>: the theme name</li> </ul>"},{"location":"documents/mpl/#maliang.mpl.FigureToolbar","title":"FigureToolbar","text":"<pre><code>FigureToolbar(\n    master: tkinter.Misc | FigureCanvas,\n    figure_canvas: FigureCanvas | None = None,\n    *,\n    pack_toolbar: bool = True,\n    **kwargs,\n)\n</code></pre> <p>               Bases: <code>matplotlib.backends._backend_tk.NavigationToolbar2Tk</code></p> <p>An interface class for the matplotlib navigation cursor</p> <ul> <li><code>master</code>: parent widget</li> <li><code>figure_canvas</code>: the figure canvas on which to operate</li> <li><code>pack_toolbar</code>: if True, add the toolbar to the parent\u2019s pack manager\u2019s packing list during initialization with <code>side=\"bottom\"</code> and <code>fill=\"x\"</code>.</li> </ul> <p>If you want to use the toolbar with a different layout manager, use <code>pack_toolbar=False</code></p> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>theme</code>             \u2013              <p>Change the color theme of the Toolbar.</p> </li> </ul>"},{"location":"documents/mpl/#maliang.mpl.FigureToolbar.theme","title":"theme","text":"<pre><code>theme(theme: typing.Literal['light', 'dark']) -&gt; None\n</code></pre> <p>Change the color theme of the Toolbar.</p> <ul> <li><code>theme</code>: the theme name</li> </ul>"},{"location":"documents/mpl/#maliang.mpl.set_mpl_default_theme","title":"set_mpl_default_theme","text":"<pre><code>set_mpl_default_theme(theme: typing.Literal['light', 'dark'], *, apply_font: bool = False) -&gt; None\n</code></pre> <p>Set default color constants of <code>matplotlib</code>.</p> <ul> <li><code>theme</code>: theme mode</li> <li><code>apply_font</code>: whether to use the font of <code>maliang</code></li> </ul>"},{"location":"documents/mpl/constants/","title":"maliang.mpl.constants","text":"<p> \u5b57\u6570 9 \u4e2a \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p> \u6e90\u4ee3\u7801\uff1a<code>maliang/mpl/constants.py</code></p> <p>Constants for theme</p>"},{"location":"documents/mpl/main/","title":"maliang.mpl.main","text":"<p> \u5b57\u6570 9 \u4e2a \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p> \u6e90\u4ee3\u7801\uff1a<code>maliang/mpl/main.py</code></p> <p>APIs for Matplotlib</p> <p>\u7c7b\uff1a</p> <ul> <li> <code>FigureCanvas</code>           \u2013            <p>A canvas for interface of <code>matplotlib</code></p> </li> <li> <code>FigureToolbar</code>           \u2013            <p>An interface class for the matplotlib navigation cursor</p> </li> </ul> <p>\u51fd\u6570\uff1a</p> <ul> <li> <code>set_mpl_default_theme</code>             \u2013              <p>Set default color constants of <code>matplotlib</code>.</p> </li> </ul>"},{"location":"documents/mpl/main/#maliang.mpl.main.FigureCanvas","title":"FigureCanvas","text":"<pre><code>FigureCanvas(master: tkinter.Misc, figure: matplotlib.figure.Figure, *args, **kwargs)\n</code></pre> <p>               Bases: <code>tkinter.Canvas</code>, <code>matplotlib.backends.backend_tkagg.FigureCanvasTkAgg</code></p> <p>A canvas for interface of <code>matplotlib</code></p> <ul> <li><code>master</code>: parent widget</li> <li><code>figure</code>: a <code>Figure</code> object from <code>matplotlib</code></li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>theme</code>             \u2013              <p>Change the color theme of the Figure.</p> </li> </ul>"},{"location":"documents/mpl/main/#maliang.mpl.main.FigureCanvas.theme","title":"theme","text":"<pre><code>theme(theme: typing.Literal['light', 'dark']) -&gt; None\n</code></pre> <p>Change the color theme of the Figure.</p> <ul> <li><code>theme</code>: the theme name</li> </ul>"},{"location":"documents/mpl/main/#maliang.mpl.main.FigureToolbar","title":"FigureToolbar","text":"<pre><code>FigureToolbar(\n    master: tkinter.Misc | FigureCanvas,\n    figure_canvas: FigureCanvas | None = None,\n    *,\n    pack_toolbar: bool = True,\n    **kwargs,\n)\n</code></pre> <p>               Bases: <code>matplotlib.backends._backend_tk.NavigationToolbar2Tk</code></p> <p>An interface class for the matplotlib navigation cursor</p> <ul> <li><code>master</code>: parent widget</li> <li><code>figure_canvas</code>: the figure canvas on which to operate</li> <li><code>pack_toolbar</code>: if True, add the toolbar to the parent\u2019s pack manager\u2019s packing list during initialization with <code>side=\"bottom\"</code> and <code>fill=\"x\"</code>.</li> </ul> <p>If you want to use the toolbar with a different layout manager, use <code>pack_toolbar=False</code></p> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>theme</code>             \u2013              <p>Change the color theme of the Toolbar.</p> </li> </ul>"},{"location":"documents/mpl/main/#maliang.mpl.main.FigureToolbar.theme","title":"theme","text":"<pre><code>theme(theme: typing.Literal['light', 'dark']) -&gt; None\n</code></pre> <p>Change the color theme of the Toolbar.</p> <ul> <li><code>theme</code>: the theme name</li> </ul>"},{"location":"documents/mpl/main/#maliang.mpl.main.set_mpl_default_theme","title":"set_mpl_default_theme","text":"<pre><code>set_mpl_default_theme(theme: typing.Literal['light', 'dark'], *, apply_font: bool = False) -&gt; None\n</code></pre> <p>Set default color constants of <code>matplotlib</code>.</p> <ul> <li><code>theme</code>: theme mode</li> <li><code>apply_font</code>: whether to use the font of <code>maliang</code></li> </ul>"},{"location":"documents/standard/","title":"maliang.standard","text":"<p> \u5b57\u6570 11 \u4e2a \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p> \u6e90\u4ee3\u7801\uff1a<code>maliang/standard/__init__.py</code></p> <p>All standard things.</p> <p>\u6a21\u5757\uff1a</p> <ul> <li> <code>dialogs</code>           \u2013            <p>All standard dialog classes</p> </li> <li> <code>features</code>           \u2013            <p>All standard <code>Feature</code> classes</p> </li> <li> <code>images</code>           \u2013            <p>All standard <code>Image</code> classes</p> </li> <li> <code>shapes</code>           \u2013            <p>All standard <code>Shape</code> classes</p> </li> <li> <code>styles</code>           \u2013            <p>All standard <code>Style</code> classes</p> </li> <li> <code>texts</code>           \u2013            <p>All standard <code>Text</code> classes</p> </li> <li> <code>widgets</code>           \u2013            <p>All standard <code>Widget</code> classes</p> </li> </ul> <p>\u7c7b\uff1a</p> <ul> <li> <code>TkMessage</code>           \u2013            <p>Message pop-up</p> </li> <li> <code>TkColorChooser</code>           \u2013            <p>Color chooser pop-up</p> </li> <li> <code>TkFontChooser</code>           \u2013            <p>Font chooser pop-up</p> </li> <li> <code>Text</code>           \u2013            <p>Text widget, generally used to display plain text</p> </li> <li> <code>Image</code>           \u2013            <p>Image widget, generally used to display normal still image</p> </li> <li> <code>Label</code>           \u2013            <p>Label widget, which is generally used to display key information</p> </li> <li> <code>Button</code>           \u2013            <p>Button widget, typically used to trigger a function</p> </li> <li> <code>Switch</code>           \u2013            <p>Switch widget, typically used to control the turning of a function on and off</p> </li> <li> <code>InputBox</code>           \u2013            <p>Input box widget, generally used to enter certain information on a single line</p> </li> <li> <code>CheckBox</code>           \u2013            <p>Checkbox button widget, generally used to check some options</p> </li> <li> <code>ToggleButton</code>           \u2013            <p>A button that can display information and switch statuses</p> </li> <li> <code>RadioBox</code>           \u2013            <p>Radio button widget, generally used to select one of several options</p> </li> <li> <code>ProgressBar</code>           \u2013            <p>Progress bar widget, typically used to show the progress of an event</p> </li> <li> <code>UnderlineButton</code>           \u2013            <p>Underline button, generally used to display web links</p> </li> <li> <code>HighlightButton</code>           \u2013            <p>Highlight button, no outline, which added a highlight effect</p> </li> <li> <code>IconButton</code>           \u2013            <p>A button with an icon on the left side</p> </li> <li> <code>Slider</code>           \u2013            <p>A slider for visually resizing values</p> </li> <li> <code>SegmentedButton</code>           \u2013            <p>A segmented button that can be used to toggle between multiple states</p> </li> <li> <code>SpinBox</code>           \u2013            <p>A widget that makes it easy to enter numeric type data</p> </li> <li> <code>OptionButton</code>           \u2013            <p>A button that has many options to choose</p> </li> <li> <code>ComboBox</code>           \u2013            <p>An input box that can provide several options</p> </li> <li> <code>Spinner</code>           \u2013            <p>Spinners visually communicate that something is processing</p> </li> <li> <code>Tooltip</code>           \u2013            <p>A tooltip that can display additional information</p> </li> </ul>"},{"location":"documents/standard/#maliang.standard.TkMessage","title":"TkMessage","text":"<pre><code>TkMessage(\n    message: str | None = None,\n    detail: str | None = None,\n    *,\n    title: str | None = None,\n    icon: typing.Literal[\"error\", \"info\", \"question\", \"warning\"] = \"info\",\n    option: typing.Literal[\n        \"abortretryignore\", \"ok\", \"okcancel\", \"retrycancel\", \"yesno\", \"yesnocancel\"\n    ] = \"ok\",\n    default: typing.Literal[\"abort\", \"retry\", \"ignore\", \"ok\", \"cancel\", \"yes\", \"no\"] | None = None,\n    master: tkinter.Tk | None = None,\n    command: collections.abc.Callable[\n        [typing.Literal[\"abort\", \"retry\", \"ignore\", \"ok\", \"cancel\", \"yes\", \"no\"]], typing.Any\n    ]\n    | None = None,\n)\n</code></pre> <p>Message pop-up</p> <ul> <li><code>message</code>: message</li> <li><code>detail</code>: detail message</li> <li><code>title</code>: title of the window</li> <li><code>icon</code>: icon</li> <li><code>option</code>: type of the message pop-up</li> <li><code>default</code>: button where the focus is, default is the leftmost one</li> <li><code>master</code>: parent widget of the window</li> <li><code>command</code>: callback function</li> </ul>"},{"location":"documents/standard/#maliang.standard.TkColorChooser","title":"TkColorChooser","text":"<pre><code>TkColorChooser(\n    *,\n    title: str | None = None,\n    color: str | None = None,\n    master: tkinter.Tk | None = None,\n    command: collections.abc.Callable[[str], typing.Any] | None = None,\n)\n</code></pre> <p>Color chooser pop-up</p> <ul> <li><code>title</code>: title of the window</li> <li><code>color</code>: default color</li> <li><code>master</code>: parent widget of the window</li> <li><code>command</code>: callback function</li> </ul>"},{"location":"documents/standard/#maliang.standard.TkFontChooser","title":"TkFontChooser","text":"<pre><code>TkFontChooser(\n    *,\n    title: str | None = None,\n    font: str | None = None,\n    master: tkinter.Tk | None = None,\n    command: collections.abc.Callable[[str], typing.Any] | None = None,\n)\n</code></pre> <p>Font chooser pop-up</p> <ul> <li><code>title</code>: title of the window</li> <li><code>font</code>: default font</li> <li><code>master</code>: parent widget of the window</li> <li><code>command</code>: callback function</li> </ul>"},{"location":"documents/standard/#maliang.standard.Text","title":"Text","text":"<pre><code>Text(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    *,\n    text: str = \"\",\n    family: str | None = None,\n    fontsize: int | None = None,\n    weight: typing.Literal[\"normal\", \"bold\"] = \"normal\",\n    slant: typing.Literal[\"roman\", \"italic\"] = \"roman\",\n    underline: bool = False,\n    overstrike: bool = False,\n    justify: typing.Literal[\"left\", \"center\", \"right\"] = \"left\",\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>Text widget, generally used to display plain text</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>text</code>: text of the widget</li> <li><code>family</code>: font family</li> <li><code>fontsize</code>: font size</li> <li><code>weight</code>: weight of the text</li> <li><code>slant</code>: slant of the text</li> <li><code>underline</code>: whether the text is underline</li> <li><code>overstrike</code>: whether the text is overstrike</li> <li><code>justify</code>: justify mode of the text</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the text of the widget</p> </li> <li> <code>set</code>             \u2013              <p>Set the text of the widget</p> </li> </ul>"},{"location":"documents/standard/#maliang.standard.Text.get","title":"get","text":"<pre><code>get() -&gt; str\n</code></pre> <p>Get the text of the widget</p>"},{"location":"documents/standard/#maliang.standard.Text.set","title":"set","text":"<pre><code>set(text: str) -&gt; None\n</code></pre> <p>Set the text of the widget</p>"},{"location":"documents/standard/#maliang.standard.Image","title":"Image","text":"<pre><code>Image(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    size: tuple[int, int] | None = None,\n    *,\n    image: enhanced.PhotoImage | None = None,\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>Image widget, generally used to display normal still image</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>size</code>: size of the widget</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the image of the widget</p> </li> <li> <code>set</code>             \u2013              <p>Set the image of the widget</p> </li> </ul>"},{"location":"documents/standard/#maliang.standard.Image.get","title":"get","text":"<pre><code>get() -&gt; enhanced.PhotoImage\n</code></pre> <p>Get the image of the widget</p>"},{"location":"documents/standard/#maliang.standard.Image.set","title":"set","text":"<pre><code>set(image: enhanced.PhotoImage | None) -&gt; None\n</code></pre> <p>Set the image of the widget</p>"},{"location":"documents/standard/#maliang.standard.Label","title":"Label","text":"<pre><code>Label(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    size: tuple[int, int] | None = None,\n    *,\n    text: str = \"\",\n    family: str | None = None,\n    fontsize: int | None = None,\n    weight: typing.Literal[\"normal\", \"bold\"] = \"normal\",\n    slant: typing.Literal[\"roman\", \"italic\"] = \"roman\",\n    underline: bool = False,\n    overstrike: bool = False,\n    justify: typing.Literal[\"left\", \"center\", \"right\"] = \"left\",\n    image: enhanced.PhotoImage | None = None,\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>Label widget, which is generally used to display key information</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>size</code>: size of the widget</li> <li><code>text</code>: text of the widget</li> <li><code>family</code>: font family</li> <li><code>fontsize</code>: font size</li> <li><code>weight</code>: weight of the text</li> <li><code>slant</code>: slant of the text</li> <li><code>underline</code>: whether the text is underline</li> <li><code>overstrike</code>: whether the text is overstrike</li> <li><code>justify</code>: justify mode of the text</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the text of the widget</p> </li> <li> <code>set</code>             \u2013              <p>Set the text of the widget</p> </li> </ul>"},{"location":"documents/standard/#maliang.standard.Label.get","title":"get","text":"<pre><code>get() -&gt; str\n</code></pre> <p>Get the text of the widget</p>"},{"location":"documents/standard/#maliang.standard.Label.set","title":"set","text":"<pre><code>set(text: str) -&gt; None\n</code></pre> <p>Set the text of the widget</p>"},{"location":"documents/standard/#maliang.standard.Button","title":"Button","text":"<pre><code>Button(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    size: tuple[int, int] | None = None,\n    *,\n    text: str = \"\",\n    family: str | None = None,\n    fontsize: int | None = None,\n    weight: typing.Literal[\"normal\", \"bold\"] = \"normal\",\n    slant: typing.Literal[\"roman\", \"italic\"] = \"roman\",\n    underline: bool = False,\n    overstrike: bool = False,\n    justify: typing.Literal[\"left\", \"center\", \"right\"] = \"left\",\n    command: collections.abc.Callable | None = None,\n    image: enhanced.PhotoImage | None = None,\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>Button widget, typically used to trigger a function</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>size</code>: size of the widget</li> <li><code>text</code>: text of the widget</li> <li><code>family</code>: font family</li> <li><code>fontsize</code>: font size</li> <li><code>weight</code>: weight of the text</li> <li><code>slant</code>: slant of the text</li> <li><code>underline</code>: whether the text is underline</li> <li><code>overstrike</code>: whether the text is overstrike</li> <li><code>justify</code>: justify mode of the text</li> <li><code>command</code>: a function that is triggered when the button is pressed</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the text of the widget</p> </li> <li> <code>set</code>             \u2013              <p>Set the text of the widget</p> </li> </ul>"},{"location":"documents/standard/#maliang.standard.Button.get","title":"get","text":"<pre><code>get() -&gt; str\n</code></pre> <p>Get the text of the widget</p>"},{"location":"documents/standard/#maliang.standard.Button.set","title":"set","text":"<pre><code>set(text: str) -&gt; None\n</code></pre> <p>Set the text of the widget</p>"},{"location":"documents/standard/#maliang.standard.Switch","title":"Switch","text":"<pre><code>Switch(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    length: int = 60,\n    *,\n    default: bool | None = None,\n    command: collections.abc.Callable[[bool], typing.Any] | None = None,\n    image: enhanced.PhotoImage | None = None,\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>Switch widget, typically used to control the turning of a function on and off</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>length</code>: length of the widget</li> <li><code>default</code>: default value of the widget</li> <li><code>command</code>: a function that is triggered when the switch is changed</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the state of the switch</p> </li> <li> <code>set</code>             \u2013              <p>Set the state of the switch</p> </li> </ul>"},{"location":"documents/standard/#maliang.standard.Switch.get","title":"get","text":"<pre><code>get() -&gt; bool\n</code></pre> <p>Get the state of the switch</p>"},{"location":"documents/standard/#maliang.standard.Switch.set","title":"set","text":"<pre><code>set(value: bool, *, callback: bool = False) -&gt; None\n</code></pre> <p>Set the state of the switch</p>"},{"location":"documents/standard/#maliang.standard.InputBox","title":"InputBox","text":"<pre><code>InputBox(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    size: tuple[int, int] | None = None,\n    *,\n    family: str | None = None,\n    fontsize: int | None = None,\n    weight: typing.Literal[\"normal\", \"bold\"] = \"normal\",\n    slant: typing.Literal[\"roman\", \"italic\"] = \"roman\",\n    underline: bool = False,\n    overstrike: bool = False,\n    align: typing.Literal[\"left\", \"right\", \"center\"] = \"left\",\n    placeholder: str = \"\",\n    show: str | None = None,\n    ignore: tuple[str, ...] = (\"\\n\", \"\\r\"),\n    limit: int = math.inf,\n    limit_width: int = 0,\n    image: enhanced.PhotoImage | None = None,\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>Input box widget, generally used to enter certain information on a single line</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>size</code>: size of the widget</li> <li><code>family</code>: font family</li> <li><code>fontsize</code>: font size</li> <li><code>weight</code>: weight of the text</li> <li><code>slant</code>: slant of the text</li> <li><code>underline</code>: whether the text is underline</li> <li><code>overstrike</code>: whether the text is overstrike</li> <li><code>align</code>: align mode of the text</li> <li><code>show</code>: display a value that obscures the original content</li> <li><code>ignore</code>: ignore the input of some characters</li> <li><code>placeholder</code>: a placeholder for the prompt</li> <li><code>limit</code>: limit on the number of characters</li> <li><code>limit_width</code>: limit on the width of characters</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the value of the Entry</p> </li> <li> <code>set</code>             \u2013              <p>Set the text value of the Entry</p> </li> <li> <code>insert</code>             \u2013              <p>Insert</p> </li> <li> <code>append</code>             \u2013              <p>Append text to Entry</p> </li> <li> <code>remove</code>             \u2013              <p>Remove</p> </li> <li> <code>pop</code>             \u2013              <p>Delete a specified amount of text</p> </li> <li> <code>clear</code>             \u2013              <p>Clear the text value of the Entry</p> </li> </ul>"},{"location":"documents/standard/#maliang.standard.InputBox.get","title":"get","text":"<pre><code>get() -&gt; str\n</code></pre> <p>Get the value of the Entry</p>"},{"location":"documents/standard/#maliang.standard.InputBox.set","title":"set","text":"<pre><code>set(value: str) -&gt; bool\n</code></pre> <p>Set the text value of the Entry</p>"},{"location":"documents/standard/#maliang.standard.InputBox.insert","title":"insert","text":"<pre><code>insert(index: int, value: str) -&gt; bool\n</code></pre> <p>Insert</p>"},{"location":"documents/standard/#maliang.standard.InputBox.append","title":"append","text":"<pre><code>append(value: str) -&gt; bool\n</code></pre> <p>Append text to Entry</p>"},{"location":"documents/standard/#maliang.standard.InputBox.remove","title":"remove","text":"<pre><code>remove(start: int, end: int | None = None) -&gt; int\n</code></pre> <p>Remove</p>"},{"location":"documents/standard/#maliang.standard.InputBox.pop","title":"pop","text":"<pre><code>pop(index: int = -1) -&gt; str\n</code></pre> <p>Delete a specified amount of text</p>"},{"location":"documents/standard/#maliang.standard.InputBox.clear","title":"clear","text":"<pre><code>clear() -&gt; None\n</code></pre> <p>Clear the text value of the Entry</p>"},{"location":"documents/standard/#maliang.standard.CheckBox","title":"CheckBox","text":"<pre><code>CheckBox(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    length: int = 30,\n    *,\n    default: bool | None = None,\n    command: collections.abc.Callable[[bool], typing.Any] | None = None,\n    image: enhanced.PhotoImage | None = None,\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>Checkbox button widget, generally used to check some options</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>length</code>: length of the widget</li> <li><code>default</code>: default state of the widget</li> <li><code>command</code>: a function that is triggered when the state of check button is on</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the state of the check button</p> </li> <li> <code>set</code>             \u2013              <p>Set the state of the check button</p> </li> </ul>"},{"location":"documents/standard/#maliang.standard.CheckBox.get","title":"get","text":"<pre><code>get() -&gt; bool\n</code></pre> <p>Get the state of the check button</p>"},{"location":"documents/standard/#maliang.standard.CheckBox.set","title":"set","text":"<pre><code>set(value: bool, *, callback: bool = False) -&gt; None\n</code></pre> <p>Set the state of the check button</p>"},{"location":"documents/standard/#maliang.standard.ToggleButton","title":"ToggleButton","text":"<pre><code>ToggleButton(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    size: tuple[int, int] | None = None,\n    *,\n    text: str = \"\",\n    family: str | None = None,\n    fontsize: int | None = None,\n    weight: typing.Literal[\"normal\", \"bold\"] = \"normal\",\n    slant: typing.Literal[\"roman\", \"italic\"] = \"roman\",\n    underline: bool = False,\n    overstrike: bool = False,\n    justify: typing.Literal[\"left\", \"center\", \"right\"] = \"left\",\n    default: bool | None = None,\n    command: collections.abc.Callable[[bool], typing.Any] | None = None,\n    image: enhanced.PhotoImage | None = None,\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>A button that can display information and switch statuses</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>size</code>: size of the widget</li> <li><code>text</code>: text of the widget</li> <li><code>family</code>: font family</li> <li><code>fontsize</code>: font size</li> <li><code>weight</code>: weight of the text</li> <li><code>slant</code>: slant of the text</li> <li><code>underline</code>: whether the text is underline</li> <li><code>overstrike</code>: whether the text is overstrike</li> <li><code>justify</code>: justify mode of the text</li> <li><code>default</code>: default state of the widget</li> <li><code>command</code>: a function that is triggered when the state of check button is on</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the state of the check button</p> </li> <li> <code>set</code>             \u2013              <p>Set the state of the switch</p> </li> </ul>"},{"location":"documents/standard/#maliang.standard.ToggleButton.get","title":"get","text":"<pre><code>get() -&gt; bool\n</code></pre> <p>Get the state of the check button</p>"},{"location":"documents/standard/#maliang.standard.ToggleButton.set","title":"set","text":"<pre><code>set(value: bool, *, callback: bool = False) -&gt; None\n</code></pre> <p>Set the state of the switch</p>"},{"location":"documents/standard/#maliang.standard.RadioBox","title":"RadioBox","text":"<pre><code>RadioBox(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    length: int = 30,\n    *,\n    default: bool | None = None,\n    command: collections.abc.Callable[[int], typing.Any] | None = None,\n    image: enhanced.PhotoImage | None = None,\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>Radio button widget, generally used to select one of several options</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>length</code>: length of the widget</li> <li><code>default</code>: default state of the widget</li> <li><code>command</code>: a function that is triggered when the state of radio button is on</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the state of the radio button</p> </li> <li> <code>set</code>             \u2013              <p>Set the state of the radio button</p> </li> <li> <code>group</code>             \u2013              <p>Combine other radio boxes.</p> </li> </ul>"},{"location":"documents/standard/#maliang.standard.RadioBox.get","title":"get","text":"<pre><code>get() -&gt; bool\n</code></pre> <p>Get the state of the radio button</p>"},{"location":"documents/standard/#maliang.standard.RadioBox.set","title":"set","text":"<pre><code>set(value: bool, *, callback: bool = False) -&gt; None\n</code></pre> <p>Set the state of the radio button</p>"},{"location":"documents/standard/#maliang.standard.RadioBox.group","title":"group","text":"<pre><code>group(*radio_boxes: RadioBox) -&gt; None\n</code></pre> <p>Combine other radio boxes.</p> <ul> <li><code>radio_boxes</code>: other radio boxes</li> </ul>"},{"location":"documents/standard/#maliang.standard.ProgressBar","title":"ProgressBar","text":"<pre><code>ProgressBar(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    size: tuple[int, int] = (400, 20),\n    *,\n    default: float | None = None,\n    command: collections.abc.Callable[[float], typing.Any] | None = None,\n    image: enhanced.PhotoImage | None = None,\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>Progress bar widget, typically used to show the progress of an event</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>size</code>: size of the widget</li> <li><code>default</code>: default value of the widget</li> <li><code>command</code>: a function that is triggered when the progress of progress bar is 100%</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the progress of the progress bar</p> </li> <li> <code>set</code>             \u2013              <p>Set the progress of the progress bar</p> </li> </ul>"},{"location":"documents/standard/#maliang.standard.ProgressBar.get","title":"get","text":"<pre><code>get() -&gt; float\n</code></pre> <p>Get the progress of the progress bar</p>"},{"location":"documents/standard/#maliang.standard.ProgressBar.set","title":"set","text":"<pre><code>set(value: float, *, callback: bool = False) -&gt; None\n</code></pre> <p>Set the progress of the progress bar</p>"},{"location":"documents/standard/#maliang.standard.UnderlineButton","title":"UnderlineButton","text":"<pre><code>UnderlineButton(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    *,\n    text: str = \"\",\n    family: str | None = None,\n    fontsize: int | None = None,\n    weight: typing.Literal[\"normal\", \"bold\"] = \"normal\",\n    slant: typing.Literal[\"roman\", \"italic\"] = \"roman\",\n    underline: bool = False,\n    overstrike: bool = False,\n    justify: typing.Literal[\"left\", \"center\", \"right\"] = \"left\",\n    command: collections.abc.Callable | None = None,\n    image: enhanced.PhotoImage | None = None,\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool = False,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>Underline button, generally used to display web links</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>text</code>: text of the widget</li> <li><code>family</code>: font family</li> <li><code>fontsize</code>: font size</li> <li><code>weight</code>: weight of the text</li> <li><code>slant</code>: slant of the text</li> <li><code>underline</code>: whether the text is underline</li> <li><code>overstrike</code>: whether the text is overstrike</li> <li><code>justify</code>: justify mode of the text</li> <li><code>command</code>: a function that is triggered when the underline button is pressed</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul>"},{"location":"documents/standard/#maliang.standard.HighlightButton","title":"HighlightButton","text":"<pre><code>HighlightButton(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    *,\n    text: str = \"\",\n    family: str | None = None,\n    fontsize: int | None = None,\n    weight: typing.Literal[\"normal\", \"bold\"] = \"normal\",\n    slant: typing.Literal[\"roman\", \"italic\"] = \"roman\",\n    underline: bool = False,\n    overstrike: bool = False,\n    justify: typing.Literal[\"left\", \"center\", \"right\"] = \"left\",\n    command: collections.abc.Callable | None = None,\n    image: enhanced.PhotoImage | None = None,\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>Highlight button, no outline, which added a highlight effect</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>text</code>: text of the widget</li> <li><code>family</code>: font family</li> <li><code>fontsize</code>: font size</li> <li><code>weight</code>: weight of the text</li> <li><code>slant</code>: slant of the text</li> <li><code>underline</code>: whether the text is underline</li> <li><code>overstrike</code>: whether the text is overstrike</li> <li><code>justify</code>: justify mode of the text</li> <li><code>command</code>: a function that is triggered when the hightlight button is pressed</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul>"},{"location":"documents/standard/#maliang.standard.IconButton","title":"IconButton","text":"<pre><code>IconButton(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    size: tuple[int, int] | None = None,\n    *,\n    text: str = \"\",\n    family: str | None = None,\n    fontsize: int | None = None,\n    weight: typing.Literal[\"normal\", \"bold\"] = \"normal\",\n    slant: typing.Literal[\"roman\", \"italic\"] = \"roman\",\n    underline: bool = False,\n    overstrike: bool = False,\n    justify: typing.Literal[\"left\", \"center\", \"right\"] = \"left\",\n    command: collections.abc.Callable | None = None,\n    image: enhanced.PhotoImage | None = None,\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>A button with an icon on the left side</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>size</code>: size of the widget</li> <li><code>text</code>: text of the widget</li> <li><code>family</code>: font family</li> <li><code>fontsize</code>: font size</li> <li><code>weight</code>: weight of the text</li> <li><code>slant</code>: slant of the text</li> <li><code>underline</code>: whether the text is underline</li> <li><code>overstrike</code>: whether the text is overstrike</li> <li><code>justify</code>: justify mode of the text</li> <li><code>command</code>: a function that is triggered when the button is pressed</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the text of the widget</p> </li> <li> <code>set</code>             \u2013              <p>Set the text of the widget</p> </li> </ul>"},{"location":"documents/standard/#maliang.standard.IconButton.get","title":"get","text":"<pre><code>get() -&gt; str\n</code></pre> <p>Get the text of the widget</p>"},{"location":"documents/standard/#maliang.standard.IconButton.set","title":"set","text":"<pre><code>set(text: str) -&gt; None\n</code></pre> <p>Set the text of the widget</p>"},{"location":"documents/standard/#maliang.standard.Slider","title":"Slider","text":"<pre><code>Slider(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    size: tuple[int, int] = (400, 30),\n    *,\n    default: float | None = None,\n    command: collections.abc.Callable[[float], typing.Any] | None = None,\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>A slider for visually resizing values</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>size</code>: size of the widget</li> <li><code>default</code>: default value of the widget</li> <li><code>command</code>: a function that is triggered when the button is pressed</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the value of the slider</p> </li> <li> <code>set</code>             \u2013              <p>Set the value of the slider</p> </li> </ul>"},{"location":"documents/standard/#maliang.standard.Slider.get","title":"get","text":"<pre><code>get() -&gt; float\n</code></pre> <p>Get the value of the slider</p>"},{"location":"documents/standard/#maliang.standard.Slider.set","title":"set","text":"<pre><code>set(value: float, *, callback: bool = False) -&gt; None\n</code></pre> <p>Set the value of the slider</p>"},{"location":"documents/standard/#maliang.standard.SegmentedButton","title":"SegmentedButton","text":"<pre><code>SegmentedButton(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    sizes: tuple[tuple[int, int], ...] = (),\n    *,\n    text: tuple[str, ...] = (),\n    family: str | None = None,\n    fontsize: int | None = None,\n    weight: typing.Literal[\"normal\", \"bold\"] = \"normal\",\n    slant: typing.Literal[\"roman\", \"italic\"] = \"roman\",\n    underline: bool = False,\n    overstrike: bool = False,\n    justify: typing.Literal[\"left\", \"center\", \"right\"] = \"left\",\n    default: int | None = None,\n    command: collections.abc.Callable[[int | None], typing.Any] | None = None,\n    image: tuple[enhanced.PhotoImage | None, ...] = (),\n    layout: typing.Literal[\"horizontal\", \"vertical\"] = \"horizontal\",\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>A segmented button that can be used to toggle between multiple states</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>size</code>: size of the widget</li> <li><code>text</code>: text of the widget</li> <li><code>family</code>: font family</li> <li><code>fontsize</code>: font size</li> <li><code>weight</code>: weight of the text</li> <li><code>slant</code>: slant of the text</li> <li><code>underline</code>: whether the text is underline</li> <li><code>overstrike</code>: whether the text is overstrike</li> <li><code>justify</code>: justify mode of the text</li> <li><code>default</code>: default value of the widget</li> <li><code>command</code>: a function that is triggered when the button is pressed</li> <li><code>image</code>: image of the widget</li> <li><code>layout</code>: layout mode of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the index of the child toggle button with a value of True. If not, None is</p> </li> <li> <code>set</code>             \u2013              <p>Activate the child toggle button for the specified index</p> </li> </ul>"},{"location":"documents/standard/#maliang.standard.SegmentedButton.get","title":"get","text":"<pre><code>get() -&gt; int | None\n</code></pre> <p>Get the index of the child toggle button with a value of True. If not, None is returned.</p>"},{"location":"documents/standard/#maliang.standard.SegmentedButton.set","title":"set","text":"<pre><code>set(value: int | None, *, callback: bool = False) -&gt; None\n</code></pre> <p>Activate the child toggle button for the specified index</p>"},{"location":"documents/standard/#maliang.standard.SpinBox","title":"SpinBox","text":"<pre><code>SpinBox(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    size: tuple[int, int] | None = None,\n    *,\n    format_spec: str = \"d\",\n    step: int = 1,\n    family: str | None = None,\n    fontsize: int | None = None,\n    weight: typing.Literal[\"normal\", \"bold\"] = \"normal\",\n    slant: typing.Literal[\"roman\", \"italic\"] = \"roman\",\n    underline: bool = False,\n    overstrike: bool = False,\n    align: typing.Literal[\"left\", \"right\", \"center\"] = \"left\",\n    placeholder: str = \"\",\n    show: str | None = None,\n    limit: int = math.inf,\n    default: str | None = None,\n    command: collections.abc.Callable[[bool], typing.Any] | None = None,\n    image: enhanced.PhotoImage | None = None,\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>A widget that makes it easy to enter numeric type data</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>size</code>: size of the widget</li> <li><code>format_spec</code>: format of value</li> <li><code>step</code>: value of each change</li> <li><code>family</code>: font family</li> <li><code>fontsize</code>: font size</li> <li><code>weight</code>: weight of the text</li> <li><code>slant</code>: slant of the text</li> <li><code>underline</code>: whether the text is underline</li> <li><code>overstrike</code>: whether the text is overstrike</li> <li><code>align</code>: align mode of the text</li> <li><code>show</code>: display a value that obscures the original content</li> <li><code>placeholder</code>: a placeholder for the prompt</li> <li><code>limit</code>: limit on the number of characters</li> <li><code>default</code>: default value of the widget</li> <li><code>command</code>: a function that is triggered when the button is pressed</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>change</code>             \u2013              <p>Try change the current value</p> </li> <li> <code>get</code>             \u2013              <p>Get the value of the Entry</p> </li> <li> <code>set</code>             \u2013              <p>Set the text value of the Entry</p> </li> <li> <code>append</code>             \u2013              <p>Append text to Entry</p> </li> <li> <code>delete</code>             \u2013              <p>Delete a specified amount of text</p> </li> <li> <code>clear</code>             \u2013              <p>Clear the text value of the Entry</p> </li> </ul>"},{"location":"documents/standard/#maliang.standard.SpinBox.change","title":"change","text":"<pre><code>change(up: bool) -&gt; None\n</code></pre> <p>Try change the current value</p>"},{"location":"documents/standard/#maliang.standard.SpinBox.get","title":"get","text":"<pre><code>get() -&gt; str\n</code></pre> <p>Get the value of the Entry</p>"},{"location":"documents/standard/#maliang.standard.SpinBox.set","title":"set","text":"<pre><code>set(value: str) -&gt; None\n</code></pre> <p>Set the text value of the Entry</p>"},{"location":"documents/standard/#maliang.standard.SpinBox.append","title":"append","text":"<pre><code>append(value: str) -&gt; None\n</code></pre> <p>Append text to Entry</p>"},{"location":"documents/standard/#maliang.standard.SpinBox.delete","title":"delete","text":"<pre><code>delete(count: int) -&gt; None\n</code></pre> <p>Delete a specified amount of text</p>"},{"location":"documents/standard/#maliang.standard.SpinBox.clear","title":"clear","text":"<pre><code>clear() -&gt; None\n</code></pre> <p>Clear the text value of the Entry</p>"},{"location":"documents/standard/#maliang.standard.OptionButton","title":"OptionButton","text":"<pre><code>OptionButton(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    size: tuple[int, int] | None = None,\n    *,\n    text: tuple[str, ...] = (),\n    family: str | None = None,\n    fontsize: int | None = None,\n    weight: typing.Literal[\"normal\", \"bold\"] = \"normal\",\n    slant: typing.Literal[\"roman\", \"italic\"] = \"roman\",\n    underline: bool = False,\n    overstrike: bool = False,\n    justify: typing.Literal[\"left\", \"center\", \"right\"] = \"left\",\n    default: int | None = None,\n    command: collections.abc.Callable[[int | None], typing.Any] | None = None,\n    image: tuple[enhanced.PhotoImage | None, ...] = (),\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    align: typing.Literal[\"up\", \"center\", \"down\"] = \"center\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>A button that has many options to choose</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>size</code>: size of the widget</li> <li><code>text</code>: text of the widget</li> <li><code>family</code>: font family</li> <li><code>fontsize</code>: font size</li> <li><code>weight</code>: weight of the text</li> <li><code>slant</code>: slant of the text</li> <li><code>underline</code>: whether the text is underline</li> <li><code>overstrike</code>: whether the text is overstrike</li> <li><code>justify</code>: justify mode of the text</li> <li><code>default</code>: default value of the widget</li> <li><code>command</code>: a function that is triggered when the button is pressed</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>align</code>: align of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the index of the child toggle button with a value of True. If not, None is</p> </li> <li> <code>set</code>             \u2013              <p>Activate the child toggle button for the specified index</p> </li> </ul>"},{"location":"documents/standard/#maliang.standard.OptionButton.get","title":"get","text":"<pre><code>get() -&gt; int | None\n</code></pre> <p>Get the index of the child toggle button with a value of True. If not, None is returned.</p>"},{"location":"documents/standard/#maliang.standard.OptionButton.set","title":"set","text":"<pre><code>set(value: int | None, *, callback: bool = False) -&gt; None\n</code></pre> <p>Activate the child toggle button for the specified index</p>"},{"location":"documents/standard/#maliang.standard.ComboBox","title":"ComboBox","text":"<pre><code>ComboBox(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    size: tuple[int, int] | None = None,\n    *,\n    text: tuple[str, ...] = (),\n    family: str | None = None,\n    fontsize: int | None = None,\n    weight: typing.Literal[\"normal\", \"bold\"] = \"normal\",\n    slant: typing.Literal[\"roman\", \"italic\"] = \"roman\",\n    underline: bool = False,\n    overstrike: bool = False,\n    justify: typing.Literal[\"left\", \"center\", \"right\"] = \"left\",\n    default: int | None = None,\n    command: collections.abc.Callable[[int | None], typing.Any] | None = None,\n    image: tuple[enhanced.PhotoImage | None, ...] = (),\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    align: typing.Literal[\"up\", \"down\"] = \"down\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>An input box that can provide several options</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>size</code>: size of the widget</li> <li><code>text</code>: text of the widget</li> <li><code>family</code>: font family</li> <li><code>fontsize</code>: font size</li> <li><code>weight</code>: weight of the text</li> <li><code>slant</code>: slant of the text</li> <li><code>underline</code>: whether the text is underline</li> <li><code>overstrike</code>: whether the text is overstrike</li> <li><code>justify</code>: justify mode of the text</li> <li><code>default</code>: default value of the widget</li> <li><code>command</code>: a function that is triggered when the button is pressed</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>align</code>: align of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the index of the child toggle button with a value of True. If not, None is</p> </li> <li> <code>set</code>             \u2013              <p>Activate the child toggle button for the specified index</p> </li> </ul>"},{"location":"documents/standard/#maliang.standard.ComboBox.get","title":"get","text":"<pre><code>get() -&gt; int | None\n</code></pre> <p>Get the index of the child toggle button with a value of True. If not, None is returned.</p>"},{"location":"documents/standard/#maliang.standard.ComboBox.set","title":"set","text":"<pre><code>set(value: int | None, *, callback: bool = False) -&gt; None\n</code></pre> <p>Activate the child toggle button for the specified index</p>"},{"location":"documents/standard/#maliang.standard.Spinner","title":"Spinner","text":"<pre><code>Spinner(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    size: tuple[int, int] = (30, 30),\n    *,\n    default: float | None = None,\n    command: collections.abc.Callable[[float], typing.Any] | None = None,\n    widths: tuple[int, int] | None = None,\n    mode: typing.Literal[\"determinate\", \"indeterminate\"] = \"determinate\",\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>Spinners visually communicate that something is processing</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>size</code>: size of the widget</li> <li><code>default</code>: default value of the widget</li> <li><code>command</code>: a function that is triggered when the progress of progress bar is 100%</li> <li><code>widths</code>: width of the outside ring and inside ring</li> <li><code>mode</code>: mode of the Spinner</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the progress of the Spinner</p> </li> <li> <code>set</code>             \u2013              <p>Set the progress of the Spinner</p> </li> <li> <code>destroy</code>             \u2013              <p>Destroy the widget</p> </li> </ul>"},{"location":"documents/standard/#maliang.standard.Spinner.get","title":"get","text":"<pre><code>get() -&gt; float\n</code></pre> <p>Get the progress of the Spinner</p>"},{"location":"documents/standard/#maliang.standard.Spinner.set","title":"set","text":"<pre><code>set(value: float, *, callback: bool = False) -&gt; None\n</code></pre> <p>Set the progress of the Spinner</p>"},{"location":"documents/standard/#maliang.standard.Spinner.destroy","title":"destroy","text":"<pre><code>destroy() -&gt; None\n</code></pre> <p>Destroy the widget</p>"},{"location":"documents/standard/#maliang.standard.Tooltip","title":"Tooltip","text":"<pre><code>Tooltip(\n    widget: virtual.Widget,\n    size: tuple[int, int] | None = None,\n    *,\n    text: str = \"\",\n    align: typing.Literal[\"up\", \"down\", \"right\", \"left\", \"center\"] = \"down\",\n    padding: int = 3,\n    family: str | None = None,\n    fontsize: int | None = None,\n    weight: typing.Literal[\"normal\", \"bold\"] = \"normal\",\n    slant: typing.Literal[\"roman\", \"italic\"] = \"roman\",\n    underline: bool = False,\n    overstrike: bool = False,\n    justify: typing.Literal[\"left\", \"center\", \"right\"] = \"left\",\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>A tooltip that can display additional information</p> <ul> <li><code>widget</code>: the associated widget</li> <li><code>size</code>: size of the widget</li> <li><code>text</code>: text of the widget</li> <li><code>align</code>: align mode of the tooltip</li> <li><code>padding</code>: extra padding between tooltip and the associated widget</li> <li><code>family</code>: font family</li> <li><code>fontsize</code>: font size</li> <li><code>weight</code>: weight of the text</li> <li><code>slant</code>: slant of the text</li> <li><code>underline</code>: whether the text is underline</li> <li><code>overstrike</code>: whether the text is overstrike</li> <li><code>justify</code>: justify mode of the text</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the text of the widget</p> </li> <li> <code>set</code>             \u2013              <p>Set the text of the widget</p> </li> </ul>"},{"location":"documents/standard/#maliang.standard.Tooltip.get","title":"get","text":"<pre><code>get() -&gt; str\n</code></pre> <p>Get the text of the widget</p>"},{"location":"documents/standard/#maliang.standard.Tooltip.set","title":"set","text":"<pre><code>set(text: str) -&gt; None\n</code></pre> <p>Set the text of the widget</p>"},{"location":"documents/standard/dialogs/","title":"maliang.standard.dialogs","text":"<p> \u5b57\u6570 9 \u4e2a \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p> \u6e90\u4ee3\u7801\uff1a<code>maliang/standard/dialogs.py</code></p> <p>All standard dialog classes</p> <p>\u7c7b\uff1a</p> <ul> <li> <code>TkMessage</code>           \u2013            <p>Message pop-up</p> </li> <li> <code>TkColorChooser</code>           \u2013            <p>Color chooser pop-up</p> </li> <li> <code>TkFontChooser</code>           \u2013            <p>Font chooser pop-up</p> </li> </ul>"},{"location":"documents/standard/dialogs/#maliang.standard.dialogs.TkMessage","title":"TkMessage","text":"<pre><code>TkMessage(\n    message: str | None = None,\n    detail: str | None = None,\n    *,\n    title: str | None = None,\n    icon: typing.Literal[\"error\", \"info\", \"question\", \"warning\"] = \"info\",\n    option: typing.Literal[\n        \"abortretryignore\", \"ok\", \"okcancel\", \"retrycancel\", \"yesno\", \"yesnocancel\"\n    ] = \"ok\",\n    default: typing.Literal[\"abort\", \"retry\", \"ignore\", \"ok\", \"cancel\", \"yes\", \"no\"] | None = None,\n    master: tkinter.Tk | None = None,\n    command: collections.abc.Callable[\n        [typing.Literal[\"abort\", \"retry\", \"ignore\", \"ok\", \"cancel\", \"yes\", \"no\"]], typing.Any\n    ]\n    | None = None,\n)\n</code></pre> <p>Message pop-up</p> <ul> <li><code>message</code>: message</li> <li><code>detail</code>: detail message</li> <li><code>title</code>: title of the window</li> <li><code>icon</code>: icon</li> <li><code>option</code>: type of the message pop-up</li> <li><code>default</code>: button where the focus is, default is the leftmost one</li> <li><code>master</code>: parent widget of the window</li> <li><code>command</code>: callback function</li> </ul>"},{"location":"documents/standard/dialogs/#maliang.standard.dialogs.TkColorChooser","title":"TkColorChooser","text":"<pre><code>TkColorChooser(\n    *,\n    title: str | None = None,\n    color: str | None = None,\n    master: tkinter.Tk | None = None,\n    command: collections.abc.Callable[[str], typing.Any] | None = None,\n)\n</code></pre> <p>Color chooser pop-up</p> <ul> <li><code>title</code>: title of the window</li> <li><code>color</code>: default color</li> <li><code>master</code>: parent widget of the window</li> <li><code>command</code>: callback function</li> </ul>"},{"location":"documents/standard/dialogs/#maliang.standard.dialogs.TkFontChooser","title":"TkFontChooser","text":"<pre><code>TkFontChooser(\n    *,\n    title: str | None = None,\n    font: str | None = None,\n    master: tkinter.Tk | None = None,\n    command: collections.abc.Callable[[str], typing.Any] | None = None,\n)\n</code></pre> <p>Font chooser pop-up</p> <ul> <li><code>title</code>: title of the window</li> <li><code>font</code>: default font</li> <li><code>master</code>: parent widget of the window</li> <li><code>command</code>: callback function</li> </ul>"},{"location":"documents/standard/features/","title":"maliang.standard.features","text":"<p> \u5b57\u6570 9 \u4e2a \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p> \u6e90\u4ee3\u7801\uff1a<code>maliang/standard/features.py</code></p> <p>All standard <code>Feature</code> classes</p> <p>\u7c7b\uff1a</p> <ul> <li> <code>LabelFeature</code>           \u2013            <p>Feature of Label</p> </li> <li> <code>ButtonFeature</code>           \u2013            <p>Feature of Button</p> </li> <li> <code>Underline</code>           \u2013            <p>Feature of underline</p> </li> <li> <code>Highlight</code>           \u2013            <p>Feature of highlight</p> </li> <li> <code>SwitchFeature</code>           \u2013            <p>Feature of Switch</p> </li> <li> <code>ToggleButtonFeature</code>           \u2013            <p>Feature of ToggleButton</p> </li> <li> <code>CheckBoxFeature</code>           \u2013            <p>Feature of CheckButton</p> </li> <li> <code>RadioBoxFeature</code>           \u2013            <p>Feature of RadioButton</p> </li> <li> <code>ProgressBarFeature</code>           \u2013            <p>Feature of ProgressBar</p> </li> <li> <code>InputBoxFeature</code>           \u2013            <p>Feature of input box</p> </li> <li> <code>SliderFeature</code>           \u2013            <p>Feature of Slider</p> </li> <li> <code>SegmentedButtonFeature</code>           \u2013            <p>Feature of SegmentedButton</p> </li> <li> <code>SpinBoxFeature</code>           \u2013            <p>Feature of SpinBox</p> </li> </ul>"},{"location":"documents/standard/features/#maliang.standard.features.LabelFeature","title":"LabelFeature","text":"<pre><code>LabelFeature(widget: Widget)\n</code></pre> <p>               Bases: <code>virtual.Feature</code></p> <p>Feature of Label</p>"},{"location":"documents/standard/features/#maliang.standard.features.ButtonFeature","title":"ButtonFeature","text":"<pre><code>ButtonFeature(\n    widget: virtual.Widget, *, command: collections.abc.Callable | None = None, args: tuple = ()\n)\n</code></pre> <p>               Bases: <code>virtual.Feature</code></p> <p>Feature of Button</p> <ul> <li><code>widget</code>: parent widget</li> <li><code>command</code>: callback function</li> <li><code>args</code>: arguments of callback function</li> </ul>"},{"location":"documents/standard/features/#maliang.standard.features.Underline","title":"Underline","text":"<pre><code>Underline(\n    widget: virtual.Widget, *, command: collections.abc.Callable | None = None, args: tuple = ()\n)\n</code></pre> <p>               Bases: <code>ButtonFeature</code></p> <p>Feature of underline</p>"},{"location":"documents/standard/features/#maliang.standard.features.Highlight","title":"Highlight","text":"<pre><code>Highlight(\n    widget: virtual.Widget, *, command: collections.abc.Callable | None = None, args: tuple = ()\n)\n</code></pre> <p>               Bases: <code>ButtonFeature</code></p> <p>Feature of highlight</p>"},{"location":"documents/standard/features/#maliang.standard.features.SwitchFeature","title":"SwitchFeature","text":"<pre><code>SwitchFeature(\n    widget: virtual.Widget, *, command: collections.abc.Callable | None = None, args: tuple = ()\n)\n</code></pre> <p>               Bases: <code>ButtonFeature</code></p> <p>Feature of Switch</p>"},{"location":"documents/standard/features/#maliang.standard.features.ToggleButtonFeature","title":"ToggleButtonFeature","text":"<pre><code>ToggleButtonFeature(\n    widget: virtual.Widget, *, command: collections.abc.Callable | None = None, args: tuple = ()\n)\n</code></pre> <p>               Bases: <code>ButtonFeature</code></p> <p>Feature of ToggleButton</p>"},{"location":"documents/standard/features/#maliang.standard.features.CheckBoxFeature","title":"CheckBoxFeature","text":"<pre><code>CheckBoxFeature(\n    widget: virtual.Widget, *, command: collections.abc.Callable | None = None, args: tuple = ()\n)\n</code></pre> <p>               Bases: <code>ToggleButtonFeature</code></p> <p>Feature of CheckButton</p>"},{"location":"documents/standard/features/#maliang.standard.features.RadioBoxFeature","title":"RadioBoxFeature","text":"<pre><code>RadioBoxFeature(\n    widget: virtual.Widget, *, command: collections.abc.Callable | None = None, args: tuple = ()\n)\n</code></pre> <p>               Bases: <code>ButtonFeature</code></p> <p>Feature of RadioButton</p>"},{"location":"documents/standard/features/#maliang.standard.features.ProgressBarFeature","title":"ProgressBarFeature","text":"<pre><code>ProgressBarFeature(widget: Widget)\n</code></pre> <p>               Bases: <code>LabelFeature</code></p> <p>Feature of ProgressBar</p>"},{"location":"documents/standard/features/#maliang.standard.features.InputBoxFeature","title":"InputBoxFeature","text":"<pre><code>InputBoxFeature(\n    widget: virtual.Widget,\n    *,\n    command: collections.abc.Callable[..., typing.Any] | None = None,\n    args: tuple = (),\n)\n</code></pre> <p>               Bases: <code>ButtonFeature</code></p> <p>Feature of input box</p>"},{"location":"documents/standard/features/#maliang.standard.features.SliderFeature","title":"SliderFeature","text":"<pre><code>SliderFeature(widget: virtual.Widget)\n</code></pre> <p>               Bases: <code>virtual.Feature</code></p> <p>Feature of Slider</p>"},{"location":"documents/standard/features/#maliang.standard.features.SegmentedButtonFeature","title":"SegmentedButtonFeature","text":"<pre><code>SegmentedButtonFeature(widget: Widget)\n</code></pre> <p>               Bases: <code>virtual.Feature</code></p> <p>Feature of SegmentedButton</p>"},{"location":"documents/standard/features/#maliang.standard.features.SpinBoxFeature","title":"SpinBoxFeature","text":"<pre><code>SpinBoxFeature(\n    widget: virtual.Widget, *, command: collections.abc.Callable[[bool], typing.Any] | None = None\n)\n</code></pre> <p>               Bases: <code>virtual.Feature</code></p> <p>Feature of SpinBox</p> <ul> <li><code>widget</code>: parent widget</li> <li><code>command</code>: callback function</li> </ul>"},{"location":"documents/standard/images/","title":"maliang.standard.images","text":"<p> \u5b57\u6570 9 \u4e2a \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p> \u6e90\u4ee3\u7801\uff1a<code>maliang/standard/images.py</code></p> <p>All standard <code>Image</code> classes</p> <p>\u7c7b\uff1a</p> <ul> <li> <code>StillImage</code>           \u2013            <p>A simple still image</p> </li> </ul>"},{"location":"documents/standard/images/#maliang.standard.images.StillImage","title":"StillImage","text":"<pre><code>StillImage(\n    widget: Widget,\n    relative_position: tuple[int, int] = (0, 0),\n    size: tuple[int, int] | None = None,\n    *,\n    image: enhanced.PhotoImage | None = None,\n    name: str | None = None,\n    gradient_animation: bool = True,\n    **kwargs,\n)\n</code></pre> <p>               Bases: <code>virtual.Image</code></p> <p>A simple still image</p> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>display</code>             \u2013              <p>Display the <code>Element</code> on a <code>Canvas</code></p> </li> <li> <code>coords</code>             \u2013              <p>Resize the <code>Element</code></p> </li> </ul>"},{"location":"documents/standard/images/#maliang.standard.images.StillImage.display","title":"display","text":"<pre><code>display() -&gt; None\n</code></pre> <p>Display the <code>Element</code> on a <code>Canvas</code></p>"},{"location":"documents/standard/images/#maliang.standard.images.StillImage.coords","title":"coords","text":"<pre><code>coords(\n    size: tuple[float, float] | None = None, position: tuple[float, float] | None = None\n) -&gt; None\n</code></pre> <p>Resize the <code>Element</code></p>"},{"location":"documents/standard/images/#maliang.standard.images.Smoke","title":"Smoke","text":"<pre><code>Smoke(\n    widget: virtual.Widget,\n    relative_position: tuple[int, int] = (0, 0),\n    size: tuple[int, int] | None = None,\n    *,\n    color: str | None = \"#00000066\",\n    name: str | None = None,\n    animation: bool = True,\n    **kwargs,\n)\n</code></pre> <p>               Bases: <code>virtual.Image</code></p> <p>A special Image with only one color</p> <ul> <li><code>widget</code>: parent widget</li> <li><code>relative_position</code>: position relative to its widgets</li> <li><code>size</code>: size of element</li> <li><code>color</code>: color of the image object of the element</li> <li><code>name</code>: name of element</li> <li><code>animation</code>: Wether use animation to change color</li> <li><code>kwargs</code>: extra parameters for CanvasItem</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>display</code>             \u2013              <p>Display the <code>Element</code> on a <code>Canvas</code></p> </li> <li> <code>coords</code>             \u2013              <p>Resize the <code>Element</code></p> </li> </ul>"},{"location":"documents/standard/images/#maliang.standard.images.Smoke.display","title":"display","text":"<pre><code>display() -&gt; None\n</code></pre> <p>Display the <code>Element</code> on a <code>Canvas</code></p>"},{"location":"documents/standard/images/#maliang.standard.images.Smoke.coords","title":"coords","text":"<pre><code>coords(\n    size: tuple[float, float] | None = None, position: tuple[float, float] | None = None\n) -&gt; None\n</code></pre> <p>Resize the <code>Element</code></p>"},{"location":"documents/standard/shapes/","title":"maliang.standard.shapes","text":"<p> \u5b57\u6570 9 \u4e2a \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p> \u6e90\u4ee3\u7801\uff1a<code>maliang/standard/shapes.py</code></p> <p>All standard <code>Shape</code> classes</p> <p>\u7c7b\uff1a</p> <ul> <li> <code>Line</code>           \u2013            <p>Create a line for a widget</p> </li> <li> <code>Rectangle</code>           \u2013            <p>Create a rectangle for a widget</p> </li> <li> <code>Oval</code>           \u2013            <p>Create a oval for a widget</p> </li> <li> <code>Arc</code>           \u2013            <p>Create a arc for a widget</p> </li> <li> <code>RegularPolygon</code>           \u2013            <p>Create a regular polygon for a widget</p> </li> <li> <code>RoundedRectangle</code>           \u2013            <p>Create a rounded rectangle for a widget</p> </li> <li> <code>HalfRoundedRectangle</code>           \u2013            <p>Create a half rounded rectangle for a widget</p> </li> <li> <code>SemicircularRectangle</code>           \u2013            <p>Create a semicircular rectangle for a widget</p> </li> <li> <code>SharpRectangle</code>           \u2013            <p>Create a sharp rectangle for a widget</p> </li> <li> <code>Parallelogram</code>           \u2013            <p>Create a parallelogram for a widget</p> </li> </ul>"},{"location":"documents/standard/shapes/#maliang.standard.shapes.Line","title":"Line","text":"<pre><code>Line(\n    widget: virtual.Widget,\n    relative_position: tuple[int, int] = (0, 0),\n    size: tuple[int, int] | None = None,\n    *,\n    points: list[tuple[float, float]] | None = None,\n    name: str | None = None,\n    gradient_animation: bool = True,\n    **kwargs,\n)\n</code></pre> <p>               Bases: <code>virtual.Shape</code></p> <p>Create a line for a widget</p> <ul> <li><code>widget</code>: parent widget</li> <li><code>relative_position</code>: position relative to its widgets</li> <li><code>size</code>: size of element</li> <li><code>points</code>: key points of line</li> <li><code>name</code>: name of element</li> <li><code>gradient_animation</code>: Wether use animation to change color</li> <li><code>kwargs</code>: extra parameters for CanvasItem</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>display</code>             \u2013              <p>Display the <code>Element</code> on a <code>Canvas</code></p> </li> <li> <code>coords</code>             \u2013              <p>Resize the <code>Element</code></p> </li> </ul>"},{"location":"documents/standard/shapes/#maliang.standard.shapes.Line.display","title":"display","text":"<pre><code>display() -&gt; None\n</code></pre> <p>Display the <code>Element</code> on a <code>Canvas</code></p>"},{"location":"documents/standard/shapes/#maliang.standard.shapes.Line.coords","title":"coords","text":"<pre><code>coords(\n    size: tuple[float, float] | None = None, position: tuple[float, float] | None = None\n) -&gt; None\n</code></pre> <p>Resize the <code>Element</code></p>"},{"location":"documents/standard/shapes/#maliang.standard.shapes.Rectangle","title":"Rectangle","text":"<pre><code>Rectangle(\n    widget: Widget,\n    position: tuple[int, int] = (0, 0),\n    size: tuple[int, int] | None = None,\n    *,\n    name: str | None = None,\n    gradient_animation: bool | None = None,\n    **kwargs,\n)\n</code></pre> <p>               Bases: <code>virtual.Shape</code></p> <p>Create a rectangle for a widget</p> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>display</code>             \u2013              <p>Display the <code>Element</code> on a <code>Canvas</code></p> </li> <li> <code>coords</code>             \u2013              <p>Resize the <code>Element</code></p> </li> </ul>"},{"location":"documents/standard/shapes/#maliang.standard.shapes.Rectangle.display","title":"display","text":"<pre><code>display() -&gt; None\n</code></pre> <p>Display the <code>Element</code> on a <code>Canvas</code></p>"},{"location":"documents/standard/shapes/#maliang.standard.shapes.Rectangle.coords","title":"coords","text":"<pre><code>coords(\n    size: tuple[float, float] | None = None, position: tuple[float, float] | None = None\n) -&gt; None\n</code></pre> <p>Resize the <code>Element</code></p>"},{"location":"documents/standard/shapes/#maliang.standard.shapes.Oval","title":"Oval","text":"<pre><code>Oval(\n    widget: Widget,\n    position: tuple[int, int] = (0, 0),\n    size: tuple[int, int] | None = None,\n    *,\n    name: str | None = None,\n    gradient_animation: bool | None = None,\n    **kwargs,\n)\n</code></pre> <p>               Bases: <code>virtual.Shape</code></p> <p>Create a oval for a widget</p> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>display</code>             \u2013              <p>Display the <code>Element</code> on a <code>Canvas</code></p> </li> <li> <code>coords</code>             \u2013              <p>Resize the <code>Element</code></p> </li> <li> <code>detect</code>             \u2013              <p>Detect whether the specified coordinates are within <code>Element</code></p> </li> </ul>"},{"location":"documents/standard/shapes/#maliang.standard.shapes.Oval.display","title":"display","text":"<pre><code>display() -&gt; None\n</code></pre> <p>Display the <code>Element</code> on a <code>Canvas</code></p>"},{"location":"documents/standard/shapes/#maliang.standard.shapes.Oval.coords","title":"coords","text":"<pre><code>coords(\n    size: tuple[float, float] | None = None, position: tuple[float, float] | None = None\n) -&gt; None\n</code></pre> <p>Resize the <code>Element</code></p>"},{"location":"documents/standard/shapes/#maliang.standard.shapes.Oval.detect","title":"detect","text":"<pre><code>detect(x: int, y: int) -&gt; bool\n</code></pre> <p>Detect whether the specified coordinates are within <code>Element</code></p>"},{"location":"documents/standard/shapes/#maliang.standard.shapes.Arc","title":"Arc","text":"<pre><code>Arc(\n    widget: Widget,\n    position: tuple[int, int] = (0, 0),\n    size: tuple[int, int] | None = None,\n    *,\n    name: str | None = None,\n    gradient_animation: bool | None = None,\n    **kwargs,\n)\n</code></pre> <p>               Bases: <code>virtual.Shape</code></p> <p>Create a arc for a widget</p> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>display</code>             \u2013              <p>Display the <code>Element</code> on a <code>Canvas</code></p> </li> <li> <code>coords</code>             \u2013              <p>Resize the <code>Element</code></p> </li> </ul>"},{"location":"documents/standard/shapes/#maliang.standard.shapes.Arc.display","title":"display","text":"<pre><code>display() -&gt; None\n</code></pre> <p>Display the <code>Element</code> on a <code>Canvas</code></p>"},{"location":"documents/standard/shapes/#maliang.standard.shapes.Arc.coords","title":"coords","text":"<pre><code>coords(\n    size: tuple[float, float] | None = None, position: tuple[float, float] | None = None\n) -&gt; None\n</code></pre> <p>Resize the <code>Element</code></p>"},{"location":"documents/standard/shapes/#maliang.standard.shapes.RegularPolygon","title":"RegularPolygon","text":"<pre><code>RegularPolygon(\n    widget: virtual.Widget,\n    relative_position: tuple[int, int] = (0, 0),\n    size: tuple[int, int] | None = None,\n    *,\n    side: int = 3,\n    angle: float = 0,\n    name: str | None = None,\n    gradient_animation: bool = True,\n    **kwargs,\n)\n</code></pre> <p>               Bases: <code>virtual.Shape</code></p> <p>Create a regular polygon for a widget</p> <ul> <li><code>widget</code>: parent widget</li> <li><code>relative_position</code>: position relative to its widgets</li> <li><code>size</code>: size of element</li> <li><code>side</code>: number of sides of a regular polygon</li> <li><code>angle</code>: number of radians of a regular polygon rotated clockwise</li> <li><code>name</code>: name of element</li> <li><code>gradient_animation</code>: Wether use animation to change color</li> <li><code>kwargs</code>: extra parameters for CanvasItem</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>display</code>             \u2013              <p>Display the <code>Element</code> on a <code>Canvas</code></p> </li> <li> <code>coords</code>             \u2013              <p>Resize the <code>Element</code></p> </li> </ul>"},{"location":"documents/standard/shapes/#maliang.standard.shapes.RegularPolygon.display","title":"display","text":"<pre><code>display() -&gt; None\n</code></pre> <p>Display the <code>Element</code> on a <code>Canvas</code></p>"},{"location":"documents/standard/shapes/#maliang.standard.shapes.RegularPolygon.coords","title":"coords","text":"<pre><code>coords(\n    size: tuple[float, float] | None = None, position: tuple[float, float] | None = None\n) -&gt; None\n</code></pre> <p>Resize the <code>Element</code></p>"},{"location":"documents/standard/shapes/#maliang.standard.shapes.RoundedRectangle","title":"RoundedRectangle","text":"<pre><code>RoundedRectangle(\n    widget: virtual.Widget,\n    relative_position: tuple[int, int] = (0, 0),\n    size: tuple[int, int] | None = None,\n    *,\n    radius: int = 5,\n    name: str | None = None,\n    gradient_animation: bool = True,\n    **kwargs,\n)\n</code></pre> <p>               Bases: <code>virtual.Shape</code></p> <p>Create a rounded rectangle for a widget</p> <ul> <li><code>widget</code>: parent widget</li> <li><code>relative_position</code>: position relative to its widgets</li> <li><code>size</code>: size of element</li> <li><code>radius</code>: radius of the fillet</li> <li><code>name</code>: name of element</li> <li><code>gradient_animation</code>: Wether use animation to change color</li> <li><code>kwargs</code>: extra parameters for CanvasItem</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>display</code>             \u2013              <p>Display the <code>Element</code> on a <code>Canvas</code></p> </li> <li> <code>coords</code>             \u2013              <p>Resize the <code>Element</code></p> </li> </ul>"},{"location":"documents/standard/shapes/#maliang.standard.shapes.RoundedRectangle.display","title":"display","text":"<pre><code>display() -&gt; None\n</code></pre> <p>Display the <code>Element</code> on a <code>Canvas</code></p>"},{"location":"documents/standard/shapes/#maliang.standard.shapes.RoundedRectangle.coords","title":"coords","text":"<pre><code>coords(\n    size: tuple[float, float] | None = None, position: tuple[float, float] | None = None\n) -&gt; None\n</code></pre> <p>Resize the <code>Element</code></p>"},{"location":"documents/standard/shapes/#maliang.standard.shapes.HalfRoundedRectangle","title":"HalfRoundedRectangle","text":"<pre><code>HalfRoundedRectangle(\n    widget: virtual.Widget,\n    relative_position: tuple[int, int] = (0, 0),\n    size: tuple[int, int] | None = None,\n    *,\n    radius: int = 5,\n    ignore: typing.Literal[\"left\", \"right\"] = \"left\",\n    name: str | None = None,\n    gradient_animation: bool = True,\n    **kwargs,\n)\n</code></pre> <p>               Bases: <code>virtual.Shape</code></p> <p>Create a half rounded rectangle for a widget</p> <ul> <li><code>widget</code>: parent widget</li> <li><code>relative_position</code>: position relative to its widgets</li> <li><code>size</code>: size of element</li> <li><code>radius</code>: radius of the fillet</li> <li><code>ignore</code>: edges to ignore</li> <li><code>name</code>: name of element</li> <li><code>gradient_animation</code>: Wether use animation to change color</li> <li><code>kwargs</code>: extra parameters for CanvasItem</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>display</code>             \u2013              <p>Display the <code>Element</code> on a <code>Canvas</code></p> </li> <li> <code>coords</code>             \u2013              <p>Resize the <code>Element</code></p> </li> </ul>"},{"location":"documents/standard/shapes/#maliang.standard.shapes.HalfRoundedRectangle.display","title":"display","text":"<pre><code>display() -&gt; None\n</code></pre> <p>Display the <code>Element</code> on a <code>Canvas</code></p>"},{"location":"documents/standard/shapes/#maliang.standard.shapes.HalfRoundedRectangle.coords","title":"coords","text":"<pre><code>coords(\n    size: tuple[float, float] | None = None, position: tuple[float, float] | None = None\n) -&gt; None\n</code></pre> <p>Resize the <code>Element</code></p>"},{"location":"documents/standard/shapes/#maliang.standard.shapes.SemicircularRectangle","title":"SemicircularRectangle","text":"<pre><code>SemicircularRectangle(\n    widget: Widget,\n    position: tuple[int, int] = (0, 0),\n    size: tuple[int, int] | None = None,\n    *,\n    name: str | None = None,\n    gradient_animation: bool | None = None,\n    **kwargs,\n)\n</code></pre> <p>               Bases: <code>virtual.Shape</code></p> <p>Create a semicircular rectangle for a widget</p> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>display</code>             \u2013              <p>Display the <code>Element</code> on a <code>Canvas</code></p> </li> <li> <code>coords</code>             \u2013              <p>Resize the <code>Element</code></p> </li> <li> <code>detect</code>             \u2013              <p>Detect whether the specified coordinates are within <code>Element</code></p> </li> </ul>"},{"location":"documents/standard/shapes/#maliang.standard.shapes.SemicircularRectangle.display","title":"display","text":"<pre><code>display() -&gt; None\n</code></pre> <p>Display the <code>Element</code> on a <code>Canvas</code></p>"},{"location":"documents/standard/shapes/#maliang.standard.shapes.SemicircularRectangle.coords","title":"coords","text":"<pre><code>coords(\n    size: tuple[float, float] | None = None, position: tuple[float, float] | None = None\n) -&gt; None\n</code></pre> <p>Resize the <code>Element</code></p>"},{"location":"documents/standard/shapes/#maliang.standard.shapes.SemicircularRectangle.detect","title":"detect","text":"<pre><code>detect(x: int, y: int) -&gt; bool\n</code></pre> <p>Detect whether the specified coordinates are within <code>Element</code></p>"},{"location":"documents/standard/shapes/#maliang.standard.shapes.SharpRectangle","title":"SharpRectangle","text":"<pre><code>SharpRectangle(\n    widget: virtual.Widget,\n    relative_position: tuple[int, int] = (0, 0),\n    size: tuple[int, int] | None = None,\n    *,\n    theta: float = math.pi / 6,\n    ratio: tuple[float, float] = (0.5, 0.5),\n    name: str | None = None,\n    gradient_animation: bool = True,\n    **kwargs,\n)\n</code></pre> <p>               Bases: <code>virtual.Shape</code></p> <p>Create a sharp rectangle for a widget</p> <ul> <li><code>widget</code>: parent widget</li> <li><code>relative_position</code>: position relative to its widgets</li> <li><code>size</code>: size of element</li> <li><code>theta</code>: number of radians of sharp corners</li> <li><code>ratio</code>: height ratio of the left and right sharp corners</li> <li><code>name</code>: name of element</li> <li><code>gradient_animation</code>: Wether use animation to change color</li> <li><code>kwargs</code>: extra parameters for CanvasItem</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>display</code>             \u2013              <p>Display the <code>Element</code> on a <code>Canvas</code></p> </li> <li> <code>coords</code>             \u2013              <p>Resize the <code>Element</code></p> </li> </ul>"},{"location":"documents/standard/shapes/#maliang.standard.shapes.SharpRectangle.display","title":"display","text":"<pre><code>display() -&gt; None\n</code></pre> <p>Display the <code>Element</code> on a <code>Canvas</code></p>"},{"location":"documents/standard/shapes/#maliang.standard.shapes.SharpRectangle.coords","title":"coords","text":"<pre><code>coords(\n    size: tuple[float, float] | None = None, position: tuple[float, float] | None = None\n) -&gt; None\n</code></pre> <p>Resize the <code>Element</code></p>"},{"location":"documents/standard/shapes/#maliang.standard.shapes.Parallelogram","title":"Parallelogram","text":"<pre><code>Parallelogram(\n    widget: virtual.Widget,\n    relative_position: tuple[int, int] = (0, 0),\n    size: tuple[int, int] | None = None,\n    *,\n    theta: float = math.pi / 6,\n    name: str | None = None,\n    gradient_animation: bool = True,\n    **kwargs,\n)\n</code></pre> <p>               Bases: <code>virtual.Shape</code></p> <p>Create a parallelogram for a widget</p> <ul> <li><code>widget</code>: parent widget</li> <li><code>relative_position</code>: position relative to its widgets</li> <li><code>size</code>: size of element</li> <li><code>theta</code>: number of radians that the parallelogram is inclined to</li> <li><code>name</code>: name of element</li> <li><code>gradient_animation</code>: Wether use animation to change color</li> <li><code>kwargs</code>: extra parameters for CanvasItem</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>display</code>             \u2013              <p>Display the <code>Element</code> on a <code>Canvas</code></p> </li> <li> <code>coords</code>             \u2013              <p>Resize the <code>Element</code></p> </li> </ul>"},{"location":"documents/standard/shapes/#maliang.standard.shapes.Parallelogram.display","title":"display","text":"<pre><code>display() -&gt; None\n</code></pre> <p>Display the <code>Element</code> on a <code>Canvas</code></p>"},{"location":"documents/standard/shapes/#maliang.standard.shapes.Parallelogram.coords","title":"coords","text":"<pre><code>coords(\n    size: tuple[float, float] | None = None, position: tuple[float, float] | None = None\n) -&gt; None\n</code></pre> <p>Resize the <code>Element</code></p>"},{"location":"documents/standard/styles/","title":"maliang.standard.styles","text":"<p> \u5b57\u6570 9 \u4e2a \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p> \u6e90\u4ee3\u7801\uff1a<code>maliang/standard/styles.py</code></p> <p>All standard <code>Style</code> classes</p> <p>\u7c7b\uff1a</p> <ul> <li> <code>TextStyle</code>           \u2013            <p>Style of Text</p> </li> <li> <code>LabelStyle</code>           \u2013            <p>Style of Label</p> </li> <li> <code>ButtonStyle</code>           \u2013            <p>Style of Button</p> </li> <li> <code>SwitchStyle</code>           \u2013            <p>Style of Switch</p> </li> <li> <code>InputBoxStyle</code>           \u2013            <p>Style of InputBox</p> </li> <li> <code>ToggleButtonStyle</code>           \u2013            <p>Style of ToggleButton</p> </li> <li> <code>CheckBoxStyle</code>           \u2013            <p>Style of CheckBox</p> </li> <li> <code>RadioBoxStyle</code>           \u2013            <p>Style of RadioGroup</p> </li> <li> <code>ProgressBarStyle</code>           \u2013            <p>Style of ProgressBar</p> </li> <li> <code>UnderlineButtonStyle</code>           \u2013            <p>Style of UnderlineButton</p> </li> <li> <code>HighlightButtonStyle</code>           \u2013            <p>Style of HighlightButtonStyle</p> </li> <li> <code>IconButtonStyle</code>           \u2013            <p>Style of IconButtonStyle</p> </li> <li> <code>SliderStyle</code>           \u2013            <p>Style of Slider</p> </li> <li> <code>SegmentedButtonStyle</code>           \u2013            <p>Style of SegmentedButton</p> </li> <li> <code>OptionButtonStyle</code>           \u2013            <p>Style of OptionButton</p> </li> <li> <code>SpinnerStyle</code>           \u2013            <p>Style of Spinner</p> </li> <li> <code>TooltipStyle</code>           \u2013            <p>Style of Tooltip</p> </li> </ul>"},{"location":"documents/standard/styles/#maliang.standard.styles.TextStyle","title":"TextStyle","text":"<pre><code>TextStyle(widget: Widget, *, auto_update: bool | None = None)\n</code></pre> <p>               Bases: <code>virtual.Style</code></p> <p>Style of Text</p> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>set</code>             \u2013              <p>Set the style of the widget.</p> </li> </ul>"},{"location":"documents/standard/styles/#maliang.standard.styles.TextStyle.set","title":"set","text":"<pre><code>set(\n    theme: typing.Literal[\"light\", \"dark\"] | None = None,\n    *,\n    fg: tuple[str | types.EllipsisType, ...] | str | None = None,\n) -&gt; None\n</code></pre> <p>Set the style of the widget.</p> <ul> <li><code>theme</code>: the theme name, None indicates both</li> <li><code>fg</code>: the foreground color of the widget</li> </ul> <p>states: \u201cnormal\u201d</p>"},{"location":"documents/standard/styles/#maliang.standard.styles.LabelStyle","title":"LabelStyle","text":"<pre><code>LabelStyle(widget: Widget, *, auto_update: bool | None = None)\n</code></pre> <p>               Bases: <code>virtual.Style</code></p> <p>Style of Label</p> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>set</code>             \u2013              <p>Set the style of the widget.</p> </li> </ul>"},{"location":"documents/standard/styles/#maliang.standard.styles.LabelStyle.set","title":"set","text":"<pre><code>set(\n    theme: typing.Literal[\"light\", \"dark\"] | None = None,\n    *,\n    fg: tuple[str | types.EllipsisType, ...] | str | None = None,\n    bg: tuple[str | types.EllipsisType, ...] | str | None = None,\n    ol: tuple[str | types.EllipsisType, ...] | str | None = None,\n) -&gt; None\n</code></pre> <p>Set the style of the widget.</p> <ul> <li><code>theme</code>: the theme name, None indicates both</li> <li><code>fg</code>: the foreground color of the widget.</li> <li><code>bg</code>: the background color of the widget.</li> <li><code>ol</code>: the outline color of the widget.</li> </ul> <p>states: \u201cnormal\u201d, \u201chover\u201d</p>"},{"location":"documents/standard/styles/#maliang.standard.styles.ButtonStyle","title":"ButtonStyle","text":"<pre><code>ButtonStyle(widget: Widget, *, auto_update: bool | None = None)\n</code></pre> <p>               Bases: <code>LabelStyle</code></p> <p>Style of Button</p> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>set</code>             \u2013              <p>Set the style of the widget.</p> </li> </ul>"},{"location":"documents/standard/styles/#maliang.standard.styles.ButtonStyle.set","title":"set","text":"<pre><code>set(\n    theme: typing.Literal[\"light\", \"dark\"] | None = None,\n    *,\n    fg: tuple[str | types.EllipsisType, ...] | str | None = None,\n    bg: tuple[str | types.EllipsisType, ...] | str | None = None,\n    ol: tuple[str | types.EllipsisType, ...] | str | None = None,\n) -&gt; None\n</code></pre> <p>Set the style of the widget.</p> <ul> <li><code>theme</code>: the theme name, None indicates both</li> <li><code>fg</code>: the foreground color of the widget.</li> <li><code>bg</code>: the background color of the widget.</li> <li><code>ol</code>: the outline color of the widget.</li> </ul> <p>states: \u201cnormal\u201d, \u201chover\u201d, \u201cactive\u201d</p>"},{"location":"documents/standard/styles/#maliang.standard.styles.SwitchStyle","title":"SwitchStyle","text":"<pre><code>SwitchStyle(widget: Widget, *, auto_update: bool | None = None)\n</code></pre> <p>               Bases: <code>virtual.Style</code></p> <p>Style of Switch</p> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>set</code>             \u2013              <p>Set the style of the widget.</p> </li> </ul>"},{"location":"documents/standard/styles/#maliang.standard.styles.SwitchStyle.set","title":"set","text":"<pre><code>set(\n    theme: typing.Literal[\"light\", \"dark\"] | None = None,\n    *,\n    bg_slot: tuple[str | types.EllipsisType, ...] | str | None = None,\n    ol_slot: tuple[str | types.EllipsisType, ...] | str | None = None,\n    bg_dot: tuple[str | types.EllipsisType, ...] | str | None = None,\n    ol_dot: tuple[str | types.EllipsisType, ...] | str | None = None,\n) -&gt; None\n</code></pre> <p>Set the style of the widget.</p> <ul> <li><code>theme</code>: the theme name, None indicates both</li> <li><code>bg_slot</code>: the background color of the widget.</li> <li><code>ol_slot</code>: the outline color of the widget.</li> <li><code>bg_dot</code>: the inside background color of the widget.</li> <li><code>ol_dot</code>: the inside outline color of the widget.</li> </ul> <p>states: \u201cnormal-off\u201d, \u201chover-off\u201d, \u201cactive-off\u201d, \u201cnormal-on\u201d, \u201chover-on\u201d, \u201cactive-on\u201d</p>"},{"location":"documents/standard/styles/#maliang.standard.styles.InputBoxStyle","title":"InputBoxStyle","text":"<pre><code>InputBoxStyle(widget: Widget, *, auto_update: bool | None = None)\n</code></pre> <p>               Bases: <code>virtual.Style</code></p> <p>Style of InputBox</p> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>set</code>             \u2013              <p>Set the style of the widget.</p> </li> </ul>"},{"location":"documents/standard/styles/#maliang.standard.styles.InputBoxStyle.set","title":"set","text":"<pre><code>set(\n    theme: typing.Literal[\"light\", \"dark\"] | None = None,\n    *,\n    fg: tuple[str | types.EllipsisType, ...] | str | None = None,\n    bg: tuple[str | types.EllipsisType, ...] | str | None = None,\n    ol: tuple[str | types.EllipsisType, ...] | str | None = None,\n    bg_bar: tuple[str | types.EllipsisType, ...] | str | None = None,\n) -&gt; None\n</code></pre> <p>Set the style of the widget.</p> <ul> <li><code>theme</code>: the theme name, None indicates both</li> <li><code>fg</code>: the foreground color of the widget.</li> <li><code>bg</code>: the background color of the widget.</li> <li><code>ol</code>: the outline color of the widget.</li> <li><code>bg_bar</code>: the highlight bar of the widget (Only for Windows11 theme)</li> </ul> <p>states: \u201cnormal\u201d, \u201chover\u201d, \u201cactive\u201d</p>"},{"location":"documents/standard/styles/#maliang.standard.styles.ToggleButtonStyle","title":"ToggleButtonStyle","text":"<pre><code>ToggleButtonStyle(widget: Widget, *, auto_update: bool | None = None)\n</code></pre> <p>               Bases: <code>virtual.Style</code></p> <p>Style of ToggleButton</p> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>set</code>             \u2013              <p>Set the style of the widget.</p> </li> </ul>"},{"location":"documents/standard/styles/#maliang.standard.styles.ToggleButtonStyle.set","title":"set","text":"<pre><code>set(\n    theme: typing.Literal[\"light\", \"dark\"] | None = None,\n    *,\n    fg: tuple[str | types.EllipsisType, ...] | str | None = None,\n    bg: tuple[str | types.EllipsisType, ...] | str | None = None,\n    ol: tuple[str | types.EllipsisType, ...] | str | None = None,\n) -&gt; None\n</code></pre> <p>Set the style of the widget.</p> <ul> <li><code>theme</code>: the theme name, None indicates both</li> <li><code>fg</code>: the foreground color of the widget.</li> <li><code>bg</code>: the background color of the widget.</li> <li><code>ol</code>: the outline color of the widget.</li> </ul> <p>states: \u201cnormal-off\u201d, \u201chover-off\u201d, \u201cactive-off\u201d, \u201cnormal-on\u201d, \u201chover-on\u201d, \u201cactive-on\u201d</p>"},{"location":"documents/standard/styles/#maliang.standard.styles.CheckBoxStyle","title":"CheckBoxStyle","text":"<pre><code>CheckBoxStyle(widget: Widget, *, auto_update: bool | None = None)\n</code></pre> <p>               Bases: <code>ToggleButtonStyle</code></p> <p>Style of CheckBox</p>"},{"location":"documents/standard/styles/#maliang.standard.styles.RadioBoxStyle","title":"RadioBoxStyle","text":"<pre><code>RadioBoxStyle(widget: Widget, *, auto_update: bool | None = None)\n</code></pre> <p>               Bases: <code>virtual.Style</code></p> <p>Style of RadioGroup</p> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>set</code>             \u2013              <p>Set the style of the widget.</p> </li> </ul>"},{"location":"documents/standard/styles/#maliang.standard.styles.RadioBoxStyle.set","title":"set","text":"<pre><code>set(\n    theme: typing.Literal[\"light\", \"dark\"] | None = None,\n    *,\n    bg_box: tuple[str | types.EllipsisType, ...] | str | None = None,\n    ol_box: tuple[str | types.EllipsisType, ...] | str | None = None,\n    bg_dot: tuple[str | types.EllipsisType, ...] | str | None = None,\n    ol_dot: tuple[str | types.EllipsisType, ...] | str | None = None,\n) -&gt; None\n</code></pre> <p>Set the style of the widget.</p> <ul> <li><code>theme</code>: the theme name, None indicates both</li> <li><code>bg_box</code>: the background color of the widget.</li> <li><code>ol_box</code>: the outline color of the widget.</li> <li><code>bg_dot</code>: the inside background color of the widget.</li> <li><code>ol_dot</code>: the inside outline color of the widget.</li> </ul> <p>states: \u201cnormal\u201d, \u201chover\u201d, \u201cactive\u201d</p>"},{"location":"documents/standard/styles/#maliang.standard.styles.ProgressBarStyle","title":"ProgressBarStyle","text":"<pre><code>ProgressBarStyle(widget: Widget, *, auto_update: bool | None = None)\n</code></pre> <p>               Bases: <code>virtual.Style</code></p> <p>Style of ProgressBar</p> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>set</code>             \u2013              <p>Set the style of the widget.</p> </li> </ul>"},{"location":"documents/standard/styles/#maliang.standard.styles.ProgressBarStyle.set","title":"set","text":"<pre><code>set(\n    theme: typing.Literal[\"light\", \"dark\"] | None = None,\n    *,\n    bg_slot: tuple[str | types.EllipsisType, ...] | str | None = None,\n    ol_slot: tuple[str | types.EllipsisType, ...] | str | None = None,\n    bg_bar: tuple[str | types.EllipsisType, ...] | str | None = None,\n    ol_bar: tuple[str | types.EllipsisType, ...] | str | None = None,\n) -&gt; None\n</code></pre> <p>Set the style of the widget.</p> <ul> <li><code>theme</code>: the theme name, None indicates both</li> <li><code>bg_slot</code>: the background color of the widget.</li> <li><code>ol_slot</code>: the outline color of the widget.</li> <li><code>bg_bar</code>: the inside background color of the widget.</li> <li><code>ol_bar</code>: the inside outline color of the widget.</li> </ul> <p>states: \u201cnormal\u201d, \u201chover\u201d</p>"},{"location":"documents/standard/styles/#maliang.standard.styles.UnderlineButtonStyle","title":"UnderlineButtonStyle","text":"<pre><code>UnderlineButtonStyle(widget: Widget, *, auto_update: bool | None = None)\n</code></pre> <p>               Bases: <code>TextStyle</code></p> <p>Style of UnderlineButton</p>"},{"location":"documents/standard/styles/#maliang.standard.styles.HighlightButtonStyle","title":"HighlightButtonStyle","text":"<pre><code>HighlightButtonStyle(widget: Widget, *, auto_update: bool | None = None)\n</code></pre> <p>               Bases: <code>TextStyle</code></p> <p>Style of HighlightButtonStyle</p>"},{"location":"documents/standard/styles/#maliang.standard.styles.IconButtonStyle","title":"IconButtonStyle","text":"<pre><code>IconButtonStyle(widget: Widget, *, auto_update: bool | None = None)\n</code></pre> <p>               Bases: <code>LabelStyle</code></p> <p>Style of IconButtonStyle</p>"},{"location":"documents/standard/styles/#maliang.standard.styles.SliderStyle","title":"SliderStyle","text":"<pre><code>SliderStyle(widget: Widget, *, auto_update: bool | None = None)\n</code></pre> <p>               Bases: <code>virtual.Style</code></p> <p>Style of Slider</p> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>set</code>             \u2013              <p>Set the style of the widget.</p> </li> </ul>"},{"location":"documents/standard/styles/#maliang.standard.styles.SliderStyle.set","title":"set","text":"<pre><code>set(\n    theme: typing.Literal[\"light\", \"dark\"] | None = None,\n    *,\n    fg_slot: tuple[str | types.EllipsisType, ...] | str | None = None,\n    bg_slot: tuple[str | types.EllipsisType, ...] | str | None = None,\n    bg_pnt: tuple[str | types.EllipsisType, ...] | str | None = None,\n    bg_dot: tuple[str | types.EllipsisType, ...] | str | None = None,\n) -&gt; None\n</code></pre> <p>Set the style of the widget.</p> <ul> <li><code>theme</code>: the theme name, None indicates both</li> <li><code>fg_slot</code>: the foreground color of the widget.</li> <li><code>bg_slot</code>: the background color of the widget.</li> <li><code>bg_pnt</code>: the pointer color of the widget.</li> <li><code>bg_dot</code>: the pointer highlight part color of the widget (Only for Windows11 theme).</li> </ul> <p>states: \u201cnormal\u201d, \u201chover\u201d, \u201cactive\u201d</p>"},{"location":"documents/standard/styles/#maliang.standard.styles.SegmentedButtonStyle","title":"SegmentedButtonStyle","text":"<pre><code>SegmentedButtonStyle(widget: Widget, *, auto_update: bool | None = None)\n</code></pre> <p>               Bases: <code>virtual.Style</code></p> <p>Style of SegmentedButton</p> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>set</code>             \u2013              <p>Set the style of the widget.</p> </li> </ul>"},{"location":"documents/standard/styles/#maliang.standard.styles.SegmentedButtonStyle.set","title":"set","text":"<pre><code>set(\n    theme: typing.Literal[\"light\", \"dark\"] | None = None,\n    *,\n    bg: tuple[str | types.EllipsisType, ...] | str | None = None,\n    ol: tuple[str | types.EllipsisType, ...] | str | None = None,\n) -&gt; None\n</code></pre> <p>Set the style of the widget.</p> <ul> <li><code>theme</code>: the theme name, None indicates both</li> <li><code>bg</code>: the background color of the widget.</li> <li><code>ol</code>: the outline color of the widget.</li> </ul> <p>states: \u201cnormal\u201d, \u201chover\u201d</p>"},{"location":"documents/standard/styles/#maliang.standard.styles.ToggleButtonStyle4SB","title":"ToggleButtonStyle4SB","text":"<pre><code>ToggleButtonStyle4SB(widget: Widget, *, auto_update: bool | None = None)\n</code></pre> <p>               Bases: <code>ToggleButtonStyle</code></p> <p>style of ToggelButton for SegmentedButton</p>"},{"location":"documents/standard/styles/#maliang.standard.styles.OptionButtonStyle","title":"OptionButtonStyle","text":"<pre><code>OptionButtonStyle(widget: Widget, *, auto_update: bool | None = None)\n</code></pre> <p>               Bases: <code>virtual.Style</code></p> <p>Style of OptionButton</p> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>set</code>             \u2013              <p>Set the style of the widget.</p> </li> </ul>"},{"location":"documents/standard/styles/#maliang.standard.styles.OptionButtonStyle.set","title":"set","text":"<pre><code>set(\n    theme: typing.Literal[\"light\", \"dark\"] | None = None,\n    *,\n    bg: tuple[str | types.EllipsisType, ...] | str | None = None,\n    ol: tuple[str | types.EllipsisType, ...] | str | None = None,\n) -&gt; None\n</code></pre> <p>Set the style of the widget.</p> <ul> <li><code>theme</code>: the theme name, None indicates both</li> <li><code>bg</code>: the background color of the widget.</li> <li><code>ol</code>: the outline color of the widget.</li> </ul> <p>states: \u201cnormal\u201d, \u201chover\u201d, \u201cactive\u201d</p>"},{"location":"documents/standard/styles/#maliang.standard.styles.SpinnerStyle","title":"SpinnerStyle","text":"<pre><code>SpinnerStyle(widget: Widget, *, auto_update: bool | None = None)\n</code></pre> <p>               Bases: <code>virtual.Style</code></p> <p>Style of Spinner</p> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>set</code>             \u2013              <p>Set the style of the widget.</p> </li> </ul>"},{"location":"documents/standard/styles/#maliang.standard.styles.SpinnerStyle.set","title":"set","text":"<pre><code>set(\n    theme: typing.Literal[\"light\", \"dark\"] | None = None,\n    *,\n    fg: tuple[str | types.EllipsisType, ...] | str | None = None,\n    bg: tuple[str | types.EllipsisType, ...] | str | None = None,\n) -&gt; None\n</code></pre> <p>Set the style of the widget.</p> <ul> <li><code>theme</code>: the theme name, None indicates both</li> <li><code>fg</code>: the foreground color of the widget.</li> <li><code>bg</code>: the background color of the widget.</li> </ul> <p>states: \u201cnormal\u201d</p>"},{"location":"documents/standard/styles/#maliang.standard.styles.TooltipStyle","title":"TooltipStyle","text":"<pre><code>TooltipStyle(widget: Widget, *, auto_update: bool | None = None)\n</code></pre> <p>               Bases: <code>virtual.Style</code></p> <p>Style of Tooltip</p> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>set</code>             \u2013              <p>Set the style of the widget.</p> </li> </ul>"},{"location":"documents/standard/styles/#maliang.standard.styles.TooltipStyle.set","title":"set","text":"<pre><code>set(\n    theme: typing.Literal[\"light\", \"dark\"] | None = None,\n    *,\n    fg: tuple[str | types.EllipsisType, ...] | str | None = None,\n    bg: tuple[str | types.EllipsisType, ...] | str | None = None,\n    ol: tuple[str | types.EllipsisType, ...] | str | None = None,\n) -&gt; None\n</code></pre> <p>Set the style of the widget.</p> <ul> <li><code>theme</code>: the theme name, None indicates both</li> <li><code>fg</code>: the foreground color of the widget.</li> <li><code>bg</code>: the background color of the widget.</li> <li><code>ol</code>: the outline color of the widget.</li> </ul> <p>states: \u201cnormal\u201d</p>"},{"location":"documents/standard/texts/","title":"maliang.standard.texts","text":"<p> \u5b57\u6570 9 \u4e2a \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p> \u6e90\u4ee3\u7801\uff1a<code>maliang/standard/texts.py</code></p> <p>All standard <code>Text</code> classes</p> <p>\u7c7b\uff1a</p> <ul> <li> <code>Information</code>           \u2013            <p>General information text</p> </li> <li> <code>SingleLineText</code>           \u2013            <p>Single-line editable text</p> </li> </ul>"},{"location":"documents/standard/texts/#maliang.standard.texts.Information","title":"Information","text":"<pre><code>Information(\n    widget: Widget,\n    relative_position: tuple[int, int] = (0, 0),\n    size: tuple[int, int] | None = None,\n    *,\n    text: str = \"\",\n    limit: int = -1,\n    show: str | None = None,\n    placeholder: str = \"\",\n    family: str | None = None,\n    fontsize: int | None = None,\n    weight: typing.Literal[\"normal\", \"bold\"] = \"normal\",\n    slant: typing.Literal[\"roman\", \"italic\"] = \"roman\",\n    underline: bool = False,\n    overstrike: bool = False,\n    name: str | None = None,\n    gradient_animation: bool = True,\n    **kwargs,\n)\n</code></pre> <p>               Bases: <code>virtual.Text</code></p> <p>General information text</p> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>display</code>             \u2013              <p>Display the <code>Element</code> on a <code>Canvas</code></p> </li> <li> <code>coords</code>             \u2013              <p>Resize the <code>Element</code></p> </li> <li> <code>get</code>             \u2013              <p>Get the value of <code>Text</code></p> </li> <li> <code>set</code>             \u2013              <p>Set the value of <code>Text</code></p> </li> <li> <code>append</code>             \u2013              <p>Append value to the value of <code>Text</code></p> </li> <li> <code>delete</code>             \u2013              <p>Remove a portion of the <code>Text</code> value from the trail</p> </li> <li> <code>clear</code>             \u2013              <p>Clear the value of <code>Text</code></p> </li> </ul>"},{"location":"documents/standard/texts/#maliang.standard.texts.Information.display","title":"display","text":"<pre><code>display() -&gt; None\n</code></pre> <p>Display the <code>Element</code> on a <code>Canvas</code></p>"},{"location":"documents/standard/texts/#maliang.standard.texts.Information.coords","title":"coords","text":"<pre><code>coords(\n    size: tuple[float, float] | None = None, position: tuple[float, float] | None = None\n) -&gt; None\n</code></pre> <p>Resize the <code>Element</code></p>"},{"location":"documents/standard/texts/#maliang.standard.texts.Information.get","title":"get","text":"<pre><code>get() -&gt; str\n</code></pre> <p>Get the value of <code>Text</code></p>"},{"location":"documents/standard/texts/#maliang.standard.texts.Information.set","title":"set","text":"<pre><code>set(text: str) -&gt; None\n</code></pre> <p>Set the value of <code>Text</code></p>"},{"location":"documents/standard/texts/#maliang.standard.texts.Information.append","title":"append","text":"<pre><code>append(text: str) -&gt; None\n</code></pre> <p>Append value to the value of <code>Text</code></p>"},{"location":"documents/standard/texts/#maliang.standard.texts.Information.delete","title":"delete","text":"<pre><code>delete(num: int) -&gt; None\n</code></pre> <p>Remove a portion of the <code>Text</code> value from the trail</p>"},{"location":"documents/standard/texts/#maliang.standard.texts.Information.clear","title":"clear","text":"<pre><code>clear() -&gt; None\n</code></pre> <p>Clear the value of <code>Text</code></p>"},{"location":"documents/standard/texts/#maliang.standard.texts.SingleLineText","title":"SingleLineText","text":"<pre><code>SingleLineText(\n    widget: virtual.Widget,\n    relative_position: tuple[int, int] = (0, 0),\n    size: tuple[int, int] | None = None,\n    *,\n    text: str = \"\",\n    ignore: tuple[str, ...] = (\"\\n\", \"\\r\"),\n    limit: int = math.inf,\n    limit_width: int = 0,\n    show: str | None = None,\n    placeholder: str = \"\",\n    align: typing.Literal[\"left\", \"center\", \"right\"] = \"left\",\n    family: str | None = None,\n    fontsize: int | None = None,\n    weight: typing.Literal[\"normal\", \"bold\"] = \"normal\",\n    slant: typing.Literal[\"roman\", \"italic\"] = \"roman\",\n    underline: bool = False,\n    overstrike: bool = False,\n    name: str | None = None,\n    gradient_animation: bool = True,\n    **kwargs,\n)\n</code></pre> <p>               Bases: <code>virtual.Text</code></p> <p>Single-line editable text</p> <ul> <li><code>widget</code>: parent widget</li> <li><code>relative_position</code>: position relative to its widgets</li> <li><code>size</code>: size of element</li> <li><code>text</code>: text value</li> <li><code>family</code>: font family</li> <li><code>fontsize</code>: font size</li> <li><code>weight</code>: weight of the font</li> <li><code>slant</code>: slant of the font</li> <li><code>underline</code>: wether text is underline</li> <li><code>overstrike</code>: wether text is overstrike</li> <li><code>align</code>: align mode of the text</li> <li><code>ignore</code>: ignore the input of some characters</li> <li><code>limit</code>: limit on the number of characters</li> <li><code>limit_width</code>: limit on the width of characters</li> <li><code>show</code>: display a value that obscures the original content</li> <li><code>placeholder</code>: a placeholder for the prompt</li> <li><code>name</code>: name of element</li> <li><code>gradient_animation</code>: Wether use animation to change color</li> <li><code>kwargs</code>: extra parameters for CanvasItem</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>display</code>             \u2013              <p>Display the <code>Element</code> on a <code>Canvas</code></p> </li> <li> <code>coords</code>             \u2013              <p>Resize the <code>Element</code></p> </li> <li> <code>get</code>             \u2013              <p>Get text of the element</p> </li> <li> <code>set</code>             \u2013              <p>Set text of the element</p> </li> <li> <code>insert</code>             \u2013              <p>Insert text to the location of the specified index</p> </li> <li> <code>append</code>             \u2013              <p>Add some characters to the text cursor</p> </li> <li> <code>remove</code>             \u2013              <p>Remove text within the specified index range</p> </li> <li> <code>pop</code>             \u2013              <p>Delete a character at the text cursor</p> </li> <li> <code>clear</code>             \u2013              <p>Clear</p> </li> <li> <code>cursor_move</code>             \u2013              <p>Move the index position of the text cursor</p> </li> <li> <code>cursor_move_to</code>             \u2013              <p>Move the index position of the text cursor to a certain index</p> </li> </ul>"},{"location":"documents/standard/texts/#maliang.standard.texts.SingleLineText.display","title":"display","text":"<pre><code>display() -&gt; None\n</code></pre> <p>Display the <code>Element</code> on a <code>Canvas</code></p>"},{"location":"documents/standard/texts/#maliang.standard.texts.SingleLineText.coords","title":"coords","text":"<pre><code>coords(\n    size: tuple[float, float] | None = None, position: tuple[float, float] | None = None\n) -&gt; None\n</code></pre> <p>Resize the <code>Element</code></p>"},{"location":"documents/standard/texts/#maliang.standard.texts.SingleLineText.get","title":"get","text":"<pre><code>get() -&gt; str\n</code></pre> <p>Get text of the element</p>"},{"location":"documents/standard/texts/#maliang.standard.texts.SingleLineText.set","title":"set","text":"<pre><code>set(value: str) -&gt; bool\n</code></pre> <p>Set text of the element</p>"},{"location":"documents/standard/texts/#maliang.standard.texts.SingleLineText.insert","title":"insert","text":"<pre><code>insert(index: int, value: str) -&gt; bool\n</code></pre> <p>Insert text to the location of the specified index</p>"},{"location":"documents/standard/texts/#maliang.standard.texts.SingleLineText.append","title":"append","text":"<pre><code>append(value: str) -&gt; bool\n</code></pre> <p>Add some characters to the text cursor</p>"},{"location":"documents/standard/texts/#maliang.standard.texts.SingleLineText.remove","title":"remove","text":"<pre><code>remove(start: int, end: int | None = None) -&gt; None\n</code></pre> <p>Remove text within the specified index range</p>"},{"location":"documents/standard/texts/#maliang.standard.texts.SingleLineText.pop","title":"pop","text":"<pre><code>pop(index: int = -1) -&gt; str\n</code></pre> <p>Delete a character at the text cursor</p>"},{"location":"documents/standard/texts/#maliang.standard.texts.SingleLineText.clear","title":"clear","text":"<pre><code>clear() -&gt; None\n</code></pre> <p>Clear</p>"},{"location":"documents/standard/texts/#maliang.standard.texts.SingleLineText.cursor_move","title":"cursor_move","text":"<pre><code>cursor_move(count: int) -&gt; None\n</code></pre> <p>Move the index position of the text cursor</p>"},{"location":"documents/standard/texts/#maliang.standard.texts.SingleLineText.cursor_move_to","title":"cursor_move_to","text":"<pre><code>cursor_move_to(count: int) -&gt; None\n</code></pre> <p>Move the index position of the text cursor to a certain index</p>"},{"location":"documents/standard/widgets/","title":"maliang.standard.widgets","text":"<p> \u5b57\u6570 9 \u4e2a \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p> \u6e90\u4ee3\u7801\uff1a<code>maliang/standard/widgets.py</code></p> <p>All standard <code>Widget</code> classes</p> <p>\u7c7b\uff1a</p> <ul> <li> <code>Text</code>           \u2013            <p>Text widget, generally used to display plain text</p> </li> <li> <code>Image</code>           \u2013            <p>Image widget, generally used to display normal still image</p> </li> <li> <code>Label</code>           \u2013            <p>Label widget, which is generally used to display key information</p> </li> <li> <code>Button</code>           \u2013            <p>Button widget, typically used to trigger a function</p> </li> <li> <code>Switch</code>           \u2013            <p>Switch widget, typically used to control the turning of a function on and off</p> </li> <li> <code>InputBox</code>           \u2013            <p>Input box widget, generally used to enter certain information on a single line</p> </li> <li> <code>CheckBox</code>           \u2013            <p>Checkbox button widget, generally used to check some options</p> </li> <li> <code>ToggleButton</code>           \u2013            <p>A button that can display information and switch statuses</p> </li> <li> <code>RadioBox</code>           \u2013            <p>Radio button widget, generally used to select one of several options</p> </li> <li> <code>ProgressBar</code>           \u2013            <p>Progress bar widget, typically used to show the progress of an event</p> </li> <li> <code>UnderlineButton</code>           \u2013            <p>Underline button, generally used to display web links</p> </li> <li> <code>HighlightButton</code>           \u2013            <p>Highlight button, no outline, which added a highlight effect</p> </li> <li> <code>IconButton</code>           \u2013            <p>A button with an icon on the left side</p> </li> <li> <code>Slider</code>           \u2013            <p>A slider for visually resizing values</p> </li> <li> <code>SegmentedButton</code>           \u2013            <p>A segmented button that can be used to toggle between multiple states</p> </li> <li> <code>SpinBox</code>           \u2013            <p>A widget that makes it easy to enter numeric type data</p> </li> <li> <code>OptionButton</code>           \u2013            <p>A button that has many options to choose</p> </li> <li> <code>ComboBox</code>           \u2013            <p>An input box that can provide several options</p> </li> <li> <code>Spinner</code>           \u2013            <p>Spinners visually communicate that something is processing</p> </li> <li> <code>Tooltip</code>           \u2013            <p>A tooltip that can display additional information</p> </li> </ul>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.Text","title":"Text","text":"<pre><code>Text(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    *,\n    text: str = \"\",\n    family: str | None = None,\n    fontsize: int | None = None,\n    weight: typing.Literal[\"normal\", \"bold\"] = \"normal\",\n    slant: typing.Literal[\"roman\", \"italic\"] = \"roman\",\n    underline: bool = False,\n    overstrike: bool = False,\n    justify: typing.Literal[\"left\", \"center\", \"right\"] = \"left\",\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>Text widget, generally used to display plain text</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>text</code>: text of the widget</li> <li><code>family</code>: font family</li> <li><code>fontsize</code>: font size</li> <li><code>weight</code>: weight of the text</li> <li><code>slant</code>: slant of the text</li> <li><code>underline</code>: whether the text is underline</li> <li><code>overstrike</code>: whether the text is overstrike</li> <li><code>justify</code>: justify mode of the text</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the text of the widget</p> </li> <li> <code>set</code>             \u2013              <p>Set the text of the widget</p> </li> </ul>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.Text.get","title":"get","text":"<pre><code>get() -&gt; str\n</code></pre> <p>Get the text of the widget</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.Text.set","title":"set","text":"<pre><code>set(text: str) -&gt; None\n</code></pre> <p>Set the text of the widget</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.Image","title":"Image","text":"<pre><code>Image(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    size: tuple[int, int] | None = None,\n    *,\n    image: enhanced.PhotoImage | None = None,\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>Image widget, generally used to display normal still image</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>size</code>: size of the widget</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the image of the widget</p> </li> <li> <code>set</code>             \u2013              <p>Set the image of the widget</p> </li> </ul>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.Image.get","title":"get","text":"<pre><code>get() -&gt; enhanced.PhotoImage\n</code></pre> <p>Get the image of the widget</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.Image.set","title":"set","text":"<pre><code>set(image: enhanced.PhotoImage | None) -&gt; None\n</code></pre> <p>Set the image of the widget</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.Label","title":"Label","text":"<pre><code>Label(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    size: tuple[int, int] | None = None,\n    *,\n    text: str = \"\",\n    family: str | None = None,\n    fontsize: int | None = None,\n    weight: typing.Literal[\"normal\", \"bold\"] = \"normal\",\n    slant: typing.Literal[\"roman\", \"italic\"] = \"roman\",\n    underline: bool = False,\n    overstrike: bool = False,\n    justify: typing.Literal[\"left\", \"center\", \"right\"] = \"left\",\n    image: enhanced.PhotoImage | None = None,\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>Label widget, which is generally used to display key information</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>size</code>: size of the widget</li> <li><code>text</code>: text of the widget</li> <li><code>family</code>: font family</li> <li><code>fontsize</code>: font size</li> <li><code>weight</code>: weight of the text</li> <li><code>slant</code>: slant of the text</li> <li><code>underline</code>: whether the text is underline</li> <li><code>overstrike</code>: whether the text is overstrike</li> <li><code>justify</code>: justify mode of the text</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the text of the widget</p> </li> <li> <code>set</code>             \u2013              <p>Set the text of the widget</p> </li> </ul>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.Label.get","title":"get","text":"<pre><code>get() -&gt; str\n</code></pre> <p>Get the text of the widget</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.Label.set","title":"set","text":"<pre><code>set(text: str) -&gt; None\n</code></pre> <p>Set the text of the widget</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.Button","title":"Button","text":"<pre><code>Button(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    size: tuple[int, int] | None = None,\n    *,\n    text: str = \"\",\n    family: str | None = None,\n    fontsize: int | None = None,\n    weight: typing.Literal[\"normal\", \"bold\"] = \"normal\",\n    slant: typing.Literal[\"roman\", \"italic\"] = \"roman\",\n    underline: bool = False,\n    overstrike: bool = False,\n    justify: typing.Literal[\"left\", \"center\", \"right\"] = \"left\",\n    command: collections.abc.Callable | None = None,\n    image: enhanced.PhotoImage | None = None,\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>Button widget, typically used to trigger a function</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>size</code>: size of the widget</li> <li><code>text</code>: text of the widget</li> <li><code>family</code>: font family</li> <li><code>fontsize</code>: font size</li> <li><code>weight</code>: weight of the text</li> <li><code>slant</code>: slant of the text</li> <li><code>underline</code>: whether the text is underline</li> <li><code>overstrike</code>: whether the text is overstrike</li> <li><code>justify</code>: justify mode of the text</li> <li><code>command</code>: a function that is triggered when the button is pressed</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the text of the widget</p> </li> <li> <code>set</code>             \u2013              <p>Set the text of the widget</p> </li> </ul>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.Button.get","title":"get","text":"<pre><code>get() -&gt; str\n</code></pre> <p>Get the text of the widget</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.Button.set","title":"set","text":"<pre><code>set(text: str) -&gt; None\n</code></pre> <p>Set the text of the widget</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.Switch","title":"Switch","text":"<pre><code>Switch(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    length: int = 60,\n    *,\n    default: bool | None = None,\n    command: collections.abc.Callable[[bool], typing.Any] | None = None,\n    image: enhanced.PhotoImage | None = None,\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>Switch widget, typically used to control the turning of a function on and off</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>length</code>: length of the widget</li> <li><code>default</code>: default value of the widget</li> <li><code>command</code>: a function that is triggered when the switch is changed</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the state of the switch</p> </li> <li> <code>set</code>             \u2013              <p>Set the state of the switch</p> </li> </ul>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.Switch.get","title":"get","text":"<pre><code>get() -&gt; bool\n</code></pre> <p>Get the state of the switch</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.Switch.set","title":"set","text":"<pre><code>set(value: bool, *, callback: bool = False) -&gt; None\n</code></pre> <p>Set the state of the switch</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.InputBox","title":"InputBox","text":"<pre><code>InputBox(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    size: tuple[int, int] | None = None,\n    *,\n    family: str | None = None,\n    fontsize: int | None = None,\n    weight: typing.Literal[\"normal\", \"bold\"] = \"normal\",\n    slant: typing.Literal[\"roman\", \"italic\"] = \"roman\",\n    underline: bool = False,\n    overstrike: bool = False,\n    align: typing.Literal[\"left\", \"right\", \"center\"] = \"left\",\n    placeholder: str = \"\",\n    show: str | None = None,\n    ignore: tuple[str, ...] = (\"\\n\", \"\\r\"),\n    limit: int = math.inf,\n    limit_width: int = 0,\n    image: enhanced.PhotoImage | None = None,\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>Input box widget, generally used to enter certain information on a single line</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>size</code>: size of the widget</li> <li><code>family</code>: font family</li> <li><code>fontsize</code>: font size</li> <li><code>weight</code>: weight of the text</li> <li><code>slant</code>: slant of the text</li> <li><code>underline</code>: whether the text is underline</li> <li><code>overstrike</code>: whether the text is overstrike</li> <li><code>align</code>: align mode of the text</li> <li><code>show</code>: display a value that obscures the original content</li> <li><code>ignore</code>: ignore the input of some characters</li> <li><code>placeholder</code>: a placeholder for the prompt</li> <li><code>limit</code>: limit on the number of characters</li> <li><code>limit_width</code>: limit on the width of characters</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the value of the Entry</p> </li> <li> <code>set</code>             \u2013              <p>Set the text value of the Entry</p> </li> <li> <code>insert</code>             \u2013              <p>Insert</p> </li> <li> <code>append</code>             \u2013              <p>Append text to Entry</p> </li> <li> <code>remove</code>             \u2013              <p>Remove</p> </li> <li> <code>pop</code>             \u2013              <p>Delete a specified amount of text</p> </li> <li> <code>clear</code>             \u2013              <p>Clear the text value of the Entry</p> </li> </ul>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.InputBox.get","title":"get","text":"<pre><code>get() -&gt; str\n</code></pre> <p>Get the value of the Entry</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.InputBox.set","title":"set","text":"<pre><code>set(value: str) -&gt; bool\n</code></pre> <p>Set the text value of the Entry</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.InputBox.insert","title":"insert","text":"<pre><code>insert(index: int, value: str) -&gt; bool\n</code></pre> <p>Insert</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.InputBox.append","title":"append","text":"<pre><code>append(value: str) -&gt; bool\n</code></pre> <p>Append text to Entry</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.InputBox.remove","title":"remove","text":"<pre><code>remove(start: int, end: int | None = None) -&gt; int\n</code></pre> <p>Remove</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.InputBox.pop","title":"pop","text":"<pre><code>pop(index: int = -1) -&gt; str\n</code></pre> <p>Delete a specified amount of text</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.InputBox.clear","title":"clear","text":"<pre><code>clear() -&gt; None\n</code></pre> <p>Clear the text value of the Entry</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.CheckBox","title":"CheckBox","text":"<pre><code>CheckBox(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    length: int = 30,\n    *,\n    default: bool | None = None,\n    command: collections.abc.Callable[[bool], typing.Any] | None = None,\n    image: enhanced.PhotoImage | None = None,\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>Checkbox button widget, generally used to check some options</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>length</code>: length of the widget</li> <li><code>default</code>: default state of the widget</li> <li><code>command</code>: a function that is triggered when the state of check button is on</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the state of the check button</p> </li> <li> <code>set</code>             \u2013              <p>Set the state of the check button</p> </li> </ul>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.CheckBox.get","title":"get","text":"<pre><code>get() -&gt; bool\n</code></pre> <p>Get the state of the check button</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.CheckBox.set","title":"set","text":"<pre><code>set(value: bool, *, callback: bool = False) -&gt; None\n</code></pre> <p>Set the state of the check button</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.ToggleButton","title":"ToggleButton","text":"<pre><code>ToggleButton(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    size: tuple[int, int] | None = None,\n    *,\n    text: str = \"\",\n    family: str | None = None,\n    fontsize: int | None = None,\n    weight: typing.Literal[\"normal\", \"bold\"] = \"normal\",\n    slant: typing.Literal[\"roman\", \"italic\"] = \"roman\",\n    underline: bool = False,\n    overstrike: bool = False,\n    justify: typing.Literal[\"left\", \"center\", \"right\"] = \"left\",\n    default: bool | None = None,\n    command: collections.abc.Callable[[bool], typing.Any] | None = None,\n    image: enhanced.PhotoImage | None = None,\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>A button that can display information and switch statuses</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>size</code>: size of the widget</li> <li><code>text</code>: text of the widget</li> <li><code>family</code>: font family</li> <li><code>fontsize</code>: font size</li> <li><code>weight</code>: weight of the text</li> <li><code>slant</code>: slant of the text</li> <li><code>underline</code>: whether the text is underline</li> <li><code>overstrike</code>: whether the text is overstrike</li> <li><code>justify</code>: justify mode of the text</li> <li><code>default</code>: default state of the widget</li> <li><code>command</code>: a function that is triggered when the state of check button is on</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the state of the check button</p> </li> <li> <code>set</code>             \u2013              <p>Set the state of the switch</p> </li> </ul>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.ToggleButton.get","title":"get","text":"<pre><code>get() -&gt; bool\n</code></pre> <p>Get the state of the check button</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.ToggleButton.set","title":"set","text":"<pre><code>set(value: bool, *, callback: bool = False) -&gt; None\n</code></pre> <p>Set the state of the switch</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.RadioBox","title":"RadioBox","text":"<pre><code>RadioBox(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    length: int = 30,\n    *,\n    default: bool | None = None,\n    command: collections.abc.Callable[[int], typing.Any] | None = None,\n    image: enhanced.PhotoImage | None = None,\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>Radio button widget, generally used to select one of several options</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>length</code>: length of the widget</li> <li><code>default</code>: default state of the widget</li> <li><code>command</code>: a function that is triggered when the state of radio button is on</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the state of the radio button</p> </li> <li> <code>set</code>             \u2013              <p>Set the state of the radio button</p> </li> <li> <code>group</code>             \u2013              <p>Combine other radio boxes.</p> </li> </ul>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.RadioBox.get","title":"get","text":"<pre><code>get() -&gt; bool\n</code></pre> <p>Get the state of the radio button</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.RadioBox.set","title":"set","text":"<pre><code>set(value: bool, *, callback: bool = False) -&gt; None\n</code></pre> <p>Set the state of the radio button</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.RadioBox.group","title":"group","text":"<pre><code>group(*radio_boxes: RadioBox) -&gt; None\n</code></pre> <p>Combine other radio boxes.</p> <ul> <li><code>radio_boxes</code>: other radio boxes</li> </ul>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.ProgressBar","title":"ProgressBar","text":"<pre><code>ProgressBar(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    size: tuple[int, int] = (400, 20),\n    *,\n    default: float | None = None,\n    command: collections.abc.Callable[[float], typing.Any] | None = None,\n    image: enhanced.PhotoImage | None = None,\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>Progress bar widget, typically used to show the progress of an event</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>size</code>: size of the widget</li> <li><code>default</code>: default value of the widget</li> <li><code>command</code>: a function that is triggered when the progress of progress bar is 100%</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the progress of the progress bar</p> </li> <li> <code>set</code>             \u2013              <p>Set the progress of the progress bar</p> </li> </ul>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.ProgressBar.get","title":"get","text":"<pre><code>get() -&gt; float\n</code></pre> <p>Get the progress of the progress bar</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.ProgressBar.set","title":"set","text":"<pre><code>set(value: float, *, callback: bool = False) -&gt; None\n</code></pre> <p>Set the progress of the progress bar</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.UnderlineButton","title":"UnderlineButton","text":"<pre><code>UnderlineButton(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    *,\n    text: str = \"\",\n    family: str | None = None,\n    fontsize: int | None = None,\n    weight: typing.Literal[\"normal\", \"bold\"] = \"normal\",\n    slant: typing.Literal[\"roman\", \"italic\"] = \"roman\",\n    underline: bool = False,\n    overstrike: bool = False,\n    justify: typing.Literal[\"left\", \"center\", \"right\"] = \"left\",\n    command: collections.abc.Callable | None = None,\n    image: enhanced.PhotoImage | None = None,\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool = False,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>Underline button, generally used to display web links</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>text</code>: text of the widget</li> <li><code>family</code>: font family</li> <li><code>fontsize</code>: font size</li> <li><code>weight</code>: weight of the text</li> <li><code>slant</code>: slant of the text</li> <li><code>underline</code>: whether the text is underline</li> <li><code>overstrike</code>: whether the text is overstrike</li> <li><code>justify</code>: justify mode of the text</li> <li><code>command</code>: a function that is triggered when the underline button is pressed</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.HighlightButton","title":"HighlightButton","text":"<pre><code>HighlightButton(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    *,\n    text: str = \"\",\n    family: str | None = None,\n    fontsize: int | None = None,\n    weight: typing.Literal[\"normal\", \"bold\"] = \"normal\",\n    slant: typing.Literal[\"roman\", \"italic\"] = \"roman\",\n    underline: bool = False,\n    overstrike: bool = False,\n    justify: typing.Literal[\"left\", \"center\", \"right\"] = \"left\",\n    command: collections.abc.Callable | None = None,\n    image: enhanced.PhotoImage | None = None,\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>Highlight button, no outline, which added a highlight effect</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>text</code>: text of the widget</li> <li><code>family</code>: font family</li> <li><code>fontsize</code>: font size</li> <li><code>weight</code>: weight of the text</li> <li><code>slant</code>: slant of the text</li> <li><code>underline</code>: whether the text is underline</li> <li><code>overstrike</code>: whether the text is overstrike</li> <li><code>justify</code>: justify mode of the text</li> <li><code>command</code>: a function that is triggered when the hightlight button is pressed</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.IconButton","title":"IconButton","text":"<pre><code>IconButton(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    size: tuple[int, int] | None = None,\n    *,\n    text: str = \"\",\n    family: str | None = None,\n    fontsize: int | None = None,\n    weight: typing.Literal[\"normal\", \"bold\"] = \"normal\",\n    slant: typing.Literal[\"roman\", \"italic\"] = \"roman\",\n    underline: bool = False,\n    overstrike: bool = False,\n    justify: typing.Literal[\"left\", \"center\", \"right\"] = \"left\",\n    command: collections.abc.Callable | None = None,\n    image: enhanced.PhotoImage | None = None,\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>A button with an icon on the left side</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>size</code>: size of the widget</li> <li><code>text</code>: text of the widget</li> <li><code>family</code>: font family</li> <li><code>fontsize</code>: font size</li> <li><code>weight</code>: weight of the text</li> <li><code>slant</code>: slant of the text</li> <li><code>underline</code>: whether the text is underline</li> <li><code>overstrike</code>: whether the text is overstrike</li> <li><code>justify</code>: justify mode of the text</li> <li><code>command</code>: a function that is triggered when the button is pressed</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the text of the widget</p> </li> <li> <code>set</code>             \u2013              <p>Set the text of the widget</p> </li> </ul>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.IconButton.get","title":"get","text":"<pre><code>get() -&gt; str\n</code></pre> <p>Get the text of the widget</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.IconButton.set","title":"set","text":"<pre><code>set(text: str) -&gt; None\n</code></pre> <p>Set the text of the widget</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.Slider","title":"Slider","text":"<pre><code>Slider(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    size: tuple[int, int] = (400, 30),\n    *,\n    default: float | None = None,\n    command: collections.abc.Callable[[float], typing.Any] | None = None,\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>A slider for visually resizing values</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>size</code>: size of the widget</li> <li><code>default</code>: default value of the widget</li> <li><code>command</code>: a function that is triggered when the button is pressed</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the value of the slider</p> </li> <li> <code>set</code>             \u2013              <p>Set the value of the slider</p> </li> </ul>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.Slider.get","title":"get","text":"<pre><code>get() -&gt; float\n</code></pre> <p>Get the value of the slider</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.Slider.set","title":"set","text":"<pre><code>set(value: float, *, callback: bool = False) -&gt; None\n</code></pre> <p>Set the value of the slider</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.SegmentedButton","title":"SegmentedButton","text":"<pre><code>SegmentedButton(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    sizes: tuple[tuple[int, int], ...] = (),\n    *,\n    text: tuple[str, ...] = (),\n    family: str | None = None,\n    fontsize: int | None = None,\n    weight: typing.Literal[\"normal\", \"bold\"] = \"normal\",\n    slant: typing.Literal[\"roman\", \"italic\"] = \"roman\",\n    underline: bool = False,\n    overstrike: bool = False,\n    justify: typing.Literal[\"left\", \"center\", \"right\"] = \"left\",\n    default: int | None = None,\n    command: collections.abc.Callable[[int | None], typing.Any] | None = None,\n    image: tuple[enhanced.PhotoImage | None, ...] = (),\n    layout: typing.Literal[\"horizontal\", \"vertical\"] = \"horizontal\",\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>A segmented button that can be used to toggle between multiple states</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>size</code>: size of the widget</li> <li><code>text</code>: text of the widget</li> <li><code>family</code>: font family</li> <li><code>fontsize</code>: font size</li> <li><code>weight</code>: weight of the text</li> <li><code>slant</code>: slant of the text</li> <li><code>underline</code>: whether the text is underline</li> <li><code>overstrike</code>: whether the text is overstrike</li> <li><code>justify</code>: justify mode of the text</li> <li><code>default</code>: default value of the widget</li> <li><code>command</code>: a function that is triggered when the button is pressed</li> <li><code>image</code>: image of the widget</li> <li><code>layout</code>: layout mode of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the index of the child toggle button with a value of True. If not, None is</p> </li> <li> <code>set</code>             \u2013              <p>Activate the child toggle button for the specified index</p> </li> </ul>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.SegmentedButton.get","title":"get","text":"<pre><code>get() -&gt; int | None\n</code></pre> <p>Get the index of the child toggle button with a value of True. If not, None is returned.</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.SegmentedButton.set","title":"set","text":"<pre><code>set(value: int | None, *, callback: bool = False) -&gt; None\n</code></pre> <p>Activate the child toggle button for the specified index</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.SpinBox","title":"SpinBox","text":"<pre><code>SpinBox(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    size: tuple[int, int] | None = None,\n    *,\n    format_spec: str = \"d\",\n    step: int = 1,\n    family: str | None = None,\n    fontsize: int | None = None,\n    weight: typing.Literal[\"normal\", \"bold\"] = \"normal\",\n    slant: typing.Literal[\"roman\", \"italic\"] = \"roman\",\n    underline: bool = False,\n    overstrike: bool = False,\n    align: typing.Literal[\"left\", \"right\", \"center\"] = \"left\",\n    placeholder: str = \"\",\n    show: str | None = None,\n    limit: int = math.inf,\n    default: str | None = None,\n    command: collections.abc.Callable[[bool], typing.Any] | None = None,\n    image: enhanced.PhotoImage | None = None,\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>A widget that makes it easy to enter numeric type data</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>size</code>: size of the widget</li> <li><code>format_spec</code>: format of value</li> <li><code>step</code>: value of each change</li> <li><code>family</code>: font family</li> <li><code>fontsize</code>: font size</li> <li><code>weight</code>: weight of the text</li> <li><code>slant</code>: slant of the text</li> <li><code>underline</code>: whether the text is underline</li> <li><code>overstrike</code>: whether the text is overstrike</li> <li><code>align</code>: align mode of the text</li> <li><code>show</code>: display a value that obscures the original content</li> <li><code>placeholder</code>: a placeholder for the prompt</li> <li><code>limit</code>: limit on the number of characters</li> <li><code>default</code>: default value of the widget</li> <li><code>command</code>: a function that is triggered when the button is pressed</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>change</code>             \u2013              <p>Try change the current value</p> </li> <li> <code>get</code>             \u2013              <p>Get the value of the Entry</p> </li> <li> <code>set</code>             \u2013              <p>Set the text value of the Entry</p> </li> <li> <code>append</code>             \u2013              <p>Append text to Entry</p> </li> <li> <code>delete</code>             \u2013              <p>Delete a specified amount of text</p> </li> <li> <code>clear</code>             \u2013              <p>Clear the text value of the Entry</p> </li> </ul>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.SpinBox.change","title":"change","text":"<pre><code>change(up: bool) -&gt; None\n</code></pre> <p>Try change the current value</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.SpinBox.get","title":"get","text":"<pre><code>get() -&gt; str\n</code></pre> <p>Get the value of the Entry</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.SpinBox.set","title":"set","text":"<pre><code>set(value: str) -&gt; None\n</code></pre> <p>Set the text value of the Entry</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.SpinBox.append","title":"append","text":"<pre><code>append(value: str) -&gt; None\n</code></pre> <p>Append text to Entry</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.SpinBox.delete","title":"delete","text":"<pre><code>delete(count: int) -&gt; None\n</code></pre> <p>Delete a specified amount of text</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.SpinBox.clear","title":"clear","text":"<pre><code>clear() -&gt; None\n</code></pre> <p>Clear the text value of the Entry</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.OptionButton","title":"OptionButton","text":"<pre><code>OptionButton(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    size: tuple[int, int] | None = None,\n    *,\n    text: tuple[str, ...] = (),\n    family: str | None = None,\n    fontsize: int | None = None,\n    weight: typing.Literal[\"normal\", \"bold\"] = \"normal\",\n    slant: typing.Literal[\"roman\", \"italic\"] = \"roman\",\n    underline: bool = False,\n    overstrike: bool = False,\n    justify: typing.Literal[\"left\", \"center\", \"right\"] = \"left\",\n    default: int | None = None,\n    command: collections.abc.Callable[[int | None], typing.Any] | None = None,\n    image: tuple[enhanced.PhotoImage | None, ...] = (),\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    align: typing.Literal[\"up\", \"center\", \"down\"] = \"center\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>A button that has many options to choose</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>size</code>: size of the widget</li> <li><code>text</code>: text of the widget</li> <li><code>family</code>: font family</li> <li><code>fontsize</code>: font size</li> <li><code>weight</code>: weight of the text</li> <li><code>slant</code>: slant of the text</li> <li><code>underline</code>: whether the text is underline</li> <li><code>overstrike</code>: whether the text is overstrike</li> <li><code>justify</code>: justify mode of the text</li> <li><code>default</code>: default value of the widget</li> <li><code>command</code>: a function that is triggered when the button is pressed</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>align</code>: align of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the index of the child toggle button with a value of True. If not, None is</p> </li> <li> <code>set</code>             \u2013              <p>Activate the child toggle button for the specified index</p> </li> </ul>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.OptionButton.get","title":"get","text":"<pre><code>get() -&gt; int | None\n</code></pre> <p>Get the index of the child toggle button with a value of True. If not, None is returned.</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.OptionButton.set","title":"set","text":"<pre><code>set(value: int | None, *, callback: bool = False) -&gt; None\n</code></pre> <p>Activate the child toggle button for the specified index</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.ComboBox","title":"ComboBox","text":"<pre><code>ComboBox(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    size: tuple[int, int] | None = None,\n    *,\n    text: tuple[str, ...] = (),\n    family: str | None = None,\n    fontsize: int | None = None,\n    weight: typing.Literal[\"normal\", \"bold\"] = \"normal\",\n    slant: typing.Literal[\"roman\", \"italic\"] = \"roman\",\n    underline: bool = False,\n    overstrike: bool = False,\n    justify: typing.Literal[\"left\", \"center\", \"right\"] = \"left\",\n    default: int | None = None,\n    command: collections.abc.Callable[[int | None], typing.Any] | None = None,\n    image: tuple[enhanced.PhotoImage | None, ...] = (),\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    align: typing.Literal[\"up\", \"down\"] = \"down\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>An input box that can provide several options</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>size</code>: size of the widget</li> <li><code>text</code>: text of the widget</li> <li><code>family</code>: font family</li> <li><code>fontsize</code>: font size</li> <li><code>weight</code>: weight of the text</li> <li><code>slant</code>: slant of the text</li> <li><code>underline</code>: whether the text is underline</li> <li><code>overstrike</code>: whether the text is overstrike</li> <li><code>justify</code>: justify mode of the text</li> <li><code>default</code>: default value of the widget</li> <li><code>command</code>: a function that is triggered when the button is pressed</li> <li><code>image</code>: image of the widget</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>align</code>: align of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the index of the child toggle button with a value of True. If not, None is</p> </li> <li> <code>set</code>             \u2013              <p>Activate the child toggle button for the specified index</p> </li> </ul>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.ComboBox.get","title":"get","text":"<pre><code>get() -&gt; int | None\n</code></pre> <p>Get the index of the child toggle button with a value of True. If not, None is returned.</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.ComboBox.set","title":"set","text":"<pre><code>set(value: int | None, *, callback: bool = False) -&gt; None\n</code></pre> <p>Activate the child toggle button for the specified index</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.Spinner","title":"Spinner","text":"<pre><code>Spinner(\n    master: containers.Canvas | virtual.Widget,\n    position: tuple[int, int],\n    size: tuple[int, int] = (30, 30),\n    *,\n    default: float | None = None,\n    command: collections.abc.Callable[[float], typing.Any] | None = None,\n    widths: tuple[int, int] | None = None,\n    mode: typing.Literal[\"determinate\", \"indeterminate\"] = \"determinate\",\n    anchor: typing.Literal[\"n\", \"e\", \"w\", \"s\", \"nw\", \"ne\", \"sw\", \"se\", \"center\"] = \"nw\",\n    capture_events: bool | None = None,\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>Spinners visually communicate that something is processing</p> <ul> <li><code>master</code>: parent canvas</li> <li><code>position</code>: position of the widget</li> <li><code>size</code>: size of the widget</li> <li><code>default</code>: default value of the widget</li> <li><code>command</code>: a function that is triggered when the progress of progress bar is 100%</li> <li><code>widths</code>: width of the outside ring and inside ring</li> <li><code>mode</code>: mode of the Spinner</li> <li><code>anchor</code>: anchor of the widget</li> <li><code>capture_events</code>: wether detect another widget under the widget</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the progress of the Spinner</p> </li> <li> <code>set</code>             \u2013              <p>Set the progress of the Spinner</p> </li> <li> <code>destroy</code>             \u2013              <p>Destroy the widget</p> </li> </ul>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.Spinner.get","title":"get","text":"<pre><code>get() -&gt; float\n</code></pre> <p>Get the progress of the Spinner</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.Spinner.set","title":"set","text":"<pre><code>set(value: float, *, callback: bool = False) -&gt; None\n</code></pre> <p>Set the progress of the Spinner</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.Spinner.destroy","title":"destroy","text":"<pre><code>destroy() -&gt; None\n</code></pre> <p>Destroy the widget</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.Tooltip","title":"Tooltip","text":"<pre><code>Tooltip(\n    widget: virtual.Widget,\n    size: tuple[int, int] | None = None,\n    *,\n    text: str = \"\",\n    align: typing.Literal[\"up\", \"down\", \"right\", \"left\", \"center\"] = \"down\",\n    padding: int = 3,\n    family: str | None = None,\n    fontsize: int | None = None,\n    weight: typing.Literal[\"normal\", \"bold\"] = \"normal\",\n    slant: typing.Literal[\"roman\", \"italic\"] = \"roman\",\n    underline: bool = False,\n    overstrike: bool = False,\n    justify: typing.Literal[\"left\", \"center\", \"right\"] = \"left\",\n    gradient_animation: bool | None = None,\n    auto_update: bool | None = None,\n    style: type[virtual.Style] | None = None,\n)\n</code></pre> <p>               Bases: <code>virtual.Widget</code></p> <p>A tooltip that can display additional information</p> <ul> <li><code>widget</code>: the associated widget</li> <li><code>size</code>: size of the widget</li> <li><code>text</code>: text of the widget</li> <li><code>align</code>: align mode of the tooltip</li> <li><code>padding</code>: extra padding between tooltip and the associated widget</li> <li><code>family</code>: font family</li> <li><code>fontsize</code>: font size</li> <li><code>weight</code>: weight of the text</li> <li><code>slant</code>: slant of the text</li> <li><code>underline</code>: whether the text is underline</li> <li><code>overstrike</code>: whether the text is overstrike</li> <li><code>justify</code>: justify mode of the text</li> <li><code>gradient_animation</code>: wether enable gradient_animation</li> <li><code>auto_update</code>: whether the theme manager update it automatically</li> <li><code>style</code>: style of the widget</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the text of the widget</p> </li> <li> <code>set</code>             \u2013              <p>Set the text of the widget</p> </li> </ul>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.Tooltip.get","title":"get","text":"<pre><code>get() -&gt; str\n</code></pre> <p>Get the text of the widget</p>"},{"location":"documents/standard/widgets/#maliang.standard.widgets.Tooltip.set","title":"set","text":"<pre><code>set(text: str) -&gt; None\n</code></pre> <p>Set the text of the widget</p>"},{"location":"documents/theme/","title":"maliang.theme","text":"<p> \u5b57\u6570 11 \u4e2a \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p> \u6e90\u4ee3\u7801\uff1a<code>maliang/theme/__init__.py</code></p> <p>A subpackage that provides theme-related features.</p> <p>Listen to the system\u2019s theme and respond accordingly, modify the style of the window, and more.</p> <p>\u6a21\u5757\uff1a</p> <ul> <li> <code>manager</code>           \u2013            <p>Support for theme</p> </li> </ul> <p>\u51fd\u6570\uff1a</p> <ul> <li> <code>set_color_mode</code>             \u2013              <p>Set the color mode of the program</p> </li> <li> <code>get_color_mode</code>             \u2013              <p>Get the color mode of the program.</p> </li> <li> <code>register_event</code>             \u2013              <p>When the system accent color changes, the registered function will be</p> </li> <li> <code>remove_event</code>             \u2013              <p>Remove a registered function.</p> </li> <li> <code>apply_file_dnd</code>             \u2013              <p>Apply file drag and drop in a widget.</p> </li> <li> <code>apply_theme</code>             \u2013              <p>Apply some Windows themes to the window.</p> </li> <li> <code>customize_window</code>             \u2013              <p>Customize the relevant properties of the window</p> </li> </ul>"},{"location":"documents/theme/#maliang.theme.set_color_mode","title":"set_color_mode","text":"<pre><code>set_color_mode(mode: typing.Literal['system', 'dark', 'light'] = 'system') -&gt; None\n</code></pre> <p>Set the color mode of the program</p> <ul> <li><code>mode</code>: it can be <code>\"light\"</code>, <code>\"dark\"</code>, and <code>\"system\"</code></li> </ul> <p>TIP:</p> <p><code>\"system\"</code> is the following system</p>"},{"location":"documents/theme/#maliang.theme.get_color_mode","title":"get_color_mode","text":"<pre><code>get_color_mode() -&gt; typing.Literal['dark', 'light']\n</code></pre> <p>Get the color mode of the program.</p>"},{"location":"documents/theme/#maliang.theme.register_event","title":"register_event","text":"<pre><code>register_event(func: collections.abc.Callable[..., typing.Any], *args: typing.Any) -&gt; None\n</code></pre> <p>When the system accent color changes, the registered function will be called, and the parameter is a boolean value indicating whether it is currently a dark theme.</p> <ul> <li><code>func</code>: callback function</li> <li><code>args</code>: extra arguments</li> </ul>"},{"location":"documents/theme/#maliang.theme.remove_event","title":"remove_event","text":"<pre><code>remove_event(func: collections.abc.Callable[..., typing.Any]) -&gt; None\n</code></pre> <p>Remove a registered function.</p> <ul> <li><code>func</code>: callback function</li> </ul>"},{"location":"documents/theme/#maliang.theme.apply_file_dnd","title":"apply_file_dnd","text":"<pre><code>apply_file_dnd(window: tkinter.Tk, *, command: collections.abc.Callable[[str], typing.Any]) -&gt; None\n</code></pre> <p>Apply file drag and drop in a widget.</p> <ul> <li><code>window</code>: the window which being customized</li> <li><code>command</code>: callback function, accept a parameter that represents the path of the file</li> </ul> <p>This function is only works on Windows OS!</p>"},{"location":"documents/theme/#maliang.theme.apply_theme","title":"apply_theme","text":"<pre><code>apply_theme(\n    window: tkinter.Tk,\n    *,\n    theme: typing.Literal[\n        \"mica\",\n        \"acrylic\",\n        \"acrylic2\",\n        \"aero\",\n        \"transparent\",\n        \"optimised\",\n        \"win7\",\n        \"inverse\",\n        \"native\",\n        \"popup\",\n        \"dark\",\n        \"normal\",\n    ],\n) -&gt; None\n</code></pre> <p>Apply some Windows themes to the window.</p> <ul> <li><code>window</code>: the window which being customized</li> <li><code>theme</code>: different themes for windows</li> </ul> <p>This function is only works on Windows OS! And some parameters are useless on Windows 7/10!</p>"},{"location":"documents/theme/#maliang.theme.customize_window","title":"customize_window","text":"<pre><code>customize_window(\n    window: tkinter.Tk,\n    *,\n    border_color: str | None = None,\n    header_color: str | None = None,\n    title_color: str | None = None,\n    hide_title_bar: bool | None = None,\n    hide_button: typing.Literal[\"all\", \"maxmin\", \"none\"] | None = None,\n    disable_minimize_button: bool | None = None,\n    disable_maximize_button: bool | None = None,\n    border_type: typing.Literal[\"rectangular\", \"smallround\", \"round\"] | None = None,\n) -&gt; None\n</code></pre> <p>Customize the relevant properties of the window</p> <ul> <li><code>window</code>: the window which being customized</li> <li><code>border_color</code>: border color of the window</li> <li><code>header_color</code>: header color of the window</li> <li><code>title_color</code>: title color of the window</li> <li><code>hide_title_bar</code>: Wether hide the whole title bar</li> <li><code>hide_button</code>: Wether hide part of buttons on title bar</li> <li><code>disable_minimize_button</code>: Wether disable minimize button</li> <li><code>disable_maximize_button</code>: Wether disable maximize button</li> <li><code>border_type</code>: border type of the window</li> </ul> <p>This function is only works on Windows OS! And some parameters are useless on Windows 7/10!</p>"},{"location":"documents/theme/manager/","title":"maliang.theme.manager","text":"<p> \u5b57\u6570 9 \u4e2a \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p> \u6e90\u4ee3\u7801\uff1a<code>maliang/theme/manager.py</code></p> <p>Support for theme</p> <ul> <li>darkdetect: albertosottile/darkdetect</li> <li>pywinstyles: Akascape/py-window-styles</li> <li>win32material: littlewhitecloud/win32material</li> <li>hPyT: Zingzy/hPyT</li> </ul> <p>\u51fd\u6570\uff1a</p> <ul> <li> <code>set_color_mode</code>             \u2013              <p>Set the color mode of the program</p> </li> <li> <code>get_color_mode</code>             \u2013              <p>Get the color mode of the program.</p> </li> <li> <code>register_event</code>             \u2013              <p>When the system accent color changes, the registered function will be</p> </li> <li> <code>remove_event</code>             \u2013              <p>Remove a registered function.</p> </li> <li> <code>apply_file_dnd</code>             \u2013              <p>Apply file drag and drop in a widget.</p> </li> <li> <code>apply_theme</code>             \u2013              <p>Apply some Windows themes to the window.</p> </li> <li> <code>customize_window</code>             \u2013              <p>Customize the relevant properties of the window</p> </li> </ul>"},{"location":"documents/theme/manager/#maliang.theme.manager.set_color_mode","title":"set_color_mode","text":"<pre><code>set_color_mode(mode: typing.Literal['system', 'dark', 'light'] = 'system') -&gt; None\n</code></pre> <p>Set the color mode of the program</p> <ul> <li><code>mode</code>: it can be <code>\"light\"</code>, <code>\"dark\"</code>, and <code>\"system\"</code></li> </ul> <p>TIP:</p> <p><code>\"system\"</code> is the following system</p>"},{"location":"documents/theme/manager/#maliang.theme.manager.get_color_mode","title":"get_color_mode","text":"<pre><code>get_color_mode() -&gt; typing.Literal['dark', 'light']\n</code></pre> <p>Get the color mode of the program.</p>"},{"location":"documents/theme/manager/#maliang.theme.manager.register_event","title":"register_event","text":"<pre><code>register_event(func: collections.abc.Callable[..., typing.Any], *args: typing.Any) -&gt; None\n</code></pre> <p>When the system accent color changes, the registered function will be called, and the parameter is a boolean value indicating whether it is currently a dark theme.</p> <ul> <li><code>func</code>: callback function</li> <li><code>args</code>: extra arguments</li> </ul>"},{"location":"documents/theme/manager/#maliang.theme.manager.remove_event","title":"remove_event","text":"<pre><code>remove_event(func: collections.abc.Callable[..., typing.Any]) -&gt; None\n</code></pre> <p>Remove a registered function.</p> <ul> <li><code>func</code>: callback function</li> </ul>"},{"location":"documents/theme/manager/#maliang.theme.manager.apply_file_dnd","title":"apply_file_dnd","text":"<pre><code>apply_file_dnd(window: tkinter.Tk, *, command: collections.abc.Callable[[str], typing.Any]) -&gt; None\n</code></pre> <p>Apply file drag and drop in a widget.</p> <ul> <li><code>window</code>: the window which being customized</li> <li><code>command</code>: callback function, accept a parameter that represents the path of the file</li> </ul> <p>This function is only works on Windows OS!</p>"},{"location":"documents/theme/manager/#maliang.theme.manager.apply_theme","title":"apply_theme","text":"<pre><code>apply_theme(\n    window: tkinter.Tk,\n    *,\n    theme: typing.Literal[\n        \"mica\",\n        \"acrylic\",\n        \"acrylic2\",\n        \"aero\",\n        \"transparent\",\n        \"optimised\",\n        \"win7\",\n        \"inverse\",\n        \"native\",\n        \"popup\",\n        \"dark\",\n        \"normal\",\n    ],\n) -&gt; None\n</code></pre> <p>Apply some Windows themes to the window.</p> <ul> <li><code>window</code>: the window which being customized</li> <li><code>theme</code>: different themes for windows</li> </ul> <p>This function is only works on Windows OS! And some parameters are useless on Windows 7/10!</p>"},{"location":"documents/theme/manager/#maliang.theme.manager.customize_window","title":"customize_window","text":"<pre><code>customize_window(\n    window: tkinter.Tk,\n    *,\n    border_color: str | None = None,\n    header_color: str | None = None,\n    title_color: str | None = None,\n    hide_title_bar: bool | None = None,\n    hide_button: typing.Literal[\"all\", \"maxmin\", \"none\"] | None = None,\n    disable_minimize_button: bool | None = None,\n    disable_maximize_button: bool | None = None,\n    border_type: typing.Literal[\"rectangular\", \"smallround\", \"round\"] | None = None,\n) -&gt; None\n</code></pre> <p>Customize the relevant properties of the window</p> <ul> <li><code>window</code>: the window which being customized</li> <li><code>border_color</code>: border color of the window</li> <li><code>header_color</code>: header color of the window</li> <li><code>title_color</code>: title color of the window</li> <li><code>hide_title_bar</code>: Wether hide the whole title bar</li> <li><code>hide_button</code>: Wether hide part of buttons on title bar</li> <li><code>disable_minimize_button</code>: Wether disable minimize button</li> <li><code>disable_maximize_button</code>: Wether disable maximize button</li> <li><code>border_type</code>: border type of the window</li> </ul> <p>This function is only works on Windows OS! And some parameters are useless on Windows 7/10!</p>"},{"location":"documents/three/","title":"maliang.three","text":"<p> \u5b57\u6570 11 \u4e2a \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p> \u6e90\u4ee3\u7801\uff1a<code>maliang/three/__init__.py</code></p> <p>Extension package of maliang for simple 3D drawings</p> <p>Provides:</p> <ul> <li>Pure 3D implementation with no third-party packages</li> <li>Simple 3D drawing and manipulation</li> <li>Themed 3D drawings</li> </ul> <p>\u6a21\u5757\uff1a</p> <ul> <li> <code>engine</code>           \u2013            <p>Core codes of 3D</p> </li> <li> <code>geometries</code>           \u2013            <p>Standard Geometries</p> </li> </ul> <p>\u7c7b\uff1a</p> <ul> <li> <code>Canvas</code>           \u2013            <p>Base class of 3D Canvas</p> </li> <li> <code>Space</code>           \u2013            <p>A canvas where you can view 3D objects</p> </li> <li> <code>Component</code>           \u2013            <p>3D \u5bf9\u8c61\u57fa\u7c7b</p> </li> <li> <code>Point</code>           \u2013            <p>\u70b9</p> </li> <li> <code>Line</code>           \u2013            <p>\u7ebf</p> </li> <li> <code>Plane</code>           \u2013            <p>\u9762</p> </li> <li> <code>Text3D</code>           \u2013            <p>\u4e09\u7ef4\u6587\u672c</p> </li> <li> <code>Geometry</code>           \u2013            <p>\u51e0\u4f55\u4f53</p> </li> <li> <code>Cuboid</code>           \u2013            <p>Cuboid</p> </li> <li> <code>Tetrahedron</code>           \u2013            <p>Tetrahedron</p> </li> </ul> <p>\u51fd\u6570\uff1a</p> <ul> <li> <code>translate</code>             \u2013              <p>\u5c06\u4e00\u4e2a\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u70b9\u8fdb\u884c\u5e73\u79fb</p> </li> <li> <code>rotate</code>             \u2013              <p>\u5c06\u4e00\u4e2a\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u70b9\u4ee5\u4e00\u4e2a\u70b9\u6216\u7ebf\u4e3a\u53c2\u7167\u8fdb\u884c\u65cb\u8f6c\uff08\u5b9e\u73b0\u65b9\u5f0f\u4e3a\u6b27\u62c9\u89d2\uff09</p> </li> <li> <code>scale</code>             \u2013              <p>\u5c06\u4e00\u4e2a\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u70b9\u4ee5\u53e6\u4e00\u4e2a\u70b9\u4e3a\u7f29\u653e\u4e2d\u5fc3\u8fdb\u884c\u7f29\u653e</p> </li> <li> <code>project</code>             \u2013              <p>\u5c06\u4e00\u4e2a\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u70b9\u6295\u5f71\u5230\u6307\u5b9a\u8ddd\u79bb\u7684\u6b63\u5411\u5e73\u9762\u4e0a\uff0c\u5e76\u8fd4\u56de\u5728\u8be5\u5e73\u9762\u4e0a\u7684\u5750\u6807</p> </li> </ul>"},{"location":"documents/three/#maliang.three.Canvas","title":"Canvas","text":"<pre><code>Canvas(\n    master: containers.Tk | containers.Toplevel | containers.Canvas | None = None,\n    *,\n    expand: typing.Literal[\"\", \"x\", \"y\", \"xy\"] = \"xy\",\n    auto_zoom: bool = False,\n    keep_ratio: typing.Literal[\"min\", \"max\"] | None = None,\n    free_anchor: bool = False,\n    **kwargs,\n)\n</code></pre> <p>               Bases: <code>containers.Canvas</code></p> <p>Base class of 3D Canvas</p> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>space_sort</code>             \u2013              <p>Sort the contextual relationship between the spatial positions of the components</p> </li> </ul> <p>\u5c5e\u6027\uff1a</p> <ul> <li> <code>components</code>               (<code>tuple[Component, ...]</code>)           \u2013            <p>Return all <code>Component</code> of this Canvas</p> </li> <li> <code>geometries</code>               (<code>tuple[Geometry, ...]</code>)           \u2013            <p>Return all <code>Geometry</code> of this Canvas</p> </li> </ul>"},{"location":"documents/three/#maliang.three.Canvas.components","title":"components  <code>property</code>","text":"<pre><code>components: tuple[Component, ...]\n</code></pre> <p>Return all <code>Component</code> of this Canvas</p>"},{"location":"documents/three/#maliang.three.Canvas.geometries","title":"geometries  <code>property</code>","text":"<pre><code>geometries: tuple[Geometry, ...]\n</code></pre> <p>Return all <code>Geometry</code> of this Canvas</p>"},{"location":"documents/three/#maliang.three.Canvas.space_sort","title":"space_sort","text":"<pre><code>space_sort() -&gt; None\n</code></pre> <p>Sort the contextual relationship between the spatial positions of the components</p>"},{"location":"documents/three/#maliang.three.Space","title":"Space","text":"<pre><code>Space(\n    master: containers.Tk | containers.Toplevel | containers.Canvas | None = None,\n    *,\n    expand: typing.Literal[\"\", \"x\", \"y\", \"xy\"] = \"xy\",\n    auto_zoom: bool = False,\n    keep_ratio: typing.Literal[\"min\", \"max\"] | None = None,\n    free_anchor: bool = False,\n    **kwargs,\n)\n</code></pre> <p>               Bases: <code>Canvas</code></p> <p>A canvas where you can view 3D objects</p>"},{"location":"documents/three/#maliang.three.Component","title":"Component","text":"<pre><code>Component(*coordinates)\n</code></pre> <p>3D \u5bf9\u8c61\u57fa\u7c7b</p> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>translate</code>             \u2013              <p>\u5e73\u79fb\u5bf9\u8c61\u672c\u8eab</p> </li> <li> <code>rotate</code>             \u2013              <p>\u65cb\u8f6c\u5bf9\u8c61\u672c\u8eab</p> </li> <li> <code>scale</code>             \u2013              <p>\u7f29\u653e\u5bf9\u8c61\u672c\u8eab</p> </li> <li> <code>center</code>             \u2013              <p>\u51e0\u4f55\u4e2d\u5fc3</p> </li> <li> <code>update</code>             \u2013              <p>Update</p> </li> </ul>"},{"location":"documents/three/#maliang.three.Component.translate","title":"translate","text":"<pre><code>translate(dx=0, dy=0, dz=0)\n</code></pre> <p>\u5e73\u79fb\u5bf9\u8c61\u672c\u8eab</p> <ul> <li><code>dx</code>: x \u65b9\u5411\u4f4d\u79fb\u957f\u5ea6</li> <li><code>dy</code>: y \u65b9\u5411\u4f4d\u79fb\u957f\u5ea6</li> <li><code>dz</code>: z \u65b9\u5411\u4f4d\u79fb\u957f\u5ea6</li> </ul>"},{"location":"documents/three/#maliang.three.Component.rotate","title":"rotate","text":"<pre><code>rotate(dx=0, dy=0, dz=0, *, center=(0, 0, 0))\n</code></pre><pre><code>rotate(dx=0, *, axis)\n</code></pre> <pre><code>rotate(dx=0, dy=0, dz=0, *, center=(0, 0, 0), axis=None)\n</code></pre> <p>\u65cb\u8f6c\u5bf9\u8c61\u672c\u8eab</p> <ul> <li><code>dx</code>: x \u65b9\u5411\u9006\u65f6\u9488\u65cb\u8f6c\u5f27\u5ea6\uff0c\u6216\u8005\u7ed5\u65cb\u8f6c\u8f74\u7ebf\u7684\u65cb\u8f6c\u5f27\u5ea6</li> <li><code>dy</code>: y \u65b9\u5411\u9006\u65f6\u9488\u65cb\u8f6c\u5f27\u5ea6</li> <li><code>dz</code>: z \u65b9\u5411\u9006\u65f6\u9488\u65cb\u8f6c\u5f27\u5ea6</li> <li><code>center</code>: \u65cb\u8f6c\u4e2d\u5fc3\uff0c\u9ed8\u8ba4\u4e3a\u539f\u70b9</li> <li><code>axis</code>: \u65cb\u8f6c\u8f74\u7ebf\uff0c\u65e0\u9ed8\u8ba4\u503c</li> </ul>"},{"location":"documents/three/#maliang.three.Component.scale","title":"scale","text":"<pre><code>scale(kx=1, ky=1, kz=1, *, center=None)\n</code></pre> <p>\u7f29\u653e\u5bf9\u8c61\u672c\u8eab</p> <ul> <li><code>kx</code>: x \u65b9\u5411\u7f29\u653e\u6bd4\u4f8b</li> <li><code>ky</code>: y \u65b9\u5411\u7f29\u653e\u6bd4\u4f8b</li> <li><code>kz</code>: z \u65b9\u5411\u7f29\u653e\u6bd4\u4f8b</li> <li><code>center</code>: \u7f29\u653e\u4e2d\u5fc3\uff0c\u9ed8\u8ba4\u4e3a\u51e0\u4f55\u4e2d\u5fc3</li> </ul>"},{"location":"documents/three/#maliang.three.Component.center","title":"center","text":"<pre><code>center()\n</code></pre> <p>\u51e0\u4f55\u4e2d\u5fc3</p>"},{"location":"documents/three/#maliang.three.Component.update","title":"update","text":"<pre><code>update() -&gt; None\n</code></pre> <p>Update</p>"},{"location":"documents/three/#maliang.three.Point","title":"Point","text":"<pre><code>Point(\n    canvas,\n    coords,\n    *,\n    size=1,\n    width=1,\n    fill=\"#000000\",\n    outline=\"#000000\",\n    markuptext=\"\",\n    markupdelta=(0, 0),\n    markupfont=(configs.Font.family, configs.Font.size),\n    markupfill=\"#000000\",\n    markupjustify=\"center\",\n)\n</code></pre> <p>               Bases: <code>Component</code></p> <p>\u70b9</p> <ul> <li><code>canvas</code>: \u7236\u753b\u5e03</li> <li><code>coords</code>: \u70b9\u7684\u7a7a\u95f4\u5750\u6807</li> <li><code>size</code>: \u70b9\u7684\u5927\u5c0f</li> <li><code>width</code>: \u70b9\u8f6e\u5ed3\u7684\u5bbd\u5ea6</li> <li><code>fill</code>: \u70b9\u5185\u90e8\u7684\u586b\u5145\u989c\u8272</li> <li><code>outline</code>: \u70b9\u8f6e\u5ed3\u7684\u989c\u8272</li> <li><code>markuptext</code>: \u6807\u8bb0\u6587\u672c</li> <li><code>markupdelta</code>: \u6807\u8bb0\u6587\u672c\u663e\u793a\u4f4d\u7f6e\u7684\u504f\u79fb\u91cf</li> <li><code>markupfont</code>: \u6807\u8bb0\u6587\u672c\u5b57\u4f53</li> <li><code>markupfill</code>: \u6807\u8bb0\u6587\u672c\u989c\u8272</li> <li><code>markupjustify</code>: \u6807\u8bb0\u6587\u672c\u591a\u884c\u5bf9\u9f50\u65b9\u5f0f</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>update</code>             \u2013              <p>\u66f4\u65b0\u5bf9\u8c61\u7684\u663e\u793a</p> </li> </ul>"},{"location":"documents/three/#maliang.three.Point.update","title":"update","text":"<pre><code>update()\n</code></pre> <p>\u66f4\u65b0\u5bf9\u8c61\u7684\u663e\u793a</p>"},{"location":"documents/three/#maliang.three.Line","title":"Line","text":"<pre><code>Line(canvas, point_start, point_end, *, width=1, fill='#000000')\n</code></pre> <p>               Bases: <code>Component</code></p> <p>\u7ebf</p> <ul> <li><code>canvas</code>: \u7236\u753b\u5e03</li> <li><code>point_start</code>: \u8d77\u70b9\u5750\u6807</li> <li><code>point_end</code>: \u7ec8\u70b9\u5750\u6807</li> <li><code>width</code>: \u7ebf\u7684\u5bbd\u5ea6</li> <li><code>fill</code>: \u7ebf\u7684\u989c\u8272</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>update</code>             \u2013              <p>\u66f4\u65b0\u5bf9\u8c61\u7684\u663e\u793a</p> </li> </ul>"},{"location":"documents/three/#maliang.three.Line.update","title":"update","text":"<pre><code>update()\n</code></pre> <p>\u66f4\u65b0\u5bf9\u8c61\u7684\u663e\u793a</p>"},{"location":"documents/three/#maliang.three.Plane","title":"Plane","text":"<pre><code>Plane(canvas, *points, width=1, fill='', outline='#000000')\n</code></pre> <p>               Bases: <code>Component</code></p> <p>\u9762</p> <ul> <li><code>canvas</code>: \u7236\u753b\u5e03</li> <li><code>points</code>: \u5404\u70b9\u7684\u7a7a\u95f4\u5750\u6807</li> <li><code>width</code>: \u9762\u8f6e\u5ed3\u7684\u5bbd\u5ea6</li> <li><code>fill</code>: \u9762\u5185\u90e8\u7684\u586b\u5145\u989c\u8272</li> <li><code>outline</code>: \u9762\u8f6e\u5ed3\u7684\u989c\u8272</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>update</code>             \u2013              <p>\u66f4\u65b0\u5bf9\u8c61\u7684\u663e\u793a</p> </li> </ul>"},{"location":"documents/three/#maliang.three.Plane.update","title":"update","text":"<pre><code>update()\n</code></pre> <p>\u66f4\u65b0\u5bf9\u8c61\u7684\u663e\u793a</p>"},{"location":"documents/three/#maliang.three.Text3D","title":"Text3D","text":"<pre><code>Text3D(\n    canvas,\n    coords,\n    text=\"\",\n    *,\n    font=(configs.Font.family, configs.Font.size),\n    justify=\"center\",\n    fill=\"#000000\",\n)\n</code></pre> <p>               Bases: <code>Component</code></p> <p>\u4e09\u7ef4\u6587\u672c</p> <ul> <li><code>canvas</code>: \u7236\u753b\u5e03</li> <li><code>coords</code>: \u70b9\u7684\u7a7a\u95f4\u5750\u6807</li> <li><code>text</code>: \u663e\u793a\u7684\u6587\u672c</li> <li><code>size</code>: \u70b9\u7684\u5927\u5c0f</li> <li><code>font</code>: \u70b9\u8f6e\u5ed3\u7684\u5bbd\u5ea6</li> <li><code>justify</code>: \u591a\u884c\u6587\u672c\u5bf9\u9f50\u65b9\u5f0f</li> <li><code>fill</code>: \u70b9\u5185\u90e8\u7684\u586b\u5145\u989c\u8272</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>update</code>             \u2013              <p>\u66f4\u65b0\u5bf9\u8c61\u7684\u663e\u793a</p> </li> </ul>"},{"location":"documents/three/#maliang.three.Text3D.update","title":"update","text":"<pre><code>update()\n</code></pre> <p>\u66f4\u65b0\u5bf9\u8c61\u7684\u663e\u793a</p>"},{"location":"documents/three/#maliang.three.Geometry","title":"Geometry","text":"<pre><code>Geometry(canvas, *sides)\n</code></pre> <p>\u51e0\u4f55\u4f53</p> <ul> <li><code>canvas</code>: \u7236\u753b\u5e03</li> <li><code>sides</code>: \u7ec4\u6210\u51e0\u4f55\u4f53\u7684\u9762</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>translate</code>             \u2013              <p>\u5e73\u79fb\u51e0\u4f55\u4f53\u4e2d\u7684\u6240\u6709 3D \u5bf9\u8c61</p> </li> <li> <code>rotate</code>             \u2013              <p>\u65cb\u8f6c\u51e0\u4f55\u4f53\u4e2d\u7684\u6240\u6709 3D \u5bf9\u8c61</p> </li> <li> <code>scale</code>             \u2013              <p>\u7f29\u653e\u51e0\u4f55\u4f53\u4e2d\u7684\u6240\u6709 3D \u5bf9\u8c61</p> </li> <li> <code>center</code>             \u2013              <p>\u51e0\u4f55\u4e2d\u5fc3</p> </li> <li> <code>update</code>             \u2013              <p>\u66f4\u65b0\u51e0\u4f55\u4f53</p> </li> <li> <code>append</code>             \u2013              <p>\u7ed9\u51e0\u4f55\u4f53\u6dfb\u52a0\u66f4\u591a\u65b0\u7684\u9762</p> </li> </ul>"},{"location":"documents/three/#maliang.three.Geometry.translate","title":"translate","text":"<pre><code>translate(dx=0, dy=0, dz=0)\n</code></pre> <p>\u5e73\u79fb\u51e0\u4f55\u4f53\u4e2d\u7684\u6240\u6709 3D \u5bf9\u8c61</p> <ul> <li><code>dx</code>: x \u65b9\u5411\u4f4d\u79fb\u957f\u5ea6</li> <li><code>dy</code>: y \u65b9\u5411\u4f4d\u79fb\u957f\u5ea6</li> <li><code>dz</code>: z \u65b9\u5411\u4f4d\u79fb\u957f\u5ea6</li> </ul>"},{"location":"documents/three/#maliang.three.Geometry.rotate","title":"rotate","text":"<pre><code>rotate(dx=0, dy=0, dz=0, *, center=(0, 0, 0))\n</code></pre><pre><code>rotate(dx=0, *, axis)\n</code></pre> <pre><code>rotate(dx=0, dy=0, dz=0, *, center=(0, 0, 0), axis=None)\n</code></pre> <p>\u65cb\u8f6c\u51e0\u4f55\u4f53\u4e2d\u7684\u6240\u6709 3D \u5bf9\u8c61</p> <ul> <li><code>dx</code>: x \u65b9\u5411\u9006\u65f6\u9488\u65cb\u8f6c\u5f27\u5ea6\uff0c\u6216\u8005\u7ed5\u65cb\u8f6c\u8f74\u7ebf\u7684\u65cb\u8f6c\u5f27\u5ea6</li> <li><code>dy</code>: y \u65b9\u5411\u9006\u65f6\u9488\u65cb\u8f6c\u5f27\u5ea6</li> <li><code>dz</code>: z \u65b9\u5411\u9006\u65f6\u9488\u65cb\u8f6c\u5f27\u5ea6</li> <li><code>center</code>: \u65cb\u8f6c\u4e2d\u5fc3\uff0c\u9ed8\u8ba4\u4e3a\u539f\u70b9</li> <li><code>axis</code>: \u65cb\u8f6c\u8f74\u7ebf\uff0c\u65e0\u9ed8\u8ba4\u503c</li> </ul>"},{"location":"documents/three/#maliang.three.Geometry.scale","title":"scale","text":"<pre><code>scale(kx=1, ky=1, kz=1, *, center=None)\n</code></pre> <p>\u7f29\u653e\u51e0\u4f55\u4f53\u4e2d\u7684\u6240\u6709 3D \u5bf9\u8c61</p> <ul> <li><code>kx</code>: x \u65b9\u5411\u7f29\u653e\u6bd4\u4f8b</li> <li><code>ky</code>: y \u65b9\u5411\u7f29\u653e\u6bd4\u4f8b</li> <li><code>kz</code>: z \u65b9\u5411\u7f29\u653e\u6bd4\u4f8b</li> <li><code>center</code>: \u7f29\u653e\u4e2d\u5fc3\uff0c\u9ed8\u8ba4\u4e3a\u51e0\u4f55\u4e2d\u5fc3</li> </ul>"},{"location":"documents/three/#maliang.three.Geometry.center","title":"center","text":"<pre><code>center()\n</code></pre> <p>\u51e0\u4f55\u4e2d\u5fc3</p>"},{"location":"documents/three/#maliang.three.Geometry.update","title":"update","text":"<pre><code>update()\n</code></pre> <p>\u66f4\u65b0\u51e0\u4f55\u4f53</p>"},{"location":"documents/three/#maliang.three.Geometry.append","title":"append","text":"<pre><code>append(*sides)\n</code></pre> <p>\u7ed9\u51e0\u4f55\u4f53\u6dfb\u52a0\u66f4\u591a\u65b0\u7684\u9762</p> <ul> <li><code>sides</code>: <code>Side</code> \u7c7b</li> </ul>"},{"location":"documents/three/#maliang.three.Cuboid","title":"Cuboid","text":"<pre><code>Cuboid(\n    canvas: engine.Canvas | engine.Space,\n    x: float,\n    y: float,\n    z: float,\n    length: float,\n    width: float,\n    height: float,\n    *,\n    boardwidth: int = 1,\n    color_fill_up: str = \"\",\n    color_fill_down: str = \"\",\n    color_fill_left: str = \"\",\n    color_fill_right: str = \"\",\n    color_fill_front: str = \"\",\n    color_fill_back: str = \"\",\n    color_outline_up: str = \"#000000\",\n    color_outline_down: str = \"#000000\",\n    color_outline_left: str = \"#000000\",\n    color_outline_right: str = \"#000000\",\n    color_outline_front: str = \"#000000\",\n    color_outline_back: str = \"#000000\",\n)\n</code></pre> <p>               Bases: <code>engine.Geometry</code></p> <p>Cuboid</p>"},{"location":"documents/three/#maliang.three.Tetrahedron","title":"Tetrahedron","text":"<pre><code>Tetrahedron(\n    canvas: engine.Canvas | engine.Space,\n    point_1: tuple[float, float, float],\n    point_2: tuple[float, float, float],\n    point_3: tuple[float, float, float],\n    point_4: tuple[float, float, float],\n    *,\n    boardwidth: int = 1,\n    color_fill: tuple[str, str, str, str] = (\"\", \"\", \"\", \"\"),\n    color_outline: tuple[str, str, str, str] = (\"#000000\", \"#000000\", \"#000000\", \"#000000\"),\n)\n</code></pre> <p>               Bases: <code>engine.Geometry</code></p> <p>Tetrahedron</p>"},{"location":"documents/three/#maliang.three.translate","title":"translate","text":"<pre><code>translate(\n    coordinate: tuple[float, float, float], dx: float = 0, dy: float = 0, dz: float = 0\n) -&gt; None\n</code></pre> <p>\u5c06\u4e00\u4e2a\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u70b9\u8fdb\u884c\u5e73\u79fb</p> <ul> <li><code>coordinate</code>: \u70b9\u7684\u7a7a\u95f4\u5750\u6807</li> <li><code>dx</code>: x \u65b9\u5411\u4f4d\u79fb\u957f\u5ea6</li> <li><code>dy</code>: y \u65b9\u5411\u4f4d\u79fb\u957f\u5ea6</li> <li><code>dz</code>: z \u65b9\u5411\u4f4d\u79fb\u957f\u5ea6</li> </ul>"},{"location":"documents/three/#maliang.three.rotate","title":"rotate","text":"<pre><code>rotate(coordinate, dx=0, dy=0, dz=0, *, center)\n</code></pre><pre><code>rotate(coordinate, dx=0, *, axis)\n</code></pre> <pre><code>rotate(coordinate, dx=0, dy=0, dz=0, *, center, axis=None)\n</code></pre> <p>\u5c06\u4e00\u4e2a\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u70b9\u4ee5\u4e00\u4e2a\u70b9\u6216\u7ebf\u4e3a\u53c2\u7167\u8fdb\u884c\u65cb\u8f6c\uff08\u5b9e\u73b0\u65b9\u5f0f\u4e3a\u6b27\u62c9\u89d2\uff09</p> <ul> <li><code>coordinate</code>: \u70b9\u7684\u7a7a\u95f4\u5750\u6807</li> <li><code>dx</code>: x \u65b9\u5411\u9006\u65f6\u9488\u65cb\u8f6c\u5f27\u5ea6\uff0c\u6216\u8005\u7ed5\u65cb\u8f6c\u8f74\u7ebf\u7684\u65cb\u8f6c\u5f27\u5ea6</li> <li><code>dy</code>: y \u65b9\u5411\u9006\u65f6\u9488\u65cb\u8f6c\u5f27\u5ea6</li> <li><code>dz</code>: z \u65b9\u5411\u9006\u65f6\u9488\u65cb\u8f6c\u5f27\u5ea6</li> <li><code>center</code>: \u65cb\u8f6c\u4e2d\u5fc3\u7684\u7a7a\u95f4\u5750\u6807</li> <li><code>axis</code>: \u65cb\u8f6c\u8f74\u7ebf\u7684\u7a7a\u95f4\u5750\u6807</li> </ul>"},{"location":"documents/three/#maliang.three.scale","title":"scale","text":"<pre><code>scale(coordinate, kx=1, ky=1, kz=1, *, center)\n</code></pre> <p>\u5c06\u4e00\u4e2a\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u70b9\u4ee5\u53e6\u4e00\u4e2a\u70b9\u4e3a\u7f29\u653e\u4e2d\u5fc3\u8fdb\u884c\u7f29\u653e</p> <ul> <li><code>coordinate</code>: \u70b9\u7684\u7a7a\u95f4\u5750\u6807</li> <li><code>kx</code>: x \u65b9\u5411\u7f29\u653e\u6bd4\u4f8b</li> <li><code>ky</code>: y \u65b9\u5411\u7f29\u653e\u6bd4\u4f8b</li> <li><code>kz</code>: z \u65b9\u5411\u7f29\u653e\u6bd4\u4f8b</li> <li><code>center</code>: \u7f29\u653e\u4e2d\u5fc3\u7684\u7a7a\u95f4\u5750\u6807</li> </ul>"},{"location":"documents/three/#maliang.three.project","title":"project","text":"<pre><code>project(coordinate, distance)\n</code></pre> <p>\u5c06\u4e00\u4e2a\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u70b9\u6295\u5f71\u5230\u6307\u5b9a\u8ddd\u79bb\u7684\u6b63\u5411\u5e73\u9762\u4e0a\uff0c\u5e76\u8fd4\u56de\u5728\u8be5\u5e73\u9762\u4e0a\u7684\u5750\u6807</p> <ul> <li><code>coordinate</code>: \u70b9\u7684\u7a7a\u95f4\u5750\u6807</li> <li><code>distance</code>: \u6b63\u5411\u5e73\u9762\u7684\u8ddd\u79bb\uff08\u5e73\u9762\u6b63\u5bf9\u7740\u6211\u4eec\uff09</li> </ul>"},{"location":"documents/three/engine/","title":"maliang.three.engine","text":"<p> \u5b57\u6570 9 \u4e2a \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p> \u6e90\u4ee3\u7801\uff1a<code>maliang/three/engine.py</code></p> <p>Core codes of 3D</p> <p>\u7c7b\uff1a</p> <ul> <li> <code>Canvas</code>           \u2013            <p>Base class of 3D Canvas</p> </li> <li> <code>Space</code>           \u2013            <p>A canvas where you can view 3D objects</p> </li> <li> <code>Component</code>           \u2013            <p>3D \u5bf9\u8c61\u57fa\u7c7b</p> </li> <li> <code>Point</code>           \u2013            <p>\u70b9</p> </li> <li> <code>Line</code>           \u2013            <p>\u7ebf</p> </li> <li> <code>Plane</code>           \u2013            <p>\u9762</p> </li> <li> <code>Text3D</code>           \u2013            <p>\u4e09\u7ef4\u6587\u672c</p> </li> <li> <code>Geometry</code>           \u2013            <p>\u51e0\u4f55\u4f53</p> </li> </ul> <p>\u51fd\u6570\uff1a</p> <ul> <li> <code>translate</code>             \u2013              <p>\u5c06\u4e00\u4e2a\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u70b9\u8fdb\u884c\u5e73\u79fb</p> </li> <li> <code>rotate</code>             \u2013              <p>\u5c06\u4e00\u4e2a\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u70b9\u4ee5\u4e00\u4e2a\u70b9\u6216\u7ebf\u4e3a\u53c2\u7167\u8fdb\u884c\u65cb\u8f6c\uff08\u5b9e\u73b0\u65b9\u5f0f\u4e3a\u6b27\u62c9\u89d2\uff09</p> </li> <li> <code>scale</code>             \u2013              <p>\u5c06\u4e00\u4e2a\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u70b9\u4ee5\u53e6\u4e00\u4e2a\u70b9\u4e3a\u7f29\u653e\u4e2d\u5fc3\u8fdb\u884c\u7f29\u653e</p> </li> <li> <code>project</code>             \u2013              <p>\u5c06\u4e00\u4e2a\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u70b9\u6295\u5f71\u5230\u6307\u5b9a\u8ddd\u79bb\u7684\u6b63\u5411\u5e73\u9762\u4e0a\uff0c\u5e76\u8fd4\u56de\u5728\u8be5\u5e73\u9762\u4e0a\u7684\u5750\u6807</p> </li> </ul>"},{"location":"documents/three/engine/#maliang.three.engine.Canvas","title":"Canvas","text":"<pre><code>Canvas(\n    master: containers.Tk | containers.Toplevel | containers.Canvas | None = None,\n    *,\n    expand: typing.Literal[\"\", \"x\", \"y\", \"xy\"] = \"xy\",\n    auto_zoom: bool = False,\n    keep_ratio: typing.Literal[\"min\", \"max\"] | None = None,\n    free_anchor: bool = False,\n    **kwargs,\n)\n</code></pre> <p>               Bases: <code>containers.Canvas</code></p> <p>Base class of 3D Canvas</p> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>space_sort</code>             \u2013              <p>Sort the contextual relationship between the spatial positions of the components</p> </li> </ul> <p>\u5c5e\u6027\uff1a</p> <ul> <li> <code>components</code>               (<code>tuple[Component, ...]</code>)           \u2013            <p>Return all <code>Component</code> of this Canvas</p> </li> <li> <code>geometries</code>               (<code>tuple[Geometry, ...]</code>)           \u2013            <p>Return all <code>Geometry</code> of this Canvas</p> </li> </ul>"},{"location":"documents/three/engine/#maliang.three.engine.Canvas.components","title":"components  <code>property</code>","text":"<pre><code>components: tuple[Component, ...]\n</code></pre> <p>Return all <code>Component</code> of this Canvas</p>"},{"location":"documents/three/engine/#maliang.three.engine.Canvas.geometries","title":"geometries  <code>property</code>","text":"<pre><code>geometries: tuple[Geometry, ...]\n</code></pre> <p>Return all <code>Geometry</code> of this Canvas</p>"},{"location":"documents/three/engine/#maliang.three.engine.Canvas.space_sort","title":"space_sort","text":"<pre><code>space_sort() -&gt; None\n</code></pre> <p>Sort the contextual relationship between the spatial positions of the components</p>"},{"location":"documents/three/engine/#maliang.three.engine.Space","title":"Space","text":"<pre><code>Space(\n    master: containers.Tk | containers.Toplevel | containers.Canvas | None = None,\n    *,\n    expand: typing.Literal[\"\", \"x\", \"y\", \"xy\"] = \"xy\",\n    auto_zoom: bool = False,\n    keep_ratio: typing.Literal[\"min\", \"max\"] | None = None,\n    free_anchor: bool = False,\n    **kwargs,\n)\n</code></pre> <p>               Bases: <code>Canvas</code></p> <p>A canvas where you can view 3D objects</p>"},{"location":"documents/three/engine/#maliang.three.engine.Component","title":"Component","text":"<pre><code>Component(*coordinates)\n</code></pre> <p>3D \u5bf9\u8c61\u57fa\u7c7b</p> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>translate</code>             \u2013              <p>\u5e73\u79fb\u5bf9\u8c61\u672c\u8eab</p> </li> <li> <code>rotate</code>             \u2013              <p>\u65cb\u8f6c\u5bf9\u8c61\u672c\u8eab</p> </li> <li> <code>scale</code>             \u2013              <p>\u7f29\u653e\u5bf9\u8c61\u672c\u8eab</p> </li> <li> <code>center</code>             \u2013              <p>\u51e0\u4f55\u4e2d\u5fc3</p> </li> <li> <code>update</code>             \u2013              <p>Update</p> </li> </ul>"},{"location":"documents/three/engine/#maliang.three.engine.Component.translate","title":"translate","text":"<pre><code>translate(dx=0, dy=0, dz=0)\n</code></pre> <p>\u5e73\u79fb\u5bf9\u8c61\u672c\u8eab</p> <ul> <li><code>dx</code>: x \u65b9\u5411\u4f4d\u79fb\u957f\u5ea6</li> <li><code>dy</code>: y \u65b9\u5411\u4f4d\u79fb\u957f\u5ea6</li> <li><code>dz</code>: z \u65b9\u5411\u4f4d\u79fb\u957f\u5ea6</li> </ul>"},{"location":"documents/three/engine/#maliang.three.engine.Component.rotate","title":"rotate","text":"<pre><code>rotate(dx=0, dy=0, dz=0, *, center=(0, 0, 0))\n</code></pre><pre><code>rotate(dx=0, *, axis)\n</code></pre> <pre><code>rotate(dx=0, dy=0, dz=0, *, center=(0, 0, 0), axis=None)\n</code></pre> <p>\u65cb\u8f6c\u5bf9\u8c61\u672c\u8eab</p> <ul> <li><code>dx</code>: x \u65b9\u5411\u9006\u65f6\u9488\u65cb\u8f6c\u5f27\u5ea6\uff0c\u6216\u8005\u7ed5\u65cb\u8f6c\u8f74\u7ebf\u7684\u65cb\u8f6c\u5f27\u5ea6</li> <li><code>dy</code>: y \u65b9\u5411\u9006\u65f6\u9488\u65cb\u8f6c\u5f27\u5ea6</li> <li><code>dz</code>: z \u65b9\u5411\u9006\u65f6\u9488\u65cb\u8f6c\u5f27\u5ea6</li> <li><code>center</code>: \u65cb\u8f6c\u4e2d\u5fc3\uff0c\u9ed8\u8ba4\u4e3a\u539f\u70b9</li> <li><code>axis</code>: \u65cb\u8f6c\u8f74\u7ebf\uff0c\u65e0\u9ed8\u8ba4\u503c</li> </ul>"},{"location":"documents/three/engine/#maliang.three.engine.Component.scale","title":"scale","text":"<pre><code>scale(kx=1, ky=1, kz=1, *, center=None)\n</code></pre> <p>\u7f29\u653e\u5bf9\u8c61\u672c\u8eab</p> <ul> <li><code>kx</code>: x \u65b9\u5411\u7f29\u653e\u6bd4\u4f8b</li> <li><code>ky</code>: y \u65b9\u5411\u7f29\u653e\u6bd4\u4f8b</li> <li><code>kz</code>: z \u65b9\u5411\u7f29\u653e\u6bd4\u4f8b</li> <li><code>center</code>: \u7f29\u653e\u4e2d\u5fc3\uff0c\u9ed8\u8ba4\u4e3a\u51e0\u4f55\u4e2d\u5fc3</li> </ul>"},{"location":"documents/three/engine/#maliang.three.engine.Component.center","title":"center","text":"<pre><code>center()\n</code></pre> <p>\u51e0\u4f55\u4e2d\u5fc3</p>"},{"location":"documents/three/engine/#maliang.three.engine.Component.update","title":"update","text":"<pre><code>update() -&gt; None\n</code></pre> <p>Update</p>"},{"location":"documents/three/engine/#maliang.three.engine.Point","title":"Point","text":"<pre><code>Point(\n    canvas,\n    coords,\n    *,\n    size=1,\n    width=1,\n    fill=\"#000000\",\n    outline=\"#000000\",\n    markuptext=\"\",\n    markupdelta=(0, 0),\n    markupfont=(configs.Font.family, configs.Font.size),\n    markupfill=\"#000000\",\n    markupjustify=\"center\",\n)\n</code></pre> <p>               Bases: <code>Component</code></p> <p>\u70b9</p> <ul> <li><code>canvas</code>: \u7236\u753b\u5e03</li> <li><code>coords</code>: \u70b9\u7684\u7a7a\u95f4\u5750\u6807</li> <li><code>size</code>: \u70b9\u7684\u5927\u5c0f</li> <li><code>width</code>: \u70b9\u8f6e\u5ed3\u7684\u5bbd\u5ea6</li> <li><code>fill</code>: \u70b9\u5185\u90e8\u7684\u586b\u5145\u989c\u8272</li> <li><code>outline</code>: \u70b9\u8f6e\u5ed3\u7684\u989c\u8272</li> <li><code>markuptext</code>: \u6807\u8bb0\u6587\u672c</li> <li><code>markupdelta</code>: \u6807\u8bb0\u6587\u672c\u663e\u793a\u4f4d\u7f6e\u7684\u504f\u79fb\u91cf</li> <li><code>markupfont</code>: \u6807\u8bb0\u6587\u672c\u5b57\u4f53</li> <li><code>markupfill</code>: \u6807\u8bb0\u6587\u672c\u989c\u8272</li> <li><code>markupjustify</code>: \u6807\u8bb0\u6587\u672c\u591a\u884c\u5bf9\u9f50\u65b9\u5f0f</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>update</code>             \u2013              <p>\u66f4\u65b0\u5bf9\u8c61\u7684\u663e\u793a</p> </li> </ul>"},{"location":"documents/three/engine/#maliang.three.engine.Point.update","title":"update","text":"<pre><code>update()\n</code></pre> <p>\u66f4\u65b0\u5bf9\u8c61\u7684\u663e\u793a</p>"},{"location":"documents/three/engine/#maliang.three.engine.Line","title":"Line","text":"<pre><code>Line(canvas, point_start, point_end, *, width=1, fill='#000000')\n</code></pre> <p>               Bases: <code>Component</code></p> <p>\u7ebf</p> <ul> <li><code>canvas</code>: \u7236\u753b\u5e03</li> <li><code>point_start</code>: \u8d77\u70b9\u5750\u6807</li> <li><code>point_end</code>: \u7ec8\u70b9\u5750\u6807</li> <li><code>width</code>: \u7ebf\u7684\u5bbd\u5ea6</li> <li><code>fill</code>: \u7ebf\u7684\u989c\u8272</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>update</code>             \u2013              <p>\u66f4\u65b0\u5bf9\u8c61\u7684\u663e\u793a</p> </li> </ul>"},{"location":"documents/three/engine/#maliang.three.engine.Line.update","title":"update","text":"<pre><code>update()\n</code></pre> <p>\u66f4\u65b0\u5bf9\u8c61\u7684\u663e\u793a</p>"},{"location":"documents/three/engine/#maliang.three.engine.Plane","title":"Plane","text":"<pre><code>Plane(canvas, *points, width=1, fill='', outline='#000000')\n</code></pre> <p>               Bases: <code>Component</code></p> <p>\u9762</p> <ul> <li><code>canvas</code>: \u7236\u753b\u5e03</li> <li><code>points</code>: \u5404\u70b9\u7684\u7a7a\u95f4\u5750\u6807</li> <li><code>width</code>: \u9762\u8f6e\u5ed3\u7684\u5bbd\u5ea6</li> <li><code>fill</code>: \u9762\u5185\u90e8\u7684\u586b\u5145\u989c\u8272</li> <li><code>outline</code>: \u9762\u8f6e\u5ed3\u7684\u989c\u8272</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>update</code>             \u2013              <p>\u66f4\u65b0\u5bf9\u8c61\u7684\u663e\u793a</p> </li> </ul>"},{"location":"documents/three/engine/#maliang.three.engine.Plane.update","title":"update","text":"<pre><code>update()\n</code></pre> <p>\u66f4\u65b0\u5bf9\u8c61\u7684\u663e\u793a</p>"},{"location":"documents/three/engine/#maliang.three.engine.Text3D","title":"Text3D","text":"<pre><code>Text3D(\n    canvas,\n    coords,\n    text=\"\",\n    *,\n    font=(configs.Font.family, configs.Font.size),\n    justify=\"center\",\n    fill=\"#000000\",\n)\n</code></pre> <p>               Bases: <code>Component</code></p> <p>\u4e09\u7ef4\u6587\u672c</p> <ul> <li><code>canvas</code>: \u7236\u753b\u5e03</li> <li><code>coords</code>: \u70b9\u7684\u7a7a\u95f4\u5750\u6807</li> <li><code>text</code>: \u663e\u793a\u7684\u6587\u672c</li> <li><code>size</code>: \u70b9\u7684\u5927\u5c0f</li> <li><code>font</code>: \u70b9\u8f6e\u5ed3\u7684\u5bbd\u5ea6</li> <li><code>justify</code>: \u591a\u884c\u6587\u672c\u5bf9\u9f50\u65b9\u5f0f</li> <li><code>fill</code>: \u70b9\u5185\u90e8\u7684\u586b\u5145\u989c\u8272</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>update</code>             \u2013              <p>\u66f4\u65b0\u5bf9\u8c61\u7684\u663e\u793a</p> </li> </ul>"},{"location":"documents/three/engine/#maliang.three.engine.Text3D.update","title":"update","text":"<pre><code>update()\n</code></pre> <p>\u66f4\u65b0\u5bf9\u8c61\u7684\u663e\u793a</p>"},{"location":"documents/three/engine/#maliang.three.engine.Geometry","title":"Geometry","text":"<pre><code>Geometry(canvas, *sides)\n</code></pre> <p>\u51e0\u4f55\u4f53</p> <ul> <li><code>canvas</code>: \u7236\u753b\u5e03</li> <li><code>sides</code>: \u7ec4\u6210\u51e0\u4f55\u4f53\u7684\u9762</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>translate</code>             \u2013              <p>\u5e73\u79fb\u51e0\u4f55\u4f53\u4e2d\u7684\u6240\u6709 3D \u5bf9\u8c61</p> </li> <li> <code>rotate</code>             \u2013              <p>\u65cb\u8f6c\u51e0\u4f55\u4f53\u4e2d\u7684\u6240\u6709 3D \u5bf9\u8c61</p> </li> <li> <code>scale</code>             \u2013              <p>\u7f29\u653e\u51e0\u4f55\u4f53\u4e2d\u7684\u6240\u6709 3D \u5bf9\u8c61</p> </li> <li> <code>center</code>             \u2013              <p>\u51e0\u4f55\u4e2d\u5fc3</p> </li> <li> <code>update</code>             \u2013              <p>\u66f4\u65b0\u51e0\u4f55\u4f53</p> </li> <li> <code>append</code>             \u2013              <p>\u7ed9\u51e0\u4f55\u4f53\u6dfb\u52a0\u66f4\u591a\u65b0\u7684\u9762</p> </li> </ul>"},{"location":"documents/three/engine/#maliang.three.engine.Geometry.translate","title":"translate","text":"<pre><code>translate(dx=0, dy=0, dz=0)\n</code></pre> <p>\u5e73\u79fb\u51e0\u4f55\u4f53\u4e2d\u7684\u6240\u6709 3D \u5bf9\u8c61</p> <ul> <li><code>dx</code>: x \u65b9\u5411\u4f4d\u79fb\u957f\u5ea6</li> <li><code>dy</code>: y \u65b9\u5411\u4f4d\u79fb\u957f\u5ea6</li> <li><code>dz</code>: z \u65b9\u5411\u4f4d\u79fb\u957f\u5ea6</li> </ul>"},{"location":"documents/three/engine/#maliang.three.engine.Geometry.rotate","title":"rotate","text":"<pre><code>rotate(dx=0, dy=0, dz=0, *, center=(0, 0, 0))\n</code></pre><pre><code>rotate(dx=0, *, axis)\n</code></pre> <pre><code>rotate(dx=0, dy=0, dz=0, *, center=(0, 0, 0), axis=None)\n</code></pre> <p>\u65cb\u8f6c\u51e0\u4f55\u4f53\u4e2d\u7684\u6240\u6709 3D \u5bf9\u8c61</p> <ul> <li><code>dx</code>: x \u65b9\u5411\u9006\u65f6\u9488\u65cb\u8f6c\u5f27\u5ea6\uff0c\u6216\u8005\u7ed5\u65cb\u8f6c\u8f74\u7ebf\u7684\u65cb\u8f6c\u5f27\u5ea6</li> <li><code>dy</code>: y \u65b9\u5411\u9006\u65f6\u9488\u65cb\u8f6c\u5f27\u5ea6</li> <li><code>dz</code>: z \u65b9\u5411\u9006\u65f6\u9488\u65cb\u8f6c\u5f27\u5ea6</li> <li><code>center</code>: \u65cb\u8f6c\u4e2d\u5fc3\uff0c\u9ed8\u8ba4\u4e3a\u539f\u70b9</li> <li><code>axis</code>: \u65cb\u8f6c\u8f74\u7ebf\uff0c\u65e0\u9ed8\u8ba4\u503c</li> </ul>"},{"location":"documents/three/engine/#maliang.three.engine.Geometry.scale","title":"scale","text":"<pre><code>scale(kx=1, ky=1, kz=1, *, center=None)\n</code></pre> <p>\u7f29\u653e\u51e0\u4f55\u4f53\u4e2d\u7684\u6240\u6709 3D \u5bf9\u8c61</p> <ul> <li><code>kx</code>: x \u65b9\u5411\u7f29\u653e\u6bd4\u4f8b</li> <li><code>ky</code>: y \u65b9\u5411\u7f29\u653e\u6bd4\u4f8b</li> <li><code>kz</code>: z \u65b9\u5411\u7f29\u653e\u6bd4\u4f8b</li> <li><code>center</code>: \u7f29\u653e\u4e2d\u5fc3\uff0c\u9ed8\u8ba4\u4e3a\u51e0\u4f55\u4e2d\u5fc3</li> </ul>"},{"location":"documents/three/engine/#maliang.three.engine.Geometry.center","title":"center","text":"<pre><code>center()\n</code></pre> <p>\u51e0\u4f55\u4e2d\u5fc3</p>"},{"location":"documents/three/engine/#maliang.three.engine.Geometry.update","title":"update","text":"<pre><code>update()\n</code></pre> <p>\u66f4\u65b0\u51e0\u4f55\u4f53</p>"},{"location":"documents/three/engine/#maliang.three.engine.Geometry.append","title":"append","text":"<pre><code>append(*sides)\n</code></pre> <p>\u7ed9\u51e0\u4f55\u4f53\u6dfb\u52a0\u66f4\u591a\u65b0\u7684\u9762</p> <ul> <li><code>sides</code>: <code>Side</code> \u7c7b</li> </ul>"},{"location":"documents/three/engine/#maliang.three.engine.translate","title":"translate","text":"<pre><code>translate(\n    coordinate: tuple[float, float, float], dx: float = 0, dy: float = 0, dz: float = 0\n) -&gt; None\n</code></pre> <p>\u5c06\u4e00\u4e2a\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u70b9\u8fdb\u884c\u5e73\u79fb</p> <ul> <li><code>coordinate</code>: \u70b9\u7684\u7a7a\u95f4\u5750\u6807</li> <li><code>dx</code>: x \u65b9\u5411\u4f4d\u79fb\u957f\u5ea6</li> <li><code>dy</code>: y \u65b9\u5411\u4f4d\u79fb\u957f\u5ea6</li> <li><code>dz</code>: z \u65b9\u5411\u4f4d\u79fb\u957f\u5ea6</li> </ul>"},{"location":"documents/three/engine/#maliang.three.engine.rotate","title":"rotate","text":"<pre><code>rotate(coordinate, dx=0, dy=0, dz=0, *, center)\n</code></pre><pre><code>rotate(coordinate, dx=0, *, axis)\n</code></pre> <pre><code>rotate(coordinate, dx=0, dy=0, dz=0, *, center, axis=None)\n</code></pre> <p>\u5c06\u4e00\u4e2a\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u70b9\u4ee5\u4e00\u4e2a\u70b9\u6216\u7ebf\u4e3a\u53c2\u7167\u8fdb\u884c\u65cb\u8f6c\uff08\u5b9e\u73b0\u65b9\u5f0f\u4e3a\u6b27\u62c9\u89d2\uff09</p> <ul> <li><code>coordinate</code>: \u70b9\u7684\u7a7a\u95f4\u5750\u6807</li> <li><code>dx</code>: x \u65b9\u5411\u9006\u65f6\u9488\u65cb\u8f6c\u5f27\u5ea6\uff0c\u6216\u8005\u7ed5\u65cb\u8f6c\u8f74\u7ebf\u7684\u65cb\u8f6c\u5f27\u5ea6</li> <li><code>dy</code>: y \u65b9\u5411\u9006\u65f6\u9488\u65cb\u8f6c\u5f27\u5ea6</li> <li><code>dz</code>: z \u65b9\u5411\u9006\u65f6\u9488\u65cb\u8f6c\u5f27\u5ea6</li> <li><code>center</code>: \u65cb\u8f6c\u4e2d\u5fc3\u7684\u7a7a\u95f4\u5750\u6807</li> <li><code>axis</code>: \u65cb\u8f6c\u8f74\u7ebf\u7684\u7a7a\u95f4\u5750\u6807</li> </ul>"},{"location":"documents/three/engine/#maliang.three.engine.scale","title":"scale","text":"<pre><code>scale(coordinate, kx=1, ky=1, kz=1, *, center)\n</code></pre> <p>\u5c06\u4e00\u4e2a\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u70b9\u4ee5\u53e6\u4e00\u4e2a\u70b9\u4e3a\u7f29\u653e\u4e2d\u5fc3\u8fdb\u884c\u7f29\u653e</p> <ul> <li><code>coordinate</code>: \u70b9\u7684\u7a7a\u95f4\u5750\u6807</li> <li><code>kx</code>: x \u65b9\u5411\u7f29\u653e\u6bd4\u4f8b</li> <li><code>ky</code>: y \u65b9\u5411\u7f29\u653e\u6bd4\u4f8b</li> <li><code>kz</code>: z \u65b9\u5411\u7f29\u653e\u6bd4\u4f8b</li> <li><code>center</code>: \u7f29\u653e\u4e2d\u5fc3\u7684\u7a7a\u95f4\u5750\u6807</li> </ul>"},{"location":"documents/three/engine/#maliang.three.engine.project","title":"project","text":"<pre><code>project(coordinate, distance)\n</code></pre> <p>\u5c06\u4e00\u4e2a\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u70b9\u6295\u5f71\u5230\u6307\u5b9a\u8ddd\u79bb\u7684\u6b63\u5411\u5e73\u9762\u4e0a\uff0c\u5e76\u8fd4\u56de\u5728\u8be5\u5e73\u9762\u4e0a\u7684\u5750\u6807</p> <ul> <li><code>coordinate</code>: \u70b9\u7684\u7a7a\u95f4\u5750\u6807</li> <li><code>distance</code>: \u6b63\u5411\u5e73\u9762\u7684\u8ddd\u79bb\uff08\u5e73\u9762\u6b63\u5bf9\u7740\u6211\u4eec\uff09</li> </ul>"},{"location":"documents/three/geometries/","title":"maliang.three.geometries","text":"<p> \u5b57\u6570 9 \u4e2a \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p> \u6e90\u4ee3\u7801\uff1a<code>maliang/three/geometries.py</code></p> <p>Standard Geometries</p> <p>\u7c7b\uff1a</p> <ul> <li> <code>Cuboid</code>           \u2013            <p>Cuboid</p> </li> <li> <code>Tetrahedron</code>           \u2013            <p>Tetrahedron</p> </li> </ul>"},{"location":"documents/three/geometries/#maliang.three.geometries.Cuboid","title":"Cuboid","text":"<pre><code>Cuboid(\n    canvas: engine.Canvas | engine.Space,\n    x: float,\n    y: float,\n    z: float,\n    length: float,\n    width: float,\n    height: float,\n    *,\n    boardwidth: int = 1,\n    color_fill_up: str = \"\",\n    color_fill_down: str = \"\",\n    color_fill_left: str = \"\",\n    color_fill_right: str = \"\",\n    color_fill_front: str = \"\",\n    color_fill_back: str = \"\",\n    color_outline_up: str = \"#000000\",\n    color_outline_down: str = \"#000000\",\n    color_outline_left: str = \"#000000\",\n    color_outline_right: str = \"#000000\",\n    color_outline_front: str = \"#000000\",\n    color_outline_back: str = \"#000000\",\n)\n</code></pre> <p>               Bases: <code>engine.Geometry</code></p> <p>Cuboid</p>"},{"location":"documents/three/geometries/#maliang.three.geometries.Tetrahedron","title":"Tetrahedron","text":"<pre><code>Tetrahedron(\n    canvas: engine.Canvas | engine.Space,\n    point_1: tuple[float, float, float],\n    point_2: tuple[float, float, float],\n    point_3: tuple[float, float, float],\n    point_4: tuple[float, float, float],\n    *,\n    boardwidth: int = 1,\n    color_fill: tuple[str, str, str, str] = (\"\", \"\", \"\", \"\"),\n    color_outline: tuple[str, str, str, str] = (\"#000000\", \"#000000\", \"#000000\", \"#000000\"),\n)\n</code></pre> <p>               Bases: <code>engine.Geometry</code></p> <p>Tetrahedron</p>"},{"location":"documents/toolbox/","title":"maliang.toolbox","text":"<p> \u5b57\u6570 11 \u4e2a \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p> \u6e90\u4ee3\u7801\uff1a<code>maliang/toolbox/__init__.py</code></p> <p>Some practical tools</p> <p>\u6a21\u5757\uff1a</p> <ul> <li> <code>enhanced</code>           \u2013            <p>Enhanced versions of some tkinter classes and functions.</p> </li> <li> <code>utility</code>           \u2013            <p>Some useful utility classes or utility functions.</p> </li> </ul> <p>\u7c7b\uff1a</p> <ul> <li> <code>PhotoImage</code>           \u2013            <p>Pillow version of <code>tkinter.PhotoImage</code>.</p> </li> </ul> <p>\u51fd\u6570\uff1a</p> <ul> <li> <code>get_parent</code>             \u2013              <p>Get the HWND of <code>tkinter.Widget</code>.</p> </li> <li> <code>embed_window</code>             \u2013              <p>Embed a widget into another widget.</p> </li> <li> <code>load_font</code>             \u2013              <p>Make fonts located in file <code>font_path</code> available to the font system, and</p> </li> <li> <code>screen_size</code>             \u2013              <p>Returns the size of the screen.</p> </li> <li> <code>get_text_size</code>             \u2013              <p>Get the size of a text with a special font family and font size.</p> </li> <li> <code>fix_cursor</code>             \u2013              <p>Fix the cursor name.</p> </li> <li> <code>create_smoke</code>             \u2013              <p>Create a temporary smoke zone. Return the <code>enhanced.PhotoImage</code>.</p> </li> </ul>"},{"location":"documents/toolbox/#maliang.toolbox.PhotoImage","title":"PhotoImage","text":"<p>               Bases: <code>ImageTk.PhotoImage</code>, <code>tkinter.PhotoImage</code></p> <p>Pillow version of <code>tkinter.PhotoImage</code>.</p> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>scale</code>             \u2013              <p>Scale the PhotoImage.</p> </li> <li> <code>resize</code>             \u2013              <p>Resize the PhotoImage.</p> </li> </ul>"},{"location":"documents/toolbox/#maliang.toolbox.PhotoImage.scale","title":"scale","text":"<pre><code>scale(x: float, y: float) -&gt; PhotoImage\n</code></pre> <p>Scale the PhotoImage.</p> <ul> <li><code>x</code>: The x-axis scale factor</li> <li><code>y</code>: The y-axis scale factor</li> </ul>"},{"location":"documents/toolbox/#maliang.toolbox.PhotoImage.resize","title":"resize","text":"<pre><code>resize(width: int, height: int) -&gt; PhotoImage\n</code></pre> <p>Resize the PhotoImage.</p> <ul> <li><code>width</code>: The new width of the image</li> <li><code>height</code>: The new height of the image</li> </ul>"},{"location":"documents/toolbox/#maliang.toolbox.get_parent","title":"get_parent","text":"<pre><code>get_parent(widget: tkinter.Misc) -&gt; int\n</code></pre> <p>Get the HWND of <code>tkinter.Widget</code>.</p> <ul> <li><code>widget</code>: the widget</li> </ul>"},{"location":"documents/toolbox/#maliang.toolbox.embed_window","title":"embed_window","text":"<pre><code>embed_window(window: tkinter.Misc, parent: tkinter.Misc | None, *, focus: bool = False) -&gt; None\n</code></pre> <p>Embed a widget into another widget.</p> <ul> <li><code>window</code>: Widget that will be embedded in</li> <li><code>parent</code>: parent widget, <code>None</code> indicates that the parent widget is the screen</li> <li><code>focus</code>: whether direct input focus to this window</li> </ul>"},{"location":"documents/toolbox/#maliang.toolbox.load_font","title":"load_font","text":"<pre><code>load_font(font_path: str | bytes, *, private: bool = True, enumerable: bool = False) -&gt; bool\n</code></pre> <p>Make fonts located in file <code>font_path</code> available to the font system, and return <code>True</code> if the operation succeeds, <code>False</code> otherwise.</p> <ul> <li><code>font_path</code>: the font file path</li> <li><code>private</code>: if True, other processes cannot see this font(Only Windows OS), and this font will be unloaded when the process dies</li> <li><code>enumerable</code>: if True, this font will appear when enumerating fonts(Only Windows OS)</li> </ul> <p>This function only works on Windows and Linux OS.</p> <p>This function is referenced from <code>customtkinter.FontManager.load_font</code>, CustomTkinter: TomSchimansky/CustomTkinter.</p>"},{"location":"documents/toolbox/#maliang.toolbox.screen_size","title":"screen_size","text":"<pre><code>screen_size() -&gt; tuple[int, int]\n</code></pre> <p>Returns the size of the screen.</p>"},{"location":"documents/toolbox/#maliang.toolbox.get_text_size","title":"get_text_size","text":"<pre><code>get_text_size(\n    text: str,\n    fontsize: int | None = None,\n    family: str | None = None,\n    *,\n    padding: int = 0,\n    master: tkinter.Canvas | virtual.Widget | None = None,\n    **kwargs,\n) -&gt; tuple[int, int]\n</code></pre> <p>Get the size of a text with a special font family and font size.</p> <ul> <li><code>text</code>: the text</li> <li><code>fontsize</code>: font size of the text</li> <li><code>family</code>: font family of the text</li> <li><code>padding</code>: extra padding of the size</li> <li><code>master</code>: default canvas or widget provided</li> <li><code>kwargs</code>: kwargs of <code>tkinter.font.Font</code></li> </ul> <p>This function only works when the fontsize is negative number!</p>"},{"location":"documents/toolbox/#maliang.toolbox.fix_cursor","title":"fix_cursor","text":"<pre><code>fix_cursor(name: str) -&gt; str\n</code></pre> <p>Fix the cursor name.</p> <ul> <li><code>name</code>: name of cursor</li> </ul>"},{"location":"documents/toolbox/#maliang.toolbox.create_smoke","title":"create_smoke","text":"<pre><code>create_smoke(\n    size: tuple[int, int], *, color: str | tuple[int, int, int, int] = \"#00000066\"\n) -&gt; enhanced.PhotoImage\n</code></pre> <p>Create a temporary smoke zone. Return the <code>enhanced.PhotoImage</code>.</p> <ul> <li><code>size</code>: size of the smoke zone</li> <li><code>color</code>: color of the smoke zone</li> </ul> <p>This function need <code>PIL</code> to run.</p> <p>About the \u201csmoke\u201d, see: https://fluent2.microsoft.design/material#smoke</p>"},{"location":"documents/toolbox/enhanced/","title":"maliang.toolbox.enhanced","text":"<p> \u5b57\u6570 9 \u4e2a \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p> \u6e90\u4ee3\u7801\uff1a<code>maliang/toolbox/enhanced.py</code></p> <p>Enhanced versions of some tkinter classes and functions.</p> <p>\u7c7b\uff1a</p> <ul> <li> <code>PhotoImage</code>           \u2013            <p>Pillow version of <code>tkinter.PhotoImage</code>.</p> </li> </ul>"},{"location":"documents/toolbox/enhanced/#maliang.toolbox.enhanced.PhotoImage","title":"PhotoImage","text":"<p>               Bases: <code>ImageTk.PhotoImage</code>, <code>tkinter.PhotoImage</code></p> <p>Pillow version of <code>tkinter.PhotoImage</code>.</p> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>scale</code>             \u2013              <p>Scale the PhotoImage.</p> </li> <li> <code>resize</code>             \u2013              <p>Resize the PhotoImage.</p> </li> </ul>"},{"location":"documents/toolbox/enhanced/#maliang.toolbox.enhanced.PhotoImage.scale","title":"scale","text":"<pre><code>scale(x: float, y: float) -&gt; PhotoImage\n</code></pre> <p>Scale the PhotoImage.</p> <ul> <li><code>x</code>: The x-axis scale factor</li> <li><code>y</code>: The y-axis scale factor</li> </ul>"},{"location":"documents/toolbox/enhanced/#maliang.toolbox.enhanced.PhotoImage.resize","title":"resize","text":"<pre><code>resize(width: int, height: int) -&gt; PhotoImage\n</code></pre> <p>Resize the PhotoImage.</p> <ul> <li><code>width</code>: The new width of the image</li> <li><code>height</code>: The new height of the image</li> </ul>"},{"location":"documents/toolbox/utility/","title":"maliang.toolbox.utility","text":"<p> \u5b57\u6570 9 \u4e2a \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p> \u6e90\u4ee3\u7801\uff1a<code>maliang/toolbox/utility.py</code></p> <p>Some useful utility classes or utility functions.</p> <p>\u51fd\u6570\uff1a</p> <ul> <li> <code>get_parent</code>             \u2013              <p>Get the HWND of <code>tkinter.Widget</code>.</p> </li> <li> <code>embed_window</code>             \u2013              <p>Embed a widget into another widget.</p> </li> <li> <code>load_font</code>             \u2013              <p>Make fonts located in file <code>font_path</code> available to the font system, and</p> </li> <li> <code>screen_size</code>             \u2013              <p>Returns the size of the screen.</p> </li> <li> <code>get_text_size</code>             \u2013              <p>Get the size of a text with a special font family and font size.</p> </li> <li> <code>fix_cursor</code>             \u2013              <p>Fix the cursor name.</p> </li> <li> <code>create_smoke</code>             \u2013              <p>Create a temporary smoke zone. Return the <code>enhanced.PhotoImage</code>.</p> </li> </ul>"},{"location":"documents/toolbox/utility/#maliang.toolbox.utility.Trigger","title":"Trigger","text":"<pre><code>Trigger(command: collections.abc.Callable[..., typing.Any])\n</code></pre> <p>Single trigger.</p> <p>It can only be triggered once before the reset, and multiple triggers are invalid. When triggered, the callback function is called.</p> <ul> <li><code>command</code>: the function that is called when triggered</li> </ul> <p>\u65b9\u6cd5\uff1a</p> <ul> <li> <code>get</code>             \u2013              <p>Get the status of the trigger.</p> </li> <li> <code>reset</code>             \u2013              <p>Reset the status of the trigger.</p> </li> <li> <code>lock</code>             \u2013              <p>Lock the trigger so that it can\u2019t be updated.</p> </li> <li> <code>unlock</code>             \u2013              <p>Unlock this trigger so that it can be updated again.</p> </li> <li> <code>update</code>             \u2013              <p>Update the status of the trigger.</p> </li> </ul>"},{"location":"documents/toolbox/utility/#maliang.toolbox.utility.Trigger.get","title":"get","text":"<pre><code>get() -&gt; bool\n</code></pre> <p>Get the status of the trigger.</p>"},{"location":"documents/toolbox/utility/#maliang.toolbox.utility.Trigger.reset","title":"reset","text":"<pre><code>reset() -&gt; None\n</code></pre> <p>Reset the status of the trigger.</p>"},{"location":"documents/toolbox/utility/#maliang.toolbox.utility.Trigger.lock","title":"lock","text":"<pre><code>lock() -&gt; None\n</code></pre> <p>Lock the trigger so that it can\u2019t be updated.</p>"},{"location":"documents/toolbox/utility/#maliang.toolbox.utility.Trigger.unlock","title":"unlock","text":"<pre><code>unlock() -&gt; None\n</code></pre> <p>Unlock this trigger so that it can be updated again.</p>"},{"location":"documents/toolbox/utility/#maliang.toolbox.utility.Trigger.update","title":"update","text":"<pre><code>update(value: bool = True, /, *args, **kwargs) -&gt; None\n</code></pre> <p>Update the status of the trigger.</p> <ul> <li><code>value</code>: updated value</li> <li><code>args</code>: args of the command</li> <li><code>kwargs</code>: kwargs of the command</li> </ul>"},{"location":"documents/toolbox/utility/#maliang.toolbox.utility.get_parent","title":"get_parent","text":"<pre><code>get_parent(widget: tkinter.Misc) -&gt; int\n</code></pre> <p>Get the HWND of <code>tkinter.Widget</code>.</p> <ul> <li><code>widget</code>: the widget</li> </ul>"},{"location":"documents/toolbox/utility/#maliang.toolbox.utility.embed_window","title":"embed_window","text":"<pre><code>embed_window(window: tkinter.Misc, parent: tkinter.Misc | None, *, focus: bool = False) -&gt; None\n</code></pre> <p>Embed a widget into another widget.</p> <ul> <li><code>window</code>: Widget that will be embedded in</li> <li><code>parent</code>: parent widget, <code>None</code> indicates that the parent widget is the screen</li> <li><code>focus</code>: whether direct input focus to this window</li> </ul>"},{"location":"documents/toolbox/utility/#maliang.toolbox.utility.load_font","title":"load_font","text":"<pre><code>load_font(font_path: str | bytes, *, private: bool = True, enumerable: bool = False) -&gt; bool\n</code></pre> <p>Make fonts located in file <code>font_path</code> available to the font system, and return <code>True</code> if the operation succeeds, <code>False</code> otherwise.</p> <ul> <li><code>font_path</code>: the font file path</li> <li><code>private</code>: if True, other processes cannot see this font(Only Windows OS), and this font will be unloaded when the process dies</li> <li><code>enumerable</code>: if True, this font will appear when enumerating fonts(Only Windows OS)</li> </ul> <p>This function only works on Windows and Linux OS.</p> <p>This function is referenced from <code>customtkinter.FontManager.load_font</code>, CustomTkinter: TomSchimansky/CustomTkinter.</p>"},{"location":"documents/toolbox/utility/#maliang.toolbox.utility.screen_size","title":"screen_size","text":"<pre><code>screen_size() -&gt; tuple[int, int]\n</code></pre> <p>Returns the size of the screen.</p>"},{"location":"documents/toolbox/utility/#maliang.toolbox.utility.get_text_size","title":"get_text_size","text":"<pre><code>get_text_size(\n    text: str,\n    fontsize: int | None = None,\n    family: str | None = None,\n    *,\n    padding: int = 0,\n    master: tkinter.Canvas | virtual.Widget | None = None,\n    **kwargs,\n) -&gt; tuple[int, int]\n</code></pre> <p>Get the size of a text with a special font family and font size.</p> <ul> <li><code>text</code>: the text</li> <li><code>fontsize</code>: font size of the text</li> <li><code>family</code>: font family of the text</li> <li><code>padding</code>: extra padding of the size</li> <li><code>master</code>: default canvas or widget provided</li> <li><code>kwargs</code>: kwargs of <code>tkinter.font.Font</code></li> </ul> <p>This function only works when the fontsize is negative number!</p>"},{"location":"documents/toolbox/utility/#maliang.toolbox.utility.fix_cursor","title":"fix_cursor","text":"<pre><code>fix_cursor(name: str) -&gt; str\n</code></pre> <p>Fix the cursor name.</p> <ul> <li><code>name</code>: name of cursor</li> </ul>"},{"location":"documents/toolbox/utility/#maliang.toolbox.utility.create_smoke","title":"create_smoke","text":"<pre><code>create_smoke(\n    size: tuple[int, int], *, color: str | tuple[int, int, int, int] = \"#00000066\"\n) -&gt; enhanced.PhotoImage\n</code></pre> <p>Create a temporary smoke zone. Return the <code>enhanced.PhotoImage</code>.</p> <ul> <li><code>size</code>: size of the smoke zone</li> <li><code>color</code>: color of the smoke zone</li> </ul> <p>This function need <code>PIL</code> to run.</p> <p>About the \u201csmoke\u201d, see: https://fluent2.microsoft.design/material#smoke</p>"},{"location":"practices/","title":"\u5b9e\u6218\u6559\u5b66","text":"<p> \u5b57\u6570 19 \u4e2a \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p>\u5f88\u9057\u61be\u5462</p> <p>\u80a5\u80a0\u62b1\u6b49\uff01\u8fd8\u6ca1\u6709\u66f4\u65b0\u5662~</p>"},{"location":"tutorials/","title":"\u5b98\u65b9\u6559\u7a0b","text":"<p> \u5b57\u6570 1312 \u4e2a \u00a0 \u56fe\u7247 2 \u5f20 \u00a0 \u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p>\u7279\u522b\u6ce8\u610f\uff1a\u6559\u7a0b\u7248\u672c\u8981\u6c42</p> <p>\u76ee\u524d\u6b64\u6559\u7a0b\u5bf9\u5e94\u7684\u73af\u5883\u5982\u4e0b\uff1a</p> <ul> <li>maliang: <code>3.0.0</code></li> <li>Python: <code>3.13.0</code></li> <li>OS: <code>Windows 11 24H2</code></li> </ul> <p>\u82e5\u60a8\u9700\u8981\u7684\u6559\u7a0b\u4e0d\u662f\u8be5\u7248\u672c\uff0c\u8bf7\u5728\u7f51\u9875\u5de6\u4e0a\u5207\u6362\u7248\u672c\uff01</p> <p>\u7279\u522b\u63d0\u4f9b\uff1a\u76f8\u5173\u6559\u7a0b\u53ca\u6587\u6863\u94fe\u63a5</p> <ul> <li>Tcl / Tk 8.6 \u5b98\u65b9\u6587\u6863\uff1ahttps://www.tcl.tk/man/tcl8.6/contents.htm</li> <li>Tcl / Tk 9.0 \u5b98\u65b9\u6587\u6863\uff1ahttps://www.tcl.tk/man/tcl9.0/</li> <li>\u4e2a\u4eba\u4e0d\u5b8c\u6574 Tk \u53c2\u8003\u6559\u7a0b\uff1ahttps://xiaokang2022.blog.csdn.net/category_11600888.html</li> <li>\u4e2a\u4eba\u63a8\u8350\u7684 Tk \u53c2\u8003\u6559\u7a0b\uff1ahttps://blog.csdn.net/qq_41556318/category_9283243.html</li> </ul>"},{"location":"tutorials/#\u4e00\u9605\u524d\u987b\u77e5","title":"\u4e00\u3001\u9605\u524d\u987b\u77e5","text":""},{"location":"tutorials/#11-\u6807\u7b7e\u8bf4\u660e","title":"1.1 \u6807\u7b7e\u8bf4\u660e*","text":"<ul> <li><code>new</code>: \u6700\u65b0\u529f\u80fd\uff0c\u9700\u8981\u6700\u65b0\u63d0\u4ea4\u7684 <code>maliang</code> \u7248\u672c\uff0c\u800c\u975e\u5df2\u53d1\u884c\u7684\u7248\u672c\uff1b</li> <li><code>deprecated</code>: \u5f03\u7528\u529f\u80fd\uff0c\u672a\u6765\u5c06\u4e0d\u518d\u4f7f\u7528\uff1b</li> <li><code>experimental</code>: \u5b9e\u9a8c\u6027\u529f\u80fd\uff0c\u529f\u80fd\u53ef\u80fd\u4e0d\u5b8c\u5584\u6216\u8005\u5b58\u5728\u95ee\u9898\uff1b</li> <li><code>fixed</code>: \u4fee\u590d\u7684\u529f\u80fd\uff0c\u5f53\u524d\u7248\u672c\u5b58\u5728\u95ee\u9898\u4f46\u6700\u65b0\u7248\u672c\u4e2d\u4fee\u590d\u7684\uff1b</li> <li><code>bug</code>: \u5b58\u5728\u5df2\u77e5\u95ee\u9898\u7684\u529f\u80fd\uff1b</li> <li><code>third-party</code>: \u7b2c\u4e09\u65b9\u529f\u80fd\uff0c\u529f\u80fd\u7531\u7b2c\u4e09\u65b9\u5305\u63d0\u4f9b\uff1b</li> </ul>"},{"location":"tutorials/#12-\u4e3b\u9898\u8bf4\u660e","title":"1.2 \u4e3b\u9898\u8bf4\u660e*","text":"<p>\u6b64\u7f51\u7ad9\u4e3b\u9898\u9ed8\u8ba4\u8ddf\u968f\u7cfb\u7edf\uff0c\u53ef\u624b\u52a8\u8c03\u8282\u4e3a\u6697\u8272\u4e3b\u9898\u6216\u8005\u4eae\u8272\u4e3b\u9898\uff0c\u8fd9\u4e0d\u4ec5\u4f1a\u5f71\u54cd\u7f51\u7ad9\u7684\u989c\u8272\u5916\u89c2\uff0c\u66f4\u4f1a\u5f71\u54cd\u90e8\u5206\u5728\u4e0d\u540c\u4e3b\u9898\u4e0b\u7684\u56fe\u7247\uff0c\u56e0\u4e3a <code>maliang</code> \u6d89\u53ca\u4eae\u8272\u548c\u6697\u8272\u4e3b\u9898\uff0c\u6240\u4ee5\u90e8\u5206\u6548\u679c\u9884\u89c8\u56fe\u4e5f\u4f1a\u540c\u6b65\u53d7\u7f51\u7ad9\u4e3b\u9898\u800c\u5207\u6362\u3002</p> <p>\u4f8b\u5982\uff0c\u4e0b\u9762\u7684 \u201c\u56fe1 \u5728 VSCode \u4e2d\u67e5\u770b\u7c7b\u7684\u6587\u6863\u5b57\u7b26\u4e32\u201d \u5c31\u53d7\u7f51\u7ad9\u4e3b\u9898\u5f71\u54cd\uff0c\u5927\u5bb6\u53ef\u4ee5\u8bd5\u7740\u5728\u9875\u9762\u9876\u90e8\u5207\u6362\u7f51\u7ad9\u4e3b\u9898\u989c\u8272\uff0c\u770b\u770b\u8fd9\u5f20\u56fe\u7247\u6709\u4ec0\u4e48\u53d8\u5316\u3002</p> <p>\u6b64\u5916\uff0c\u672c\u7ad9\u7684\u6240\u6709\u56fe\u7247\u90fd\u53ef\u4ee5\u901a\u8fc7\u70b9\u51fb\u6765\u653e\u5927\u3002</p>"},{"location":"tutorials/#13-\u56fe\u50cf\u8bf4\u660e","title":"1.3 \u56fe\u50cf\u8bf4\u660e*","text":"<p>\u56fe\u5f62\u5206\u4e3a\u4e24\u79cd\uff0c\u4e00\u79cd\u662f\u7531\u56fe\u7247\u6587\u4ef6\u76f4\u63a5\u5c55\u793a\u7684\uff0c\u8fd8\u6709\u4e00\u79cd\u662f\u7531 Markdown \u7684 Mermaid \u8bed\u6cd5\u4ee3\u7801\u5757\u751f\u6210\u7684\u3002\u67d0\u4e9b\u65f6\u5019\u8fd9\u4e9b\u56fe\u6ca1\u6709\u5b8c\u5168\u751f\u6210\uff0c\u800c\u662f\u5448\u73b0\u51fa\u4e00\u79cd\u6e90\u4ee3\u7801\u7684\u72b6\u6001\uff0c\u6b64\u65f6\u53ef\u4ee5\u5c1d\u8bd5\u5237\u65b0\u7f51\u9875\u91cd\u65b0\u8ba9\u5b83\u4eec\u751f\u6210\u3002</p> <p>\u53e6\u5916\uff0c\u5b83\u4eec\u7684\u989c\u8272\u4e5f\u4e0e\u4e3b\u9898\u6709\u5173\u3002</p>"},{"location":"tutorials/#14-\u524d\u7f6e\u9700\u6c42","title":"1.4 \u524d\u7f6e\u9700\u6c42","text":"<p>\u63a8\u8350\u5728\u9605\u8bfb\u6b64\u6559\u7a0b\u7684\u540c\u65f6\u642d\u914d Visual Studio Code\uff08\u4ee5\u4e0b\u7b80\u79f0 VSCode\uff09\u8fdb\u884c\u5f00\u53d1\uff0c\u4f7f\u7528 PyCharm \u6216\u8005 Visual Studio \u4e5f\u53ef\u4ee5\uff0c\u4f46\u6211\u4e2a\u4eba\u66f4\u63a8\u8350\u4f7f\u7528 VSCode\u3002</p> <p><code>maliang 3</code>\uff08\u4ee5\u4e0b\u7b80\u79f0 <code>maliang</code>\uff09 \u4e13\u95e8\u5bf9 VSCode \u505a\u4e86\u6587\u6863\u5b57\u7b26\u4e32\u7684\u4f18\u5316\uff0c\u53ef\u4ee5\u5341\u5206\u65b9\u4fbf\u5730\u5728 VSCode \u5185\u770b\u5230\u6bcf\u4e2a\u51fd\u6570\u3001\u7c7b\u751a\u81f3\u662f\u5e38\u91cf\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u5305\u62ec\u5b83\u4eec\u7684\u7c7b\u578b\u3001\u9ed8\u8ba4\u503c\u548c\u4f7f\u7528\u65b9\u6cd5\u3002\u53ea\u9700\u8981\u5c06\u9f20\u6807\u79fb\u52a8\u5230\u60f3\u8981\u67e5\u770b\u7684\u51fd\u6570\u6216\u8005\u7c7b\u4e0a\u9762\u5373\u53ef\uff0cPyCharm \u548c Visual Studio \u4e5f\u6709\u7c7b\u4f3c\u7684\u529f\u80fd\uff0c\u4f46\u6e32\u67d3\u6548\u679c\u4e0d\u5982 VSCode \u7684\u90a3\u4e48\u597d\u3002\u867d\u7136\u53ef\u4ee5\u76f4\u63a5\u67e5\u770b\u6587\u6863\u5b57\u7b26\u4e32\uff0c\u4f46 <code>maliang</code> \u5728\u5f00\u53d1\u7684\u65f6\u5019\u4e3a\u4e86\u529b\u6c42\u7b26\u5408 PEP 8 \u7684\u89c4\u5219\uff0c\u6240\u4ee5\u6587\u6863\u5b57\u7b26\u4e32\u5747\u662f\u82f1\u6587\u7684\u3002\u9605\u8bfb\u8d77\u6765\u4e0d\u65b9\u4fbf\u7684\u670b\u53cb\u4eec\u53ef\u4ee5\u5728\u672c\u7ad9\u67e5\u9605\u6559\u7a0b\u6765\u8fdb\u884c\u8f85\u52a9\u5f00\u53d1\u3002</p> <p> </p> <p>\u56fe1 \u5728 VSCode \u4e2d\u67e5\u770b\u7c7b\u7684\u6587\u6863\u5b57\u7b26\u4e32</p>"},{"location":"tutorials/#\u4e8c\u60f3\u8bf4\u7684\u4e00\u4e9b\u4e8b\u60c5","title":"\u4e8c\u3001\u60f3\u8bf4\u7684\u4e00\u4e9b\u4e8b\u60c5","text":""},{"location":"tutorials/#21-\u5173\u4e8e\u8be5\u9879\u76ee\u540d\u5b57\u7684\u7531\u6765","title":"2.1 \u5173\u4e8e\u8be5\u9879\u76ee\u540d\u5b57\u7684\u7531\u6765","text":"<p>\u5b9e\u9645\u4e0a\uff0c\u8be5\u9879\u76ee\u7684\u65e7\u7248\u672c\u5e76\u4e0d\u53eb <code>maliang</code>\uff0c\u800c\u662f <code>tkintertools</code>\u3002\u8fd9\u662f\u56e0\u4e3a\u5728\u4ee5\u524d\u672c\u9879\u76ee\u8fd8\u6ca1\u6709\u505a\u5f97\u8fd9\u4e48\u5927\u7684\u65f6\u5019\uff0c\u672c\u9879\u76ee\u53ea\u662f\u4e00\u4e2a\u7528\u6765\u8f85\u52a9 tkinter \u8fdb\u884c\u5f00\u53d1\u7684\u5de5\u5177\uff0c\u6240\u4ee5\u53d6\u540d\u4e3a <code>tkinter</code> \u548c tools \u7684\u7ed3\u5408\uff0c\u4f46\u8fd9\u4e2a\u540d\u79f0\u5c06\u6b62\u6b65\u4e8e 3.0.0 \u7248\u672c\uff0c\u5728\u8fd9\u4e2a\u7248\u672c\u53d1\u5e03\u524d\uff0c\u7ecf\u8fc7\u793e\u533a\u6295\u7968\uff0c\u6211\u51b3\u5b9a\u66f4\u6539\u8fd9\u4e2a\u9879\u76ee\u7684\u540d\u79f0\uff0c\u5e76\u6700\u7ec8\u53d6\u540d\u4e3a <code>maliang</code>\u3002</p> <p>\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u8981\u8d77\u8fd9\u4e2a\u540d\u5b57\uff0c\u5b9e\u9645\u548c\u672c\u9879\u76ee\u7684\u6700\u7ec8\u76ee\u6807\u6709\u4e00\u5b9a\u8054\u7cfb\uff0c\u4e0d\u77e5\u5927\u5bb6\u5c0f\u65f6\u5019\u6709\u6ca1\u6709\u7528\u753b\u677f\u753b\u7a0b\u5e8f\u754c\u9762\u7684\u8fd9\u79cd\u60f3\u6cd5\uff1f\u6709\u4e9b\u4eba\u4e0d\u4ec5\u60f3\u8fc7\uff0c\u8fd8\u5b9e\u9645\u505a\u8fc7\uff0c\u6bd4\u5982\u6211\u3002\u5c0f\u65f6\u5019\u770b\u7740\u82b1\u82b1\u7eff\u7eff\u7684\u7535\u8111\u5c4f\u5e55\uff0c\u4e0d\u4f1a\u7f16\u7a0b\u7684\u6211\u53ea\u80fd\u7528 \u201c\u753b\u56fe.exe\u201d \u5728\u4e0a\u9762\u753b\u4e00\u4e9b\u81ea\u5df1\u5e7b\u60f3\u7684\u7a0b\u5e8f\uff0c\u89c9\u5f97\u975e\u5e38\u597d\u73a9\u3002\u662f\u7684\uff0c\u8fd9\u5f88\u597d\u73a9\uff0c\u4f46\u8fd9\u5e76\u4e0d\u662f\u771f\u7684\u754c\u9762\uff0c\u53ea\u662f\u4e00\u526f\u53ef\u80fd\u7b97\u4e0d\u4e0a\u753b\u7684\u753b\u7f62\u4e86\u3002\u4f46\u201c\u795e\u7b14\u9a6c\u826f\u201d\u7684\u6545\u4e8b\u5927\u5bb6\u90fd\u77e5\u9053\uff0c\u9a6c\u826f\u6709\u4e00\u652f\u795e\u7b14\uff0c\u80fd\u8ba9\u753b\u51fa\u6765\u7684\u4e1c\u897f\u53d8\u6210\u771f\u7684\uff01\u8981\u662f\u6709\u8fd9\u4e48\u4e00\u4e2a\u9879\u76ee\uff0c\u771f\u7684\u80fd\u8ba9\u753b\u51fa\u6765\u7684\u754c\u9762\u53d8\u6210\u771f\u7684\uff0c\u5c82\u4e0d\u7f8e\u54c9\uff1f</p> <p>\u662f\u7684\uff0c\u4f60\u60f3\u7684\u6ca1\u9519\uff0c\u901a\u8fc7\u753b\u753b\u6765\u6784\u5efa\u56fe\u5f62\u754c\u9762\u5c31\u662f\u8fd9\u4e2a\u9879\u76ee\u7684\u7ec8\u6781\u76ee\u6807\u3002\u56e0\u6b64\uff0c\u8be5\u9879\u76ee\u88ab\u91cd\u547d\u540d\u4e3a\u4e86 <code>maliang</code>\u3002\u8fd9\u4e2a\u65f6\u5019\u5c31\u6709\u4eba\u8981\u95ee\u4e86\uff0c\u4f60\u8fd9\u600e\u4e48\u53ea\u6709\u201c\u9a6c\u826f\u201d\uff0c\u4f60\u7684\u201c\u795e\u7b14\u201d\u5462\uff1f\u522b\u6025\uff01\u201c\u795e\u7b14\u201d\u4e5f\u662f\u6709\u7684\uff0c\u672c\u9879\u76ee\u53ea\u662f\u4e00\u4e2a UI \u6846\u67b6\uff0c\u4f46\u8fd8\u9700\u4e00\u4e2a\u914d\u5957\u7684\u53ef\u89c6\u5316\u5f00\u53d1\u8f6f\u4ef6\uff0c\u800c\u8fd9\u4e2a\u8f6f\u4ef6\u5c31\u662f\u201c\u795e\u7b14\u201d\uff0c\u76ee\u524d\u201c\u795e\u7b14\u201d\u9879\u76ee\u8fd8\u5904\u4e8e\u521d\u671f\u9636\u6bb5\uff0c\u53ea\u80fd\u5b9e\u73b0\u63a7\u4ef6\u7684\u62d6\u62fd\uff0c\u4f46\u968f\u7740\u4e0d\u65ad\u7684\u5f00\u53d1\uff0c\u5b83\u7684\u529f\u80fd\u5c06\u8d8a\u6765\u8d8a\u5f3a\u5927\u3002</p> <p>\u201c\u795e\u7b14\u201d\u9879\u76ee\u4e5f\u662f\u5f00\u6e90\u7684\uff0c\u9879\u76ee\u94fe\u63a5\u4e3a\uff1aXiaokang2022/Magic-Brush</p>"},{"location":"tutorials/#22-\u517b\u6210\u770b\u6559\u7a0b\u548c\u6587\u6863\u7684\u597d\u4e60\u60ef","title":"2.2 \u517b\u6210\u770b\u6559\u7a0b\u548c\u6587\u6863\u7684\u597d\u4e60\u60ef","text":"<p>\u6559\u7a0b\u548c\u6587\u6863\u662f\u6700\u597d\u7684\u8d44\u6e90\uff0c\u5b9e\u65f6\u66f4\u65b0\u548c\u7ef4\u62a4\uff0c\u5c3d\u53ef\u80fd\u4fdd\u8bc1\u51c6\u786e\u6027\uff0c\u517b\u6210\u770b\u6559\u7a0b\u548c\u6587\u6863\u7684\u597d\u4e60\u60ef\u4f1a\u8ba9\u4f60\u7684\u5f00\u53d1\u4e8b\u534a\u529f\u500d\u3002</p> <p>\u6240\u4ee5\u4e0d\u8981\u6709\u4e8b\u6ca1\u4e8b\u513f\u5c31\u95ee\u6211\u8fd9\u95ee\u6211\u90a3\uff0c\u4ee5\u53ca\u5728\u8bc4\u8bba\u533a\u95ee\u4e1c\u95ee\u897f\uff08bushi</p>"},{"location":"tutorials/chapter_01/","title":"\u7b2c\u4e00\u7ae0\uff1a\u5b89\u88c5\u4e0e\u521d\u8bc6","text":"<p> \u5b57\u6570 114 \u4e2a \u00a0 \u56fe\u7247 2 \u5f20 \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p> </p> <p>\u7ae0\u8282\u6982\u8ff0</p> <p>\u672c\u7ae0\u4e0d\u4f1a\u6df1\u5165\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 <code>maliang</code> \u6765\u6784\u5efa\u4e00\u4e2a\u56fe\u5f62\u5316\u7684\u7a0b\u5e8f\uff0c\u4f46\u4f1a\u4ecb\u7ecd\u5982\u4f55\u5b89\u88c5 <code>maliang</code> \u5e76\u901a\u8fc7\u7b80\u5355\u7684\u793a\u4f8b\u6765\u5c55\u793a\u6784\u5efa\u4e00\u4e2a\u56fe\u5f62\u5316\u7a0b\u5e8f\u7684\u8fc7\u7a0b\u3002</p> <p>\u540c\u65f6\u4f1a\u7b80\u8981\u5730\u4ecb\u7ecd\u4e00\u4e0b <code>maliang</code> \u7684\u6846\u67b6\uff0c\u65b9\u4fbf\u5404\u4f4d\u7406\u89e3 <code>maliang</code>\u3002</p>"},{"location":"tutorials/chapter_01/#\u672c\u7ae0\u5185\u5bb9","title":"\u672c\u7ae0\u5185\u5bb9","text":"<ul> <li>1.1 \u73af\u5883\u642d\u5efa</li> <li>1.2 \u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684\u754c\u9762</li> <li>1.3 \u6846\u67b6\u6982\u8ff0</li> </ul>"},{"location":"tutorials/chapter_01/1/","title":"\u00a71.1 \u73af\u5883\u642d\u5efa","text":"<p> \u5b57\u6570 711 \u4e2a \u00a0 \u4ee3\u7801 19 \u884c \u00a0 \u56fe\u7247 6 \u5f20 \u00a0 \u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p>","tags":["\u5165\u95e8","\u5b89\u88c5","\u73af\u5883\u642d\u5efa"]},{"location":"tutorials/chapter_01/1/#\u4e00\u73af\u5883\u8981\u6c42","title":"\u4e00\u3001\u73af\u5883\u8981\u6c42","text":"<p><code>maliang</code> \u8fd0\u884c\u8981\u6c42 Python \u7248\u672c\u5927\u4e8e\u7b49\u4e8e <code>3.10</code>\uff0c\u64cd\u4f5c\u7cfb\u7edf\u6ca1\u6709\u8fc7\u591a\u8981\u6c42\uff08Windows\u3001macOS\u3001Linux \u5747\u53ef\uff09\u3002(1)</p> <ol> <li>\ud83d\udca1\u4f46\u5b9e\u9645\u4e0a\u6211\u66f4\u63a8\u8350\u4f7f\u7528 Windows \u64cd\u4f5c\u7cfb\u7edf</li> </ol> <p>\u63a8\u8350\u4f7f\u7528 Python 3.11 \u53ca\u4ee5\u4e0a\u7248\u672c\u3002</p>","tags":["\u5165\u95e8","\u5b89\u88c5","\u73af\u5883\u642d\u5efa"]},{"location":"tutorials/chapter_01/1/#\u4e8c\u5b89\u88c5-maliang","title":"\u4e8c\u3001\u5b89\u88c5 <code>maliang</code>","text":"","tags":["\u5165\u95e8","\u5b89\u88c5","\u73af\u5883\u642d\u5efa"]},{"location":"tutorials/chapter_01/1/#21-\u7eaf\u51c0\u5b89\u88c5","title":"2.1 \u7eaf\u51c0\u5b89\u88c5","text":"<p><code>maliang</code> \u76ee\u524d\u7684\u4f9d\u8d56\u5305\u53ea\u6709 Python \u5b98\u65b9\u7684 python/typing_extensions\uff0c\u5b89\u88c5\u65f6\u4f1a\u81ea\u52a8\u5b89\u88c5\u4f9d\u8d56\uff1a</p> <pre><code>pip install maliang\n</code></pre>","tags":["\u5165\u95e8","\u5b89\u88c5","\u73af\u5883\u642d\u5efa"]},{"location":"tutorials/chapter_01/1/#22-\u5b8c\u6574\u5b89\u88c5","title":"2.2 \u5b8c\u6574\u5b89\u88c5","text":"<p>\u82e5\u60f3\u83b7\u53d6 <code>maliang</code> \u7684\u5b8c\u6574\u529f\u80fd\uff0c\u7528\u5982\u4e0b\u547d\u4ee4\u8fdb\u884c\u5b89\u88c5\uff1a</p> <pre><code>pip install maliang[opt]\npip install maliang[ext]\n</code></pre> <p>\u4e0a\u8ff0\u547d\u4ee4\u7684\u7b2c\u4e00\u6761\u662f\u5b89\u88c5 <code>maliang</code> \u53ca\u5176\u5168\u90e8\u7684\u53ef\u9009\u4f9d\u8d56\u5305\uff0c\u7b2c\u4e8c\u6761\u547d\u4ee4\u662f\u5b89\u88c5 <code>maliang</code> \u7684\u5b98\u65b9\u6269\u5c55\u5305\u3002</p> <p>\u6240\u6709\u7684\u53ef\u9009\u4f9d\u8d56\u5305\u4fe1\u606f\u5982\u4e0b\uff1a</p> <ul> <li>albertosottile/darkdetect: \u63d0\u4f9b\u64cd\u4f5c\u7cfb\u7edf\u4e3b\u9898\u68c0\u6d4b</li> <li>python-pillow/Pillow: \u63d0\u4f9b\u66f4\u591a\u7c7b\u578b\u56fe\u7247\u7684\u4f7f\u7528\u53ca\u4f18\u5316\u56fe\u7247\u7f29\u653e\u901f\u5ea6</li> <li>Akascape/py-window-styles: \u63d0\u4f9b\u4e00\u4e9b Windows \u7cfb\u7edf\u7684\u7a97\u53e3\u6548\u679c</li> <li>Zingzy/hPyT: \u63d0\u4f9b\u66f4\u591a Windows \u7cfb\u7edf\u7a97\u53e3\u7684\u914d\u7f6e\u9009\u9879</li> <li>littlewhitecloud/win32material: \u63d0\u4f9b\u66f4\u591a Windows \u7cfb\u7edf\u7a97\u53e3\u7684\u914d\u7f6e\u9009\u9879</li> </ul> <p>\u6240\u6709\u7684\u5b98\u65b9\u6269\u5c55\u5305\u4fe1\u606f\u5982\u4e0b\uff1a</p> <ul> <li>Xiaokang2022/maliang-mpl: \u63d0\u4f9b <code>matplotlib</code> \u5305\u7684\u76f8\u5173\u652f\u6301</li> <li>Xiaokang2022/maliang-media: \u63d0\u4f9b\u5a92\u4f53\u6587\u4ef6\u7684\u76f8\u5173\u652f\u6301</li> <li>Xiaokang2022/maliang-three: \u63d0\u4f9b\u7b80\u5355 3D \u7ed8\u56fe\u7684\u76f8\u5173\u652f\u6301</li> </ul> <p>\u5982\u679c\u60a8\u53ea\u60f3\u5b89\u88c5\u4e0a\u8ff0\u7684\u90e8\u5206\u5305\uff0c\u53ef\u4ee5\u5355\u72ec\u4f7f\u7528 pip  \u8fdb\u884c\u5b89\u88c5\u3002</p>","tags":["\u5165\u95e8","\u5b89\u88c5","\u73af\u5883\u642d\u5efa"]},{"location":"tutorials/chapter_01/1/#23-\u63a8\u8350\u5b89\u88c5","title":"2.3 \u63a8\u8350\u5b89\u88c5","text":"<p>\u4ee5\u4e0b\u662f\u5b89\u88c5\u547d\u4ee4\uff1a</p> <pre><code>pip install maliang[opt]\n</code></pre> <p><code>maliang</code> \u76ee\u524d\u6240\u5fc5\u987b\u5b89\u88c5\u7684\u4f9d\u8d56\u5305\u53ea\u6709\u4e0a\u9762\u63d0\u5230\u7684\u4e00\u4e2a\uff0c\u5b83\u53ea\u662f\u7528\u6765\u5f3a\u5316\u7c7b\u578b\u63d0\u793a\u7684\uff0c\u4f46\u4e3a\u4e86\u60a8\u7684\u826f\u597d\u4f53\u9a8c\uff0c\u5efa\u8bae\u5b89\u88c5\u63a8\u8350\u7684\u53ef\u9009\u4f9d\u8d56\u5305\uff0c\u5373\u7528 pip \u5b89\u88c5\u65f6\u52a0\u4e0a\u4e0a\u8ff0\u547d\u4ee4\u7684 \u201copt\u201d \u5b57\u6bb5\u3002</p>","tags":["\u5165\u95e8","\u5b89\u88c5","\u73af\u5883\u642d\u5efa"]},{"location":"tutorials/chapter_01/1/#24-\u5347\u7ea7\u5b89\u88c5","title":"2.4 \u5347\u7ea7\u5b89\u88c5","text":"<p>\u5982\u679c\u60a8\u4e4b\u524d\u5b89\u88c5\u8fc7 <code>maliang</code>\uff0c\u4f46\u5e76\u4e0d\u662f\u6700\u65b0\u7248\u672c\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u8fdb\u884c\u5347\u7ea7\uff1a</p> <pre><code>pip install --upgrade maliang\n</code></pre> <p>\u5f53\u7136\uff0c\u5982\u679c\u9700\u8981\u540c\u6b65\u5347\u7ea7\u53ef\u9009\u5305\u6216\u8005\u6269\u5c55\u5305\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u4e0b\u9762\u7684\u547d\u4ee4\uff1a</p> <pre><code>pip install --upgrade maliang[opt]\npip install --upgrade maliang[ext]\n</code></pre>","tags":["\u5165\u95e8","\u5b89\u88c5","\u73af\u5883\u642d\u5efa"]},{"location":"tutorials/chapter_01/1/#25-\u68c0\u9a8c\u5b89\u88c5","title":"2.5 \u68c0\u9a8c\u5b89\u88c5","text":"<p>\u8fd0\u884c\u4ee5\u4e0b\u4ee3\u7801\u6765\u68c0\u9a8c <code>maliang</code> \u662f\u5426\u5b89\u88c5\u6210\u529f\uff1a</p> <pre><code>pip show maliang\n</code></pre> <p>\u82e5\u8fd0\u884c\u65e0\u8bef\uff0c\u5219\u53ef\u4ee5\u5728\u7ec8\u7aef\u8f93\u51fa\u4e2d\u770b\u5230\u5f53\u524d <code>maliang</code> \u7684\u7248\u672c\u3002</p>","tags":["\u5165\u95e8","\u5b89\u88c5","\u73af\u5883\u642d\u5efa"]},{"location":"tutorials/chapter_01/1/#\u4e09\u4f53\u9a8c\u6700\u65b0\u529f\u80fd","title":"\u4e09\u3001\u4f53\u9a8c\u6700\u65b0\u529f\u80fd","text":"<p>\u6709\u4e9b\u529f\u80fd\u53ef\u80fd\u5e76\u672a\u5b58\u5728\u4e8e\u5f53\u524d\u6700\u65b0\u7248\u7684 <code>maliang</code> \u4e2d\uff0c\u8fd9\u5c31\u9700\u8981\u4e0b\u8f7d\u5b89\u88c5\u6700\u65b0\u63d0\u4ea4\u7684\u7248\u672c\uff0c\u5176\u5b89\u88c5\u65b9\u5f0f\u5e76\u4e0d\u662f\u76f4\u63a5\u540c PyPI \u4e0a\u4e0b\u8f7d\uff0c\u800c\u662f\u514b\u9686\u5b58\u50a8\u5e93\u540e\u518d\u4e0b\u8f7d\u7684\u3002</p> <p>\u7279\u522b\u6ce8\u610f\uff1a\u6700\u65b0\u7248\u672c\u53ef\u80fd\u6784\u5efa\u5931\u8d25</p> <p>\u6700\u65b0\u7248\u672c\u662f\u5b9e\u65f6\u5728\u6e90\u4ee3\u7801\u4ed3\u5e93\u4e2d\u6784\u5efa\u7684\uff0c\u4f46\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u68c0\u67e5\u548c\u6d4b\u8bd5\u5b8c\u5168\u901a\u8fc7\uff0c\u5176\u5b9e\u65f6\u72b6\u6001\u5982\u4e0b\uff08\u6ce8\u610f\u6d4b\u8bd5\u8986\u76d6\u7387\u53ef\u80fd\u5e76\u975e 100%\uff09\uff1a</p> <p> </p> <p>\u4e0b\u9762\u662f\u5b89\u88c5\u547d\u4ee4\uff1a</p> <pre><code>git clone https://github.com/Xiaokang2022/maliang.git\ncd maliang\npip install . #(1)!\n</code></pre> <ol> <li> <p>\u5f53\u7136\uff0c\u4f60\u4e5f\u53ef\u4ee5\u8fd9\u6837\u5199</p> <pre><code>pip install .[opt]\n</code></pre> <p>\u6216\u8005</p> <pre><code>pip install .[ext]\n</code></pre> </li> </ol> <p>\u53e6\u9644\uff1a\u5982\u679c\u65e0\u6cd5\u8bbf\u95ee GitHub\uff0c\u53ef\u4f7f\u7528\u955c\u50cf\u6e90\u540c\u540d\u4ed3\u5e93\u7684\u5730\u5740\uff1a(1)</p> <ol> <li>\u955c\u50cf\u6e90\u6570\u636e\u4e00\u822c\u4f1a\u5728 24 \u5c0f\u65f6\u5185\u540c\u6b65\uff0c\u53ef\u80fd\u66f4\u65b0\u4e0d\u53ca\u65f6\uff0c\u4e00\u5207\u4ee5 GitHub \u7684\u6570\u636e\u4e3a\u51c6\uff01</li> </ol> <ul> <li>Gitee\uff08\u9996\u9009\u955c\u50cf\u6e90\uff09:</li> </ul> <pre><code>git clone https://gitee.com/Xiaokang2022/maliang.git\ncd maliang\npip install .\n</code></pre> <ul> <li>GitCode:</li> </ul> <pre><code>git clone https://gitcode.com/Xiaokang2022/maliang.git\ncd maliang\npip install .\n</code></pre>","tags":["\u5165\u95e8","\u5b89\u88c5","\u73af\u5883\u642d\u5efa"]},{"location":"tutorials/chapter_01/2/","title":"\u00a71.2 \u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684\u754c\u9762","text":"<p> \u5b57\u6570 577 \u4e2a \u00a0 \u4ee3\u7801 33 \u884c \u00a0 \u56fe\u7247 4 \u5f20 \u00a0 \u9605\u8bfb\u65f6\u95f4 2 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p>\u672c\u8282\u4e0d\u5bf9 <code>maliang</code> \u7684\u5177\u4f53\u4f7f\u7528\u505a\u8be6\u7ec6\u8bb2\u89e3\uff0c\u8fd9\u91cc\u53ea\u662f\u7ed9\u5927\u5bb6\u63d0\u4f9b\u4e00\u4e2a\u7b80\u5355\u7a0b\u5e8f\u4f53\u9a8c\u4e00\u4e0b <code>maliang</code>\u3002</p> <p>\u4ee5\u6700\u7b80\u5355\u7684\u767b\u5f55\u7a97\u53e3\u4e3a\u4f8b\uff0c\u8bf4\u660e\u4e00\u4e0b\u4f7f\u7528 <code>maliang</code> \u642d\u5efa\u56fe\u5f62\u754c\u9762\u7684\u6d41\u7a0b\u662f\u600e\u6837\u7684\u3002</p>","tags":["\u5165\u95e8"]},{"location":"tutorials/chapter_01/2/#\u4e00\u767b\u5f55\u7a97\u53e3","title":"\u4e00\u3001\u767b\u5f55\u7a97\u53e3","text":"","tags":["\u5165\u95e8"]},{"location":"tutorials/chapter_01/2/#11-\u6784\u5efa\u7a97\u53e3","title":"1.1 \u6784\u5efa\u7a97\u53e3","text":"<p>\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u4ee5\u6784\u5efa\u4e00\u4e2a\u6807\u9898\u4e3a \u201c\u767b\u5f55\u201d \u5e76\u4e14\u5c45\u4e2d\u7a97\u53e3</p> <pre><code>import maliang\n\nroot = maliang.Tk(title=\"\u767b\u5f55\")\nroot.center()\nroot.mainloop()\n</code></pre> <p><code>maliang</code> \u662f\u652f\u6301\u6697\u8272\u6a21\u5f0f\u7684\uff0c\u5982\u679c\u60a8\u88c5\u6709 <code>darkdetect</code> \u53ef\u9009\u4f9d\u8d56\u5305\uff0c\u5219 <code>maliang</code> \u4e0d\u4ec5\u4ec5\u4f1a\u5c06\u754c\u9762\u6e32\u67d3\u6210\u6697\u8272\uff0c\u7a97\u53e3\u4e5f\u4f1a\u66f4\u6539\u4e3a\u6697\u8272\u6a21\u5f0f\u3002</p> <p>\u7279\u522b\u6ce8\u610f\uff1a\u7a97\u53e3\u7684\u6697\u8272\u6a21\u5f0f\u53ef\u80fd\u4e0d\u751f\u6548</p> <p><code>third-party</code>\uff1a\u7b2c\u4e09\u65b9\u5305\u529f\u80fd</p> <p>\u7a97\u53e3\u672c\u8eab\u7684\u6697\u8272\u6a21\u5f0f\u5728\u90e8\u5206\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u53ef\u80fd\u4e0d\u4f1a\u751f\u6548\uff08\u5982\u90e8\u5206 Linux \u7cfb\u7edf\uff09\uff0c\u4f46\u7a97\u53e3\u5185\u90e8\u7684\u63a7\u4ef6\u7b49\u7684\u6697\u8272\u6a21\u5f0f\u662f\u53ef\u4ee5\u4fee\u6539\u7684\u3002\u5173\u4e8e\u7a97\u53e3\u7684\u6697\u8272\u6a21\u5f0f\uff0c\u6a21\u5f0f\u7684\u68c0\u6d4b\u4e0e\u7b2c\u4e09\u65b9\u5305 albertosottile/darkdetect \u6709\u5173\uff0c\u6a21\u5f0f\u7684\u652f\u6301\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u53ca\u76f8\u5173\u7b2c\u4e09\u65b9\u5305\u6709\u5173\uff0c\u4e0b\u9762\u662f\u5bf9\u5e94\u5173\u7cfb\uff1a</p> <ul> <li>Windows: Akascape/py-window-styles</li> <li>Linux: \u6682\u4e0d\u652f\u6301\u624b\u52a8\u4fee\u6539</li> <li>macOS: \u6682\u4e0d\u652f\u6301\u624b\u52a8\u4fee\u6539</li> </ul>","tags":["\u5165\u95e8"]},{"location":"tutorials/chapter_01/2/#12-\u521b\u5efa\u753b\u5e03","title":"1.2 \u521b\u5efa\u753b\u5e03","text":"<p><code>maliang</code> \u7684\u5b97\u65e8\u5c31\u662f\uff0c\u4e00\u5207\u90fd\u662f\u901a\u8fc7\u753b\u5e03\u201c\u753b\u201d\u51fa\u6765\u7684\uff0c\u4f60\u53ef\u4ee5\u628a\u753b\u5e03\u5f53\u4f5c\u7f51\u9875\u7684\u9875\u9762\uff0c\u6bcf\u4e00\u9875\u5c31\u662f\u4e00\u4e2a\u753b\u5e03\u5b9e\u4f8b\u3002\u4f7f\u7528 <code>Canvas</code> \u6765\u521b\u5efa\u753b\u5e03\u3002</p> <pre><code>import maliang\n\nroot = maliang.Tk(title=\"\u767b\u5f55\")\nroot.center()\n\ncv = maliang.Canvas(auto_zoom=True, keep_ratio=\"min\", free_anchor=True)\ncv.place(width=1280, height=720, x=640, y=360, anchor=\"center\")\n\nroot.mainloop()\n</code></pre>","tags":["\u5165\u95e8"]},{"location":"tutorials/chapter_01/2/#13-\u521b\u5efa\u63a7\u4ef6","title":"1.3 \u521b\u5efa\u63a7\u4ef6","text":"<p>\u521b\u5efa\u4e00\u4e9b\u63a7\u4ef6\u6765\u5b9e\u73b0\u767b\u5f55\u7a97\u53e3\u3002</p> <pre><code>import maliang\n\nroot = maliang.Tk(title=\"\u767b\u5f55\")\nroot.center()\n\ncv = maliang.Canvas(auto_zoom=True, keep_ratio=\"min\", free_anchor=True)\ncv.place(width=1280, height=720, x=640, y=360, anchor=\"center\")\n\nmaliang.Text(cv, (640, 200), text=\"\u8d26 \u53f7 \u767b \u5f55\", fontsize=48, anchor=\"center\")\n\nmaliang.Text(cv, (450, 300), text=\"\u8d26\u53f7\", anchor=\"nw\")\nmaliang.InputBox(cv, (450, 340), (380, 50), placeholder=\"\u70b9\u51fb\u8f93\u5165\u8d26\u53f7\")\nmaliang.Text(cv, (450, 400), text=\"\u5bc6\u7801\", anchor=\"nw\")\nmaliang.InputBox(cv, (450, 440), (380, 50), show=\"\u25cf\", placeholder=\"\u70b9\u51fb\u8f93\u5165\u5bc6\u7801\")\n\nmaliang.Button(cv, (450, 540), (180, 50), text=\"\u6ce8 \u518c\")\nmaliang.Button(cv, (650, 540), (180, 50), text=\"\u767b \u5f55\")\n\nroot.mainloop()\n</code></pre> <p>\u8fd9\u6837\u5c31\u5b8c\u6210\u4e86\u4e00\u4e2a\u6ca1\u6709\u529f\u80fd\u7684\u767b\u5f55\u754c\u9762\u3002\u4f60\u53ef\u4ee5\u5728\u6b64\u65f6\u5c1d\u8bd5\u7740\u66f4\u6539\u64cd\u4f5c\u7cfb\u7edf\u989c\u8272\u6a21\u5f0f\uff0c\u770b\u770b\u8be5\u7a97\u53e3\u7684\u989c\u8272\u6a21\u5f0f\u4f1a\u4e0d\u4f1a\u8ddf\u968f\u6539\u53d8\u3002(1)</p> <ol> <li>\ud83d\udca1\u4f60\u4e5f\u53ef\u4ee5\u5728\u9875\u9762\u9876\u680f\u8bd5\u7740\u5207\u6362\u7f51\u7ad9\u7684\u4e3b\u9898\uff08\u70b9\u51fb\u56fe\u6807  \u6765\u5207\u6362\uff09\uff0c\u770b\u770b\u4e0d\u540c\u4e3b\u9898\u4e0b\u7a0b\u5e8f\u8fd0\u884c\u7684\u6548\u679c</li> </ol> \u56fe1 \u6559\u7a0b\u73af\u5883\u4e0b\u7684\u8fd0\u884c\u7ed3\u679c <p>\u6e29\u99a8\u63d0\u793a\uff1a\u754c\u9762\u5916\u89c2\u4e0e\u7cfb\u7edf\u6709\u5173</p> <p>\u5bf9\u4e8e\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c<code>maliang</code> \u6784\u5efa\u51fa\u6765\u7684\u754c\u9762\u7684\u5916\u89c2\u4e0d\u4e00\u5b9a\u76f8\u540c\uff0c\u82e5\u6ca1\u6709\u5f3a\u5236\u6307\u5b9a <code>maliang</code> \u7684\u7cfb\u7edf\u53d8\u91cf\uff0c<code>maliang</code> \u4f1a\u81ea\u52a8\u83b7\u53d6\u5f53\u524d\u7cfb\u7edf\u7c7b\u578b\uff0c\u5e76\u6839\u636e\u7c7b\u578b\u7ed8\u5236\u4e0d\u540c\u7684\u754c\u9762\u5916\u89c2\u3002\u5982\u5728 Windows10 \u548c Windows11 \u4e2d\u7684\u754c\u9762\u5c31\u4e0d\u76f8\u540c\uff0cWindows10 \u7684\u754c\u9762\u66f4\u7b26\u5408 Windows10 \u98ce\u683c\uff08\u5982\u4e0b\uff09\uff1a</p> <p> </p>","tags":["\u5165\u95e8"]},{"location":"tutorials/chapter_01/3/","title":"\u00a71.3 \u6846\u67b6\u6982\u8ff0","text":"<p> \u5b57\u6570 1516 \u4e2a \u00a0 \u9605\u8bfb\u65f6\u95f4 5 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p>","tags":["\u989d\u5916\u5185\u5bb9"]},{"location":"tutorials/chapter_01/3/#\u4e00\u8d77\u56e0","title":"\u4e00\u3001\u8d77\u56e0","text":"","tags":["\u989d\u5916\u5185\u5bb9"]},{"location":"tutorials/chapter_01/3/#11-\u4e3a\u4ec0\u4e48\u8981\u5199-maliang","title":"1.1 \u4e3a\u4ec0\u4e48\u8981\u5199 <code>maliang</code>","text":"<p>Python \u5728\u56fe\u5f62\u5316\u7a0b\u5e8f\u7684\u5f00\u53d1\u4e0a\u9664\u4e86\u53ef\u4ee5\u9009\u62e9\u5185\u7f6e\u7684 <code>tkinter</code> \u4e4b\u5916\uff0c\u5b9e\u9645\u8fd8\u6709\u5f88\u591a\u4f18\u79c0\u7684\u7b2c\u4e09\u65b9\u5305\u6765\u652f\u6301\uff0c\u5982 <code>PySide</code>\u3001<code>PyQT</code>\u3001<code>wxpython</code> \u7b49\u7b49\uff0c\u4f46\u4e3a\u4ec0\u4e48\u6211\u8fd8\u8981\u5f00\u53d1 <code>maliang</code> \u5462\uff1f</p> <p>\u5b9e\u9645\u4e0a\uff0c\u6700\u5f00\u59cb\u5199 <code>maliang</code> \u7684\u76ee\u7684\u5e76\u975e\u662f\u8981\u6784\u5efa\u4ec0\u4e48\u6846\u67b6\uff0c\u800c\u53ea\u662f\u4f5c\u4e3a\u4e00\u4e2a\u8f85\u52a9\u5de5\u5177\uff0c\u8f85\u52a9\u6211\u81ea\u5df1\u5f00\u53d1\u56fe\u5f62\u5316\u7684\u7a0b\u5e8f\uff0c\u8fd9\u5728\u524d\u9762\u4e5f\u5df2\u7ecf\u8bb2\u8fc7\u4e86\uff0c\u4f46\u968f\u7740\u91cf\u7684\u9010\u6e10\u589e\u52a0\uff0c<code>maliang</code> \u4e5f\u53d8\u5f97\u50cf\u4e2a\u6837\u5b50\u4e86\uff0c\u4e8e\u662f\u6211\u7684\u76ee\u6807\u4e0d\u518d\u53ea\u662f\u5c06\u5176\u4f5c\u4e3a\u4e00\u4e2a\u8f85\u52a9\u5de5\u5177\uff0c\u800c\u662f\u4f5c\u4e3a\u4e00\u4e2a\u7b80\u6613\u7684 UI \u6846\u67b6\uff0c\u5728\u5e2e\u6211\u5b9e\u73b0\u67d0\u4e9b\u529f\u80fd\u7684\u540c\u65f6\uff0c\u5f00\u6e90\u51fa\u6765\uff0c\u8ba9\u5927\u5bb6\u4e00\u8d77\u4f7f\u7528\uff0c\u4e00\u8d77\u5f00\u53d1\u3002</p>","tags":["\u989d\u5916\u5185\u5bb9"]},{"location":"tutorials/chapter_01/3/#12-\u4e3a\u4ec0\u4e48\u9009\u62e9-tkinter-\u4f5c\u4e3a\u5e95\u5c42","title":"1.2 \u4e3a\u4ec0\u4e48\u9009\u62e9 <code>tkinter</code> \u4f5c\u4e3a\u5e95\u5c42","text":"<p>\u4f60\u5176\u5b9e\u53ef\u4ee5\u60f3\u4e00\u4e0b\uff0cPython \u5df2\u662f\u5f53\u4eca\u4e16\u754c\u4e0a\u6700\u6d41\u884c\u7684\u7f16\u7a0b\u8bed\u8a00\u4e86\uff0c\u65e2\u7136\u5b83\u5982\u6b64\u6d41\u884c\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u4f1a\u9009\u62e9 <code>tkinter</code> \u4f5c\u4e3a\u5185\u7f6e\u7684\u56fe\u5f62\u5316\u63a5\u53e3\u5462\uff1f</p> <p>\u5f88\u591a\u4eba\u90fd\u8bf4 <code>tkinter</code> \u4e11\u964b\u3001\u843d\u540e\u4ee5\u53ca\u6027\u80fd\u4f4e\u4e0b\uff0cPython \u5b98\u65b9\u5c06\u5176\u5185\u7f6e\u53ea\u662f\u56e0\u4e3a\u5b83\u7684\u8bed\u6cd5\u7b80\u5355\u3002\u8bf6\u563f\uff0c\u8fd9\u201c\u8bed\u6cd5\u7b80\u5355\u201d\u5c31\u5f88\u5173\u952e\u4e86\uff01\u4f17\u6240\u5468\u77e5\uff0cPython \u7684\u7b80\u5355\u6613\u7528\u5c31\u662f\u5176\u51fa\u8272\u7684\u7279\u70b9\u4e4b\u4e00\uff0c\u56e0\u6b64\u9009\u62e9\u540c\u6837\u7b80\u5355\u7684\u56fe\u5f62\u5e93\u5c31\u975e\u5e38\u5408\u7406\u4e86\u3002\u5f53\u7136\uff0c\u8fd9\u4e9b\u5176\u5b9e\u90fd\u53ea\u662f\u5927\u5bb6\u7684\u731c\u6d4b\uff0c\u5b98\u65b9\u4e0d\u4e00\u5b9a\u662f\u8fd9\u6837\u60f3\u7684\u3002</p> <p>\u4e2a\u4eba\u8ba4\u4e3a\uff0c<code>tkinter</code> \u7684\u5e95\u5c42\uff0cTk/Tcl \u6d89\u53ca\u5230\u5f88\u591a\u7684\u4e1c\u897f\uff0c\u5b98\u65b9\u65e0\u6cd5\u5c06\u5176\u5f03\u7f6e\uff0c\u6240\u4ee5\u624d\u4f1a\u4e00\u76f4\u9009\u7528\u5b83\u3002\u9996\u5148\uff0cTk/Tcl \u975e\u5e38\u5c0f\uff0c\u5728 UI \u6846\u67b6\u91cc\u9762\u5c5e\u4e8e\u6781\u5176\u8f7b\u91cf\u7ea7\u7684\uff0c\u6b64\u5916\u5b83\u8de8\u5e73\u53f0\u3001\u5f00\u6e90\u3001\u514d\u8d39\u3001\u6613\u7528\u3001\u517c\u5bb9\u6027\u975e\u5e38\u597d\uff0c\u5f88\u591a\u5e93\u548c\u5c0f\u5de5\u5177\u90fd\u4e0e\u5176\u505a\u4e86\u5bf9\u63a5\u3002\u6bd4\u5982\u4f7f\u7528\u91cf\u6700\u5927\u7684\u5f00\u6e90\u8f7b\u91cf\u7ea7\u6570\u636e\u5e93 SQLite \u5c31\u6709\u5bf9 Tcl \u7684\u5bf9\u63a5\uff0c\u800c\u6b63\u597d Python \u6709\u4e2a\u5185\u7f6e\u5e93 <code>sqlite3</code> \u5b9e\u73b0\u4e86 SQLite \u7684\u63a5\u53e3\u3002</p> <p>\u6b64\u5916\uff0cPython \u8fd8\u6709\u591a\u4e2a\u5185\u7f6e\u5e93\u90fd\u4f7f\u7528\u4e86 <code>tkinter</code>\uff0c\u5982\u4ee5\u6559\u80b2\u65b9\u9762\u8457\u540d\u5185\u7f6e\u5e93 <code>turtle</code> \u5c31\u662f\u4ee5 <code>tkinter</code> \u4e3a\u5e95\u5c42\u7684\uff0c\u8fd8\u6709\u5185\u7f6e\u5e93 <code>idlelib</code> \u5b9e\u73b0\u4e86 Python \u6253\u5f00\u5373\u7528\u7684\u96c6\u6210\u5f00\u53d1\u73af\u5883 IDLE\uff0c\u5176\u5e95\u5c42\u4e5f\u662f <code>tkinter</code>\u3002</p> <p>\u8fd9\u4e9b\u8fd8\u662f\u5185\u7f6e\u5e93\u7684\uff0c\u7b2c\u4e09\u65b9\u5e93\u4e5f\u6709\u4e0d\u5c11\u505a\u4e86\u4e0e <code>tkinter</code> \u7684\u5bf9\u63a5\uff0c\u5982 <code>matplotlib</code>\u3001<code>pillow</code> \u7b49\u3002</p> <p>\u6240\u4ee5\uff0c\u4e3a\u4ec0\u4e48\u9009\u62e9 <code>tkinter</code> \u4f5c\u4e3a <code>maliang</code> \u7684\u5e95\u5c42\uff0c\u539f\u56e0\u5c31\u5f88\u7b80\u5355\u4e86\u3002</p>","tags":["\u989d\u5916\u5185\u5bb9"]},{"location":"tutorials/chapter_01/3/#\u4e8c\u8bbe\u8ba1\u76ee\u6807","title":"\u4e8c\u3001\u8bbe\u8ba1\u76ee\u6807","text":"","tags":["\u989d\u5916\u5185\u5bb9"]},{"location":"tutorials/chapter_01/3/#21-\u76ee\u6807\u7531\u6765","title":"2.1 \u76ee\u6807\u7531\u6765","text":"<p>\u8bf4\u5b8c\u8d77\u56e0\u4e86\uff0c\u5c31\u8be5\u8bf4\u8bf4 <code>maliang</code> \u7684\u9884\u671f\u76ee\u6807\u4e86\u3002\u65e2\u7136\u8981\u5f00\u53d1\u4e00\u4e2a UI \u6846\u67b6\uff0c\u5c31\u96be\u514d\u4e0d\u548c\u5176\u5b83\u6210\u719f\u7684 UI \u6846\u67b6\u53bb\u505a\u6bd4\u8f83\uff0c\u65e2\u7136\u8981\u6bd4\u8f83\uff0c\u90a3\u5c31\u5fc5\u987b\u8981\u6709\u4f18\u52bf\u624d\u884c\u3002</p> <p>\u622a\u81f3 <code>tkintertools 2</code>\uff08<code>maliang</code> \u7684\u524d\u4ee3\u7248\u672c\uff09\uff0c\u76ee\u6807\u90fd\u4e0d\u662f\u4ee5 UI \u6846\u67b6\u53bb\u5b9a\u4e49\u7684\uff0c\u4ece <code>maliang</code> \u5f00\u59cb\uff0c\u624d\u771f\u6b63\u5730\u5411\u7740\u4e00\u4e2a UI \u6846\u67b6\u8d70\u3002<code>maliang</code> \u8d77\u521d\u662f\u4e00\u4e2a\u8f85\u52a9\u5de5\u5177\uff0c\u56e0\u6b64\u5b83\u5c31\u5e94\u8be5\u4ece\u4ee5\u524d\u7248\u672c\u7684\u5f00\u59cb\uff0c\u5177\u5907\u4e00\u4e9b\u5f25\u8865 <code>tkinter</code> \u7f3a\u70b9\u7684\u529f\u80fd\uff0c\u4e8e\u662f\u76ee\u6807\u5f88\u7b80\u5355\uff0c\u628a <code>tkinter</code> \u5f88\u96be\u505a\u7684\u529f\u80fd\u7ed9\u5b9e\u73b0\u51fa\u6765\uff0c\u5e76\u5c06\u5176\u5c01\u88c5\u597d\uff0c\u63d0\u4f9b\u7b80\u5355\u6613\u7528\u7684\u63a5\u53e3\u7ed9\u7528\u6237\u4f7f\u7528\u3002</p> <p>\u8fd9\u4e00\u76ee\u6807\u548c\u4e00\u5f00\u6e90 UI \u6846\u67b6 TomSchimansky/CustomTkinter \u5f88\u50cf\u3002\u4ece\u540d\u5b57\u4e0a\u6765\u770b\uff0c<code>customtkinter</code> \u53ef\u4ee5\u9ad8\u5ea6\u81ea\u5b9a\u4e49\u4f60\u7684 <code>tkinter</code> \u7a0b\u5e8f\uff0c<code>maliang</code> \u7684\u76ee\u6807\u4e5f\u662f\u5982\u6b64\uff0c\u4f46\u8fd9\u8fd8\u4e0d\u591f\u3002\u56e0\u4e3a\u518d\u600e\u4e48\u6837\uff0c<code>customtkinter</code> \u7684\u63a7\u4ef6\u90fd\u65e0\u6cd5\u8131\u79bb <code>tkinter</code> \u7684\u771f\u5b9e\u63a7\u4ef6\uff0c\u8fd9\u5c31\u5bfc\u81f4\u63a7\u4ef6\u6570\u91cf\u5341\u5206\u6709\u9650\uff0c\u90a3\u4e48\u8be5\u600e\u4e48\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u5462\uff1f</p>","tags":["\u989d\u5916\u5185\u5bb9"]},{"location":"tutorials/chapter_01/3/#22-\u4e3b\u4f53\u601d\u8def","title":"2.2 \u4e3b\u4f53\u601d\u8def","text":"<p>\u5176\u5b9e\uff0c\u65e0\u8bba\u4efb\u4f55\u63a7\u4ef6\uff0c\u5176\u5f52\u6839\u7ed3\u5e95\uff0c\u90fd\u662f\u5728\u8ba1\u7b97\u673a\u5c4f\u5e55\u4e0a\u7ed8\u5236\u51fa\u6765\u7684\uff0c\u90a3\u4e9b UI \u6548\u679c\u65e0\u975e\u5c31\u662f\u5bf9\u7ed8\u5236\u51fa\u6765\u7684\u56fe\u5f62\u548c\u989c\u8272\u52a0\u4ee5\u63a7\u5236\u7f62\u4e86\u3002\u8bd5\u60f3\u5b8c\u5168\u628a\u6574\u4e2a\u7a97\u53e3\u5f53\u6210\u4e00\u4e2a\u753b\u5e03\uff0c\u800c UI \u5c31\u662f\u5728\u4e0a\u9762\u753b\u753b\u800c\u5df2\u3002\u4e8e\u662f\uff0c<code>maliang</code> \u7684\u5f00\u53d1\u4e3b\u4f53\u601d\u8def\u5c31\u5b9a\u4e0b\u6765\u4e86\uff0c\u5c31\u662f\u7528 <code>tkinter.Canvas</code> \u5bf9\u8c61\u6765\u5f53\u505a\u7a97\u53e3\uff0c\u800c\u7528\u6237\u8981\u505a\u7684\u5c31\u662f\u5728\u4e0a\u9762\u201c\u753b\u201d UI\uff01</p> <p>\u7531\u4e8e\u4e00\u5207\u90fd\u662f\u901a\u8fc7\u753b\u5e03\u7ed8\u5236\u7684\uff0c\u56e0\u6b64\u7406\u8bba\u4e0a\u53ef\u4ee5\u5b9e\u73b0\u4efb\u4f55\u63a7\u4ef6\uff0c\u9650\u5236\u5404\u4f4d\u5f00\u53d1\u8005\u7684\u4e0d\u518d\u662f\u5e95\u5c42\u548c\u5e73\u53f0\uff0c\u800c\u662f\u5927\u5bb6\u7684\u60f3\u8c61\u529b\uff01</p>","tags":["\u989d\u5916\u5185\u5bb9"]},{"location":"tutorials/chapter_01/3/#\u4e09\u57fa\u672c\u6846\u67b6","title":"\u4e09\u3001\u57fa\u672c\u6846\u67b6","text":"","tags":["\u989d\u5916\u5185\u5bb9"]},{"location":"tutorials/chapter_01/3/#31-\u63a7\u4ef6\u6784\u5efa\u6846\u67b6","title":"3.1 \u63a7\u4ef6\u6784\u5efa\u6846\u67b6","text":"<p><code>maliang</code> \u7684\u6784\u5efa\u63a7\u4ef6\u57fa\u672c\u6846\u67b6\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <pre><code>flowchart LR\n\n    app{{APP}}\n    tk(Tk)\n    tp1(Toplevel 1)\n    tp2(Toplevel 2)\n    cv1(Canvas 1)\n    cv2(Canvas 2)\n    wid1([Widget 1])\n    wid2([Widget 2])\n    wid3([Widget 3])\n    cp1([Element 1])\n    cp2([Element 2])\n    it1[Item 1]\n    it2[Item 2]\n    _1(More...)\n    _2([More...])\n    _3([More...])\n    _4[More...]\n    _5(More...)\n\n    app --&gt; tp1; app --&gt; tp2; app --&gt; tk; app --&gt; _5;\n    tk --&gt; cv1; tk --&gt; cv2; tk --&gt; _1;\n    cv2 --&gt; wid1; cv2 --&gt; wid2; cv2 --&gt; _2;\n    wid2 --&gt; cp1; wid2 --&gt; cp2; wid2 --&gt; _3; wid2 --&gt; wid3;\n    cp2 --&gt; it1; cp2 --&gt; it2; cp2 --&gt; _4;</code></pre> <p>\u5176\u4e2d\u5706\u89d2\u77e9\u5f62\u5305\u8d77\u6765\u7684\u662f\u4ece <code>tkinter</code> \u4e2d\u7ee7\u627f\u800c\u6765\u7684\u5bf9\u8c61\uff0c\u534a\u5706\u77e9\u5f62\u7684\u662f <code>maliang</code> \u4e2d\u5b9a\u4e49\u7684\u5bf9\u8c61\uff0c\u77e9\u5f62\u7684\u662f\u4e00\u4e2a\u7279\u6b8a\u5bf9\u8c61\uff0c\u5373\u753b\u5e03\u5143\u7d20\uff0c\u5728 Python \u4e2d\u4f53\u73b0\u4e3a\u4e00\u4e2a <code>int</code> \u7c7b\u578b\u3002</p> <p>\u8fd9\u91cc\u7684\u63a7\u4ef6\uff08<code>Widget</code>\uff09\u57fa\u672c\u53ef\u4ee5\u8ba4\u4e3a\u662f <code>tkinter.Widget</code>\uff0c\u4f46\u6b64\u5904\u7684\u5143\u7d20\uff08<code>Element</code>\uff09\u6216\u8bb8\u9700\u8981\u6211\u89e3\u91ca\u4e00\u4e0b\u3002\u7b80\u5355\u8bf4\u5c31\u662f\uff0c\u63a7\u4ef6\u7684\u5916\u89c2\u662f\u7531\u8fd9\u4e9b\u5143\u7d20\u53ca\u63a7\u4ef6\u7ec4\u6210\u7684\uff0c\u800c\u5143\u7d20\u53c8\u662f\u53ef\u4ee5\u7ec6\u5206\u7684\uff0c\u5373\uff1a</p> <pre><code>flowchart TB\n\n    1[Element]\n    2([Text])\n    3([Image])\n    4([Shape])\n    5[Feature]\n    6[Widget]\n    7[Widget]\n    8[Style]\n\n    1 --&gt; 2; 1 --&gt; 3; 1 --&gt; 4;\n    7 --&gt; 6; 7 --&gt; 5; 7 --&gt; 8; 7 --&gt; 1;</code></pre> <p>\u7279\u522b\u8bf4\u660e\uff0c\u8fd9\u91cc\u7684 <code>Feature</code> \u662f\u529f\u80fd\u57fa\u7c7b\uff0c\u662f\u7528\u6765\u63a7\u5236\u63a7\u4ef6\u7684\u529f\u80fd\u7684\uff0c<code>Style</code> \u662f\u6837\u5f0f\u57fa\u7c7b\uff0c\u662f\u7528\u6765\u63a7\u5236\u63a7\u4ef6\u7684\u6837\u5f0f\u7684\u3002\u6b64\u5916\uff0c\u8fd9\u91cc\u7684 <code>Text</code>\u3001<code>Image</code> \u548c <code>Shape</code> \u90fd\u662f\u57fa\u7c7b\uff0c\u5b83\u4eec\u4e0b\u9762\u8fd8\u6709\u5f88\u591a\u7ec6\u5206\u7684\u7c7b\u3002</p>","tags":["\u989d\u5916\u5185\u5bb9"]},{"location":"tutorials/chapter_01/3/#32-\u7ec6\u8282\u5904\u7406","title":"3.2 \u7ec6\u8282\u5904\u7406","text":"<p>\u4e0a\u9762\u90fd\u662f\u5728\u7c7b\u7ea7\u522b\u7684\u6846\u67b6\uff0c\u5728\u5143\u7d20\u62bd\u8c61\u57fa\u7c7b\u4e0b\u8fd8\u53ef\u4ee5\u7ec6\u5206\uff0c\u5982 <code>Shape</code>\uff0c\u53ef\u4ee5\u50cf\u4e0b\u9762\u8fd9\u6837\u6784\u6210\uff1a</p> <pre><code>flowchart TB\n\n    1([Shape])\n    2[line]\n    3[oval]\n    4[rectangle]\n    5[polygon]\n    6[More...]\n\n    1 --&gt; 2; 1 --&gt; 3; 1 --&gt; 4; 1 --&gt; 5; 1 --&gt; 6;</code></pre> <p>\u4e0a\u8ff0\u7684\u8fd9\u4e9b <code>line</code>\u3001<code>oval</code> \u5e76\u4e0d\u662f\u7c7b\uff0c\u800c\u662f\u753b\u5e03\u7684\u7279\u6b8a\u5bf9\u8c61\uff08Item\uff09\uff0c\u4ee5 <code>int</code> \u7684\u5f62\u5f0f\u7684\u5b58\u5728\uff08\u4e0a\u6587\u63d0\u5230\u8fc7\uff09\u3002</p>","tags":["\u989d\u5916\u5185\u5bb9"]},{"location":"tutorials/chapter_01/3/#33-\u6574\u4f53\u6846\u67b6","title":"3.3 \u6574\u4f53\u6846\u67b6","text":"<p>\u4e0a\u8ff0\u4e24\u90e8\u5206\u8bb2\u7684\u90fd\u662f\u63a7\u4ef6\u7684\u6784\u5efa\u7684\u6846\u67b6\uff0c\u5728 <code>maliang</code> \u6e90\u4ee3\u7801\u4e2d\u5c5e\u4e8e\u5305 <code>core</code>\uff08\u6838\u5fc3\u90e8\u5206\uff09\u548c <code>standard</code>\uff08\u6807\u51c6\u4ef6\uff09 \u7684\u5185\u5bb9\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u6709\u5176\u5b83\u7684\u4e00\u4e9b\u5305\uff0c\u5982\uff1a</p> <ul> <li><code>animation</code>: \u7ba1\u7406\u52a8\u753b\u548c\u63a7\u5236\u5668\u51fd\u6570\uff1b</li> <li><code>color</code>: \u989c\u8272\u5904\u7406\uff1b</li> <li><code>theme</code>: \u4e3b\u9898\u63a7\u5236\u4ee5\u53ca\u6837\u5f0f\u6570\u636e\u7684\u89e3\u6790\u548c\u5904\u7406\uff1b</li> <li><code>toolbox</code>: \u63d0\u4f9b\u4e00\u4e9b\u5b9e\u7528\u7684\u5de5\u5177\u7c7b\u548c\u51fd\u6570\uff1b</li> </ul> <p>\u4ee5\u53ca\u4e09\u4e2a\u6269\u5c55\u5305\uff08\u9700\u8981\u901a\u8fc7\u989d\u5916\u7684\u65b9\u5f0f\u5b89\u88c5\uff09\uff1a</p> <ul> <li><code>mpl</code>: \u5b9e\u73b0\u548c\u5904\u7406 <code>matplotlib</code> \u76f8\u5173\u7684\u63a5\u53e3\uff1b</li> <li><code>media</code>: \u5b9e\u73b0\u5bf9\u5e26\u97f3\u9891\u89c6\u9891\u7684\u64ad\u653e\uff1b</li> <li><code>three</code>: \u5b9e\u73b0\u7b80\u5355\u7684 3D \u7ed8\u56fe\uff1b</li> </ul> <p>\u603b\u4e4b\uff0c<code>maliang</code> \u7684\u6574\u4f53\u529f\u80fd\u6781\u4e3a\u4e30\u5bcc\u3002</p>","tags":["\u989d\u5916\u5185\u5bb9"]},{"location":"tutorials/chapter_02/","title":"\u7b2c\u4e8c\u7ae0\uff1a\u5bb9\u5668\u63a7\u4ef6","text":"<p> \u5b57\u6570 66 \u4e2a \u00a0 \u56fe\u7247 2 \u5f20 \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p> </p> <p>\u7ae0\u8282\u6982\u8ff0</p> <p>\u672c\u7ae0\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u5bb9\u5668\u63a7\u4ef6\u7684\u4f7f\u7528\u65b9\u5f0f\u548c\u9700\u8981\u6ce8\u610f\u7684\u5730\u65b9\u3002</p> <p><code>maliang</code> \u4e2d\u7684\u5bb9\u5668\u63a7\u4ef6\u5305\u62ec <code>Tk</code>\u3001<code>Toplevel</code>\u3001<code>Canvas</code>\u3002</p>"},{"location":"tutorials/chapter_02/#\u672c\u7ae0\u5185\u5bb9","title":"\u672c\u7ae0\u5185\u5bb9","text":"<ul> <li>2.1 \u7a97\u53e3\u5bb9\u5668\u63a7\u4ef6</li> <li>2.1 \u753b\u5e03\u5bb9\u5668\u63a7\u4ef6</li> </ul>"},{"location":"tutorials/chapter_02/1/","title":"\u00a72.1 \u7a97\u53e3\u5bb9\u5668\u63a7\u4ef6","text":"<p> \u5b57\u6570 1619 \u4e2a \u00a0 \u4ee3\u7801 55 \u884c \u00a0 \u56fe\u7247 2 \u5f20 \u00a0 \u9605\u8bfb\u65f6\u95f4 6 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p>","tags":["\u63a7\u4ef6","\u5bb9\u5668\u63a7\u4ef6","\u7a97\u53e3"]},{"location":"tutorials/chapter_02/1/#\u4e00\u5bb9\u5668\u63a7\u4ef6","title":"\u4e00\u3001\u5bb9\u5668\u63a7\u4ef6","text":"","tags":["\u63a7\u4ef6","\u5bb9\u5668\u63a7\u4ef6","\u7a97\u53e3"]},{"location":"tutorials/chapter_02/1/#11-\u5206\u7c7b","title":"1.1 \u5206\u7c7b","text":"<p>\u5bb9\u5668\u63a7\u4ef6\u4e00\u822c\u5206\u4e24\u7c7b\uff0c\u4e00\u79cd\u662f\u6709\u5b9e\u9645\u7a97\u53e3\u7684\u63a7\u4ef6\uff0c\u5305\u62ec <code>Tk</code>\u3001<code>Toplevel</code>\u3002\u53e6\u5916\u4e00\u79cd\u5219\u6ca1\u6709\u5b9e\u9645\u7684\u7a97\u53e3\uff0c\u662f\u5904\u4e8e\u7a97\u53e3\u4e4b\u5185\u7684\u5bb9\u5668\uff0c\u5982 <code>Canvas</code>\u3002</p>","tags":["\u63a7\u4ef6","\u5bb9\u5668\u63a7\u4ef6","\u7a97\u53e3"]},{"location":"tutorials/chapter_02/1/#12-\u4e3b\u7a97\u53e3","title":"1.2 \u4e3b\u7a97\u53e3","text":"<p>\u6bcf\u4e2a <code>tkinter</code> \u7a0b\u5e8f\u5728\u8fd0\u884c\u671f\u95f4\u4e00\u822c\u53ea\u5141\u8bb8\u5b58\u5728\u4e00\u4e2a\u4e14\u5fc5\u987b\u5b58\u5728\u4e00\u4e2a\u4e3b\u7a97\u53e3\uff08\u5f39\u7a97\u9664\u5916\uff09\uff0c\u5373\u53ea\u6709\u4e00\u4e2a <code>Tk</code> \u7c7b\u7684\u5b9e\u4f8b\u3002</p> <p>\u4e3b\u7a97\u53e3\u4e5f\u53eb\u6839\u7a97\u53e3\uff0c\u6240\u4ee5\u6211\u4eec\u5e38\u5e38\u80fd\u5728 <code>tkinter</code> \u7a0b\u5e8f\u7684\u6e90\u4ee3\u7801\u4e2d\u89c1\u5230 \u201croot\u201d \u5b57\u6837\uff0c\u5176\u542b\u4e49\u5c31\u662f\u6839\u7a97\u53e3\u7684\u610f\u601d\u3002\u4f60\u53ef\u4ee5\u628a\u56fe\u5f62\u5316\u7a0b\u5e8f\u7684\u642d\u5efa\u7406\u89e3\u4e3a\u4e00\u9897\u6811\uff0c\u4ece\u6839\u90e8\u642d\u8d77\uff0c\u540e\u9762\u7684\u63a7\u4ef6\u3001\u7ec4\u4ef6\u90fd\u8fde\u7740\u524d\u9762\u7684\uff0c\u4e5f\u5c31\u662f\u6709\u201c\u5b50\u4e0e\u7236\u201d\u7684\u5173\u7cfb\u5b58\u5728\uff0c\u6ca1\u6709\u7236\u4e00\u822c\u5c31\u6ca1\u6709\u5b50\u3002</p> <pre><code>flowchart TB\n\n    1(\"Tk(root)\")\n    2(Canvas 1)\n    3(Canvas 2)\n    4(Widget)\n    5(...)\n\n    1 --&gt; 2; 3 --&gt; 4;\n    1 --&gt; 3; 3 --&gt; 5;</code></pre>","tags":["\u63a7\u4ef6","\u5bb9\u5668\u63a7\u4ef6","\u7a97\u53e3"]},{"location":"tutorials/chapter_02/1/#13-\u5b50\u7a97\u53e3","title":"1.3 \u5b50\u7a97\u53e3","text":"<p>\u5b50\u7a97\u53e3\uff0c\u6216\u8005\u53eb\u9876\u7ea7\u7a97\u53e3\uff08<code>Toplevel</code>\uff09\uff0c\u591a\u7528\u4e8e\u989d\u5916\u7684\u7a97\u53e3\uff0c\u6216\u8005\u662f\u81ea\u5b9a\u4e49\u5f39\u7a97\u3002</p> <p>\u4e3a\u4ec0\u4e48\u53eb\u9876\u7ea7\u7a97\u53e3\u5462\uff0c\u56e0\u4e3a\u5b83\u548c <code>Tk</code> \u4e00\u6837\u6709\u5b9e\u9645\u7684\u7a97\u53e3\uff0c\u5904\u5728\u201c\u63a7\u4ef6\u6811\u201d\u6700\u9876\u7aef\u7684\u4f4d\u7f6e\uff0c\u4f46\u5176\u5b9e\u9645\u53c8\u5c5e\u4e8e <code>Tk</code> \u7684\u201c\u5b69\u5b50\u201d\uff0c\u6839\u7a97\u53e3\u4e00\u65e6\u5173\u95ed\uff0c\u5b50\u7a97\u53e3\u4e5f\u4f1a\u968f\u4e4b\u5173\u95ed\uff0c\u53cd\u4e4b\u5374\u4e0d\u4f1a\u3002</p>","tags":["\u63a7\u4ef6","\u5bb9\u5668\u63a7\u4ef6","\u7a97\u53e3"]},{"location":"tutorials/chapter_02/1/#\u4e8c\u7a97\u53e3\u5bb9\u5668\u63a7\u4ef6","title":"\u4e8c\u3001\u7a97\u53e3\u5bb9\u5668\u63a7\u4ef6","text":"","tags":["\u63a7\u4ef6","\u5bb9\u5668\u63a7\u4ef6","\u7a97\u53e3"]},{"location":"tutorials/chapter_02/1/#21-tk","title":"2.1 <code>Tk</code>","text":"","tags":["\u63a7\u4ef6","\u5bb9\u5668\u63a7\u4ef6","\u7a97\u53e3"]},{"location":"tutorials/chapter_02/1/#211-\u5faa\u73af\u5237\u65b0\u7684\u4e3b\u7a97\u53e3","title":"2.1.1 \u5faa\u73af\u5237\u65b0\u7684\u4e3b\u7a97\u53e3","text":"<p>\u901a\u8fc7 <code>Tk</code> \u6765\u751f\u6210\u4e00\u4e2a\u4e3b\u7a97\u53e3\uff0c\u751f\u6210\u8be5\u5bf9\u8c61\u540e\uff0c\u9700\u8981\u8ba9\u5176\u8fdb\u5165\u6d88\u606f\u4e8b\u4ef6\u5faa\u73af\uff0c\u800c\u8fd9\u4e2a\u5faa\u73af\u663e\u7136\u662f\u4e00\u76f4\u8fd0\u884c\u7684\uff0c\u76f4\u5230\u4e3b\u7a97\u53e3\u5bf9\u8c61\u751f\u547d\u5468\u671f\u7684\u7ed3\u675f\u3002</p> <p>\u901a\u8fc7\u5982\u4e0b\u4ee3\u7801\u53ef\u4ee5\u751f\u6210\u4e3b\u7a97\u53e3\uff1a</p> <pre><code>import maliang\n\nroot = maliang.Tk()\nroot.mainloop()\n\nprint(\"Done!\")\n</code></pre> <p>\u4f46\u6211\u4eec\u8fd0\u884c\u4e0a\u8ff0\u4ee3\u7801\u53ef\u4ee5\u53d1\u73b0\uff0c<code>\"Done!\"</code> \u5e76\u6ca1\u6709\u88ab\u76f4\u63a5\u6253\u5370\u51fa\u6765\uff0c\u800c\u662f\u5f53\u6211\u4eec\u5173\u95ed\u7a97\u53e3\u4e4b\u540e\uff0c\u8fd9\u4e2a <code>\"Done!\"</code> \u624d\u88ab\u6253\u5370\u51fa\u6765\u3002\u8fd9\u4e5f\u8bf4\u660e\uff0c<code>root.mainloop()</code> \u662f\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u5faa\u73af\u7684\u64cd\u4f5c\uff0c\u4f1a\u8ba9\u4e3b\u7a97\u53e3\u4e00\u76f4\u505a\u4e00\u4ef6\u4e8b\uff0c\u4e5f\u5c31\u662f\u5237\u65b0\u7a97\u53e3\uff0c\u76f4\u5230\u7a97\u53e3\u88ab\u5173\u95ed\uff0c\u8fd9\u4e2a\u5faa\u73af\u624d\u7ed3\u675f\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u7528\u4e0b\u9762\u8fd1\u4f3c\u7b49\u4ef7\u7684\u4ee3\u7801\u8bd5\u9a8c\u4e00\u4e0b\u6548\u679c\u662f\u4e0d\u662f\u4e00\u6837\u7684\uff1a</p> <pre><code>import time\n\nimport maliang\n\nroot = maliang.Tk()\nstart = time.time()\n\nwhile time.time() &lt; start + 3:\n    root.update()\n\nprint(\"Done!\")\n</code></pre> <p>\u8fd0\u884c\u4e4b\u540e\u4e0d\u96be\u53d1\u73b0\uff0c\u5f53\u7a97\u53e3\u6253\u5f00 3 \u79d2\u540e\u4f1a\u81ea\u52a8\u5173\u95ed\uff0c\u4e4b\u540e\u7ec8\u7aef\u624d\u8f93\u51fa <code>\"Done!\"</code>\u3002\u56e0\u6b64\uff0c\u5199\u5728 <code>root.mainloop()</code> \u4e4b\u540e\u7684\u4ee3\u7801\u4e00\u822c\u662f\u65e0\u6548\u7684\u3002\u6240\u4ee5\uff0c\u8fd9\u4e5f\u4ece\u4fa7\u9762\u8bf4\u660e\uff0c\u4e3b\u7a97\u53e3\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u3002</p>","tags":["\u63a7\u4ef6","\u5bb9\u5668\u63a7\u4ef6","\u7a97\u53e3"]},{"location":"tutorials/chapter_02/1/#212-\u4fee\u6539\u4e3b\u7a97\u53e3\u7684\u5c5e\u6027","title":"2.1.2 \u4fee\u6539\u4e3b\u7a97\u53e3\u7684\u5c5e\u6027","text":"<p>\u901a\u8fc7\u4e0a\u9762\u7b80\u5355\u4ee3\u7801\uff0c\u6211\u4eec\u5df2\u7ecf\u53ef\u4ee5\u521b\u5efa\u51fa\u4e00\u4e2a\u7b80\u5355\u7684\u7a97\u53e3\u4e86\uff0c\u4e0b\u9762\u5c06\u8bb2\u8ff0 <code>Tk</code> \u6709\u54ea\u4e9b\u5185\u5bb9\u53ef\u4ee5\u4fee\u6539\uff0c\u4ee5\u53ca\u53ef\u4ee5\u5b9e\u73b0\u54ea\u4e9b\u6548\u679c\u3002</p> <p>\u9996\u5148\uff0c\u901a\u8fc7\u524d\u9762\u7684\u7ae0\u8282 \u00a71.3 \u6846\u67b6\u6982\u8ff0\uff0c\u6211\u4eec\u4e0d\u96be\u77e5\u9053\uff0c<code>Tk</code> \u662f\u7ee7\u627f\u81ea <code>tkinter.Tk</code> \u7684\uff0c\u56e0\u6b64 <code>tkinter.Tk</code> \u7684\u8bb8\u591a\u5c5e\u6027\u548c\u65b9\u6cd5\u662f\u53ef\u4ee5\u76f4\u63a5\u62ff\u6765\u7528\u7684\uff0c\u6b64\u5904\u5c31\u4e0d\u591a\u8bb2\u4e86\u3002\u8fd9\u91cc\u4e13\u95e8\u8bb2\u4e00\u4e0b <code>Tk</code> \u4e0d\u540c\u7684\u5730\u65b9\u5427\u3002</p> <p>\u901a\u8fc7\u67e5\u9605\u6587\u6863\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u521d\u59cb\u53c2\u6570\u8bbe\u5b9a\u4e3b\u7a97\u53e3\u7684\u5927\u5c0f\u3001\u4f4d\u7f6e\u3001\u6807\u9898\u548c\u56fe\u6807\u3002\u5982\u4e0b\u9762\u4ee3\u7801\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u5927\u5c0f\u4e3a 1600\u00d7900\uff08\u5355\u4f4d\uff1a\u50cf\u7d20\uff09\uff0c\u4f4d\u7f6e\u5728\u8ddd\u79bb\u5c4f\u5e55\u5de6\u4e0a\u89d2 100, 50\uff0c\u6807\u9898\u4e3a \u201cMy Window\u201d \u7684\u7a97\u53e3\uff1a</p> <pre><code>import maliang\n\nsize = 1600, 900\nposition = 100, 50\ntitle = \"My Window\"\n\nmaliang.Tk(size, position, title=title).mainloop()\n</code></pre> <p>\u5982\u679c\u4f60\u4e0d\u60f3\u8ba1\u7b97\u7a97\u53e3\u7684\u4f4d\u7f6e\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7 <code>Tk</code> \u7684\u65b9\u6cd5 <code>center</code> \u6765\u5c45\u4e2d\u7a97\u53e3\u3002</p> <pre><code>import maliang\n\nsize = 1600, 900\ntitle = \"My Window\"\n\nroot = maliang.Tk(size, title=title)\nroot.center()\nroot.mainloop()\n</code></pre>","tags":["\u63a7\u4ef6","\u5bb9\u5668\u63a7\u4ef6","\u7a97\u53e3"]},{"location":"tutorials/chapter_02/1/#213-\u4f7f\u7528\u90e8\u5206\u7b80\u5316\u7684\u8bed\u6cd5","title":"2.1.3 \u4f7f\u7528\u90e8\u5206\u7b80\u5316\u7684\u8bed\u6cd5","text":"<p><code>experimental</code>\uff1a\u4e0d\u4fdd\u8bc1\u6240\u6709\u7684\u529f\u80fd\u5728\u6240\u6709\u5e73\u53f0\u4e0a\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c</p> <p><code>tkinter.Tk</code> \u6709\u4e9b\u5f88\u5b9e\u7528\u7684\u529f\u80fd\u53ef\u4ee5\u4f7f\u7528\uff0c\u5982\u5168\u5c4f\u3001\u7f6e\u9876\u7b49\uff0c\u4f46\u5b83\u4eec\u4f7f\u7528\u8c03\u7528\u8d77\u6765\u6bd4\u8f83\u9ebb\u70e6\uff0c\u5982\u4f7f\u7a97\u53e3\u7f6e\u9876\u4f60\u9700\u8981\u8fd9\u6837\u5199\uff1a</p> <pre><code>root = tkinter.Tk()\nroot.attributes(\"-topmost\", True)\n</code></pre> <p>\u8fd9\u4e0d\u4ec5\u96be\u8bb0\uff0c\u800c\u4e14\u5bb9\u6613\u51fa\u9519\uff0c\u6545 <code>Tk</code> \u5bf9\u8fd9\u4e9b\u529f\u80fd\u505a\u4e86\u4e00\u5b9a\u7684\u7b80\u5316\uff0c\u5982\u7f6e\u9876\u53ea\u9700\u8981\u8fd9\u6837\u5199\uff1a</p> <pre><code>root = maliang.Tk()\nroot.topmost(True)\n</code></pre> <p>\u4e0e\u4e0a\u9762\u7684\u7c7b\u4f3c\u7684\u65b9\u6cd5\u90fd\u5199\u5728\u8fd9\u91cc\u4e86\uff0c\u5177\u4f53\u53c2\u6570\u548c\u4f7f\u7528\u8bf4\u660e\u53ef\u4ee5\u67e5\u9605\u6587\u6863\uff1a</p> <ul> <li>\u901a\u7528:<ul> <li><code>alpha</code>: \u8c03\u8282\u7a97\u53e3\u900f\u660e\u5ea6</li> <li><code>fullscreen</code>: \u8bbe\u7f6e\u7a97\u53e3\u4e3a\u5168\u5c4f</li> <li><code>topmost</code>: \u8bbe\u7f6e\u7a97\u53e3\u7f6e\u9876</li> </ul> </li> <li>\u4ec5 Windows:<ul> <li><code>toolwindow</code>: \u8bbe\u7f6e\u7a97\u53e3\u4e3a\u5de5\u5177\u7a97\u53e3</li> <li><code>transparentcolor</code>: \u8bbe\u7f6e\u7a97\u53e3\u7684\u900f\u660e\u989c\u8272</li> </ul> </li> <li>\u4ec5 macOS:<ul> <li><code>modified</code>: \u8bbe\u7f6e\u7a97\u53e3\u7684\u7f16\u8f91\u72b6\u6001</li> <li><code>transparent</code>: \u8bbe\u7f6e\u7a97\u53e3\u662f\u5426\u542f\u7528\u900f\u660e\u529f\u80fd</li> </ul> </li> </ul> <p>\u7279\u522b\u6ce8\u610f\uff1a\u90e8\u5206\u529f\u80fd\u4e0d\u662f\u8de8\u5e73\u53f0\u7684</p> <p>\u5e76\u4e0d\u662f\u6240\u6709\u7684\u529f\u80fd\u90fd\u662f\u8de8\u5e73\u53f0\u7684\uff0c\u5982\u8bbe\u7f6e\u900f\u660e\u989c\u8272\u7684\u529f\u80fd\u5728\u90e8\u5206 Linux \u64cd\u4f5c\u7cfb\u7edf\u4e0a\u53ef\u80fd\u5c31\u65e0\u6cd5\u751f\u6548\u751a\u81f3\u62a5\u9519\uff01</p> <p>\u56e0\u4e3a\u5e76\u4e0d\u662f\u6240\u6709\u7684\u64cd\u4f5c\u7cfb\u7edf\u90fd\u652f\u6301\u4e0a\u8ff0\u7684\u8fd9\u4e9b\u65b9\u6cd5\uff0c\u6240\u4ee5\u5728\u4f7f\u7528\u7684\u65f6\u5019\u8bf7\u7279\u522b\u6ce8\u610f\u3002\u5982\u679c\u4e0d\u786e\u5b9a\u54ea\u4e9b\u529f\u80fd\u5728\u54ea\u4e9b\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u4f1a\u5bfc\u81f4\u9519\u8bef\uff0c\u8bf7\u67e5\u9605 <code>tkinter</code> \u76f8\u5173\u6587\u6863\u3002</p>","tags":["\u63a7\u4ef6","\u5bb9\u5668\u63a7\u4ef6","\u7a97\u53e3"]},{"location":"tutorials/chapter_02/1/#214-\u521b\u5efa\u540e\u8c03\u6574\u5927\u5c0f\u4f4d\u7f6e","title":"2.1.4 \u521b\u5efa\u540e\u8c03\u6574\u5927\u5c0f\u4f4d\u7f6e","text":"<p>\u53ef\u4ee5\u4f7f\u7528\u65b9\u6cd5 <code>geometry</code> \u6765\u8c03\u6574\u7a97\u53e3\u7684\u4f4d\u7f6e\u548c\u5927\u5c0f\u3002</p> <p>\u5982\u679c\u9700\u8981\u539f\u751f <code>tkinter</code> \u8c03\u6574\u7a97\u53e3\u4f4d\u7f6e\u548c\u5927\u5c0f\u65b9\u6cd5\uff0c\u53ef\u8c03\u7528\u6216\u8005\u91cd\u8f7d <code>wm_geometry</code> \u65b9\u6cd5\u6765\u4f7f\u7528\uff0c\u4e0d\u8fc7\u5e76\u4e0d\u5efa\u8bae\u8fd9\u6837\u505a\uff0c\u8fd9\u6837\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7f29\u653e\u4e0a\u7684\u4e00\u4e9b\u95ee\u9898\u3002</p>","tags":["\u63a7\u4ef6","\u5bb9\u5668\u63a7\u4ef6","\u7a97\u53e3"]},{"location":"tutorials/chapter_02/1/#215-\u7a97\u53e3\u5173\u95ed\u65f6\u8c03\u7528\u51fd\u6570","title":"2.1.5 \u7a97\u53e3\u5173\u95ed\u65f6\u8c03\u7528\u51fd\u6570","text":"<p>\u6709\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u5728\u7a97\u53e3\u5173\u95ed\u7684\u65f6\u5019\u6267\u884c\u4e00\u4e9b\u529f\u80fd\uff0c\u6bd4\u5982\u8be2\u95ee\u7528\u6237\u6587\u4ef6\u662f\u5426\u9700\u8981\u4fdd\u5b58\u7b49\uff0c\u8fd9\u65f6\u53ef\u4ee5\u4f7f\u7528 <code>at_exit</code> \u65b9\u6cd5\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff1a</p> <pre><code>import tkinter.messagebox as messagebox\n\nimport maliang\n\n\ndef ask() -&gt; None:\n    if messagebox.askyesno(message=\"\u662f\u5426\u5173\u95ed\u7a97\u53e3\uff1f\"):\n        root.destroy()\n\n\nroot = maliang.Tk()\nroot.at_exit(ask, ensure_destroy=False)\nroot.mainloop()\n</code></pre> <p>\u5f53\u7a97\u53e3\u5173\u95ed\u7684\u65f6\u5019\uff0c\u7a0b\u5e8f\u4f1a\u8be2\u95ee\u7528\u6237\u201c\u662f\u5426\u5173\u95ed\u7a97\u53e3\u201d\uff0c\u82e5\u9009\u62e9\u201c\u662f\u201d\u5219\u4f1a\u5173\u95ed\u7a97\u53e3\uff0c\u53cd\u4e4b\u4e0d\u4f1a\u3002</p>","tags":["\u63a7\u4ef6","\u5bb9\u5668\u63a7\u4ef6","\u7a97\u53e3"]},{"location":"tutorials/chapter_02/1/#22-toplevel","title":"2.2 <code>Toplevel</code>","text":"","tags":["\u63a7\u4ef6","\u5bb9\u5668\u63a7\u4ef6","\u7a97\u53e3"]},{"location":"tutorials/chapter_02/1/#221-\u7ee7\u627f\u800c\u6765\u7684\u5b50\u7a97\u53e3\u7c7b","title":"2.2.1 \u7ee7\u627f\u800c\u6765\u7684\u5b50\u7a97\u53e3\u7c7b","text":"<p><code>Toplevel</code> \u662f\u540c\u65f6\u7ee7\u627f\u4e8e <code>tkinter.Toplevel</code> \u548c <code>Tk</code> \u7684\uff0c\u6240\u4ee5 <code>Tk</code> \u5177\u6709\u7684\u65b9\u6cd5\uff0c<code>Toplevel</code> \u4e5f\u6709\u3002</p> <p>\u552f\u4e00\u4e0d\u540c\u7684\u5730\u65b9\u5728\u4e8e\u5176\u521d\u59cb\u5316\u53c2\u6570\uff0c\u8be6\u7ec6\u8bf4\u660e\u53ef\u67e5\u9605\u6587\u6863\u3002</p>","tags":["\u63a7\u4ef6","\u5bb9\u5668\u63a7\u4ef6","\u7a97\u53e3"]},{"location":"tutorials/chapter_02/1/#222-\u5c45\u4e2d\u7a97\u53e3\u7684\u5c0f\u6280\u5de7","title":"2.2.2 \u5c45\u4e2d\u7a97\u53e3\u7684\u5c0f\u6280\u5de7","text":"<p>\u5176\u5b9e\u5728\u4ed4\u7ec6\u67e5\u9605\u4e86\u65b9\u6cd5 <code>center</code> \u7684\u53c2\u6570\u4e4b\u540e\uff0c\u4e0d\u96be\u53d1\u73b0\uff0c\u5b83\u6709\u4e00\u4e2a\u540d\u4e3a <code>master</code> \u7684\u53c2\u6570\uff0c\u5f53\u5b83\u7684\u503c\u4e3a <code>None</code> \u7684\u65f6\u5019\uff0c\u5c45\u4e2d\u7684\u53c2\u8003\u5bf9\u8c61\u662f\u5c4f\u5e55\uff0c\u5f53\u5b83\u7684\u503c\u662f\u6839\u7a97\u53e3\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u4ee5\u6839\u7a97\u53e3\u4e3a\u53c2\u8003\u5bf9\u8c61\u800c\u5c45\u4e2d\u3002</p> <pre><code>import maliang\n\nroot = maliang.Tk()\ntl = maliang.Toplevel()\ntl.center(refer=root)\nroot.mainloop()\n</code></pre> <p>\u8fd0\u884c\u4e0a\u9762\u7684\u4ee3\u7801\uff0c\u65e0\u8bba\u6839\u7a97\u53e3\u5728\u54ea\u91cc\uff0c\u5b50\u7a97\u53e3\u59cb\u7ec8\u4f1a\u5728\u5176\u4e2d\u95f4\u51fa\u73b0\u3002</p> \u56fe1 \u7a97\u53e3\u5c45\u4e2d <p>\u7279\u522b\u6ce8\u610f\uff1a\u5c45\u4e2d\u5e76\u4e0d\u662f\u4e00\u5b9a\u51c6\u786e\u7684</p> <p>\u5c45\u4e2d\u5e76\u4e0d\u4fdd\u8bc1\u5b8c\u5168\u4f7f\u7a97\u53e3\u5c45\u4e2d\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u7a97\u53e3\u7684\u8303\u56f4\u5224\u5b9a\u5e76\u4e0d\u4e00\u5b9a\u548c\u6240\u770b\u7684\u5916\u89c2\u4e00\u81f4\u3002\u5982 Windows7 \u98ce\u683c\u7684\u7a97\u53e3\u5728\u4ee5 Windows10/11 \u7a97\u53e3\u4e3a\u53c2\u8003\u5bf9\u8c61\u5c45\u4e2d\u65f6\uff0c\u770b\u8d77\u6765\u53ef\u80fd\u5c31\u4e0d\u50cf\u662f\u5c45\u4e2d\u7684\u3002\u8fd9\u53ef\u80fd\u4e0e <code>tkinter</code> \u5e95\u5c42\u6709\u5173\uff0c<code>tkinter</code> \u7684 API \u5bf9 Windows7 \u98ce\u683c\u7684\u7a97\u53e3\u7ed9\u51fa\u7ed3\u679c\u8c8c\u4f3c\u5e76\u4e0d\u51c6\u786e\u3002</p>","tags":["\u63a7\u4ef6","\u5bb9\u5668\u63a7\u4ef6","\u7a97\u53e3"]},{"location":"tutorials/chapter_02/2/","title":"\u00a72.1 \u753b\u5e03\u5bb9\u5668\u63a7\u4ef6","text":"<p> \u5b57\u6570 1776 \u4e2a \u00a0 \u4ee3\u7801 73 \u884c \u00a0 \u9605\u8bfb\u65f6\u95f4 7 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p>","tags":["\u63a7\u4ef6","\u5bb9\u5668\u63a7\u4ef6","\u753b\u5e03","\u7f29\u653e"]},{"location":"tutorials/chapter_02/2/#\u4e00\u4ee5\u753b\u5e03\u4e3a\u5e95","title":"\u4e00\u3001\u4ee5\u753b\u5e03\u4e3a\u5e95","text":"","tags":["\u63a7\u4ef6","\u5bb9\u5668\u63a7\u4ef6","\u753b\u5e03","\u7f29\u653e"]},{"location":"tutorials/chapter_02/2/#11-\u4e3a\u4ec0\u4e48\u4ee5\u753b\u5e03\u4e3a\u5e95","title":"1.1 \u4e3a\u4ec0\u4e48\u4ee5\u753b\u5e03\u4e3a\u5e95","text":"<p><code>maliang</code> \u548c <code>tkinter</code> \u7a0b\u5e8f\u4e0d\u540c\uff0c<code>tkinter</code> \u7a0b\u5e8f\u662f\u76f4\u63a5\u4ee5\u7a97\u53e3\u4e3a\u5e95\u677f\uff0c\u5728\u4e0a\u9762\u653e\u7f6e\u63a7\u4ef6\u7684\uff0c\u4f46\u7531\u4e8e <code>maliang</code> \u7684\u63a7\u4ef6\u90fd\u662f\u865a\u62df\u7684\uff0c\u9700\u8981\u4ee5\u753b\u5e03\u4e3a\u5e95\u677f\uff0c\u5728\u4e0a\u9762\u5448\u73b0\u51fa\u6765\u3002\u6240\u4ee5\uff0c\u5728\u663e\u793a\u4efb\u4f55 <code>maliang</code> \u63a7\u4ef6\u4e4b\u524d\uff0c\u90fd\u9700\u8981\u4e00\u4e2a\u753b\u5e03\u6765\u4f5c\u4e3a\u5b83\u4eec\u7684\u5bb9\u5668\u3002</p>","tags":["\u63a7\u4ef6","\u5bb9\u5668\u63a7\u4ef6","\u753b\u5e03","\u7f29\u653e"]},{"location":"tutorials/chapter_02/2/#12-\u5c06\u753b\u5e03\u5f53\u4f5c\u9875\u9762","title":"1.2 \u5c06\u753b\u5e03\u5f53\u4f5c\u9875\u9762","text":"<p>\u6211\u4eec\u53ef\u4ee5\u628a\u753b\u5e03\u5f53\u4f5c\u7f51\u9875\u7684\u4e00\u4e2a\u4e2a\u9875\u9762\uff0c\u6bcf\u4e2a\u753b\u5e03\u90fd\u72ec\u7acb\u8fd0\u4f5c\uff0c\u8fd9\u6837\u5c42\u6b21\u5c31\u6bd4\u8f83\u6e05\u6670\uff0c\u591a\u4e2a\u573a\u666f\u7684\u5207\u6362\u4e5f\u6bd4\u8f83\u65b9\u4fbf\u3002</p>","tags":["\u63a7\u4ef6","\u5bb9\u5668\u63a7\u4ef6","\u753b\u5e03","\u7f29\u653e"]},{"location":"tutorials/chapter_02/2/#\u4e8c\u753b\u5e03","title":"\u4e8c\u3001\u753b\u5e03","text":"","tags":["\u63a7\u4ef6","\u5bb9\u5668\u63a7\u4ef6","\u753b\u5e03","\u7f29\u653e"]},{"location":"tutorials/chapter_02/2/#21-canvas","title":"2.1 <code>Canvas</code>","text":"<p>\u67e5\u9605\u6587\u6863\u53ef\u77e5\uff0c<code>Canvas</code> \u7ee7\u627f\u81ea <code>tkinter.Canvas</code>\uff0c\u5b83\u662f\u5728 <code>tkinter.Canvas</code> \u7684\u57fa\u7840\u4e4b\u4e0a\u201c\u9b54\u6539\u201d\u800c\u6765\u7684\uff0c\u589e\u52a0\u4e86\u5f88\u591a\u529f\u80fd\u3002</p>","tags":["\u63a7\u4ef6","\u5bb9\u5668\u63a7\u4ef6","\u753b\u5e03","\u7f29\u653e"]},{"location":"tutorials/chapter_02/2/#211-\u521d\u59cb\u5316\u53c2\u6570\u7684\u8bf4\u660e","title":"2.1.1 \u521d\u59cb\u5316\u53c2\u6570\u7684\u8bf4\u660e","text":"<p>\u76f4\u63a5\u67e5\u770b\u6587\u6863\u53ef\u80fd\u8fd8\u662f\u4e0d\u5bb9\u6613\u7406\u89e3 <code>Canvas</code> \u7684\u521d\u59cb\u5316\u53c2\u6570\uff0c\u8fd9\u91cc\u505a\u4e00\u4e2a\u8be6\u7ec6\u89e3\u91ca\u3002</p> <ul> <li><code>master</code>: \u7236\u63a7\u4ef6\uff1b</li> <li><code>expand</code>: \u8fd9\u4e2a\u53ef\u4ee5\u53d6\u7684\u503c\u6709 4 \u4e2a\uff0c\u4f46\u5b9e\u9645\u542b\u4e49\u5c31\u662f\u753b\u5e03\u672c\u8eab\u7684\u7f29\u653e\u7684\u89c4\u5219\uff0c<code>\"x\"</code> \u8868\u793a\u6a2a\u5411\u8981\u7f29\u653e\uff0c<code>\"y\"</code> \u8868\u793a\u7eb5\u5411\u8981\u7f29\u653e\uff0c\u4e24\u4e2a\u90fd\u6709\u5c31\u8868\u793a\u6a2a\u7eb5\u90fd\u7f29\u653e\uff0c\u7a7a\u5b57\u7b26\u4e32\u5219\u8868\u793a\u4e0d\u7f29\u653e\uff1b</li> <li><code>auto_zoom</code>: \u5e03\u5c14\u503c\uff0c\u6807\u5fd7\u662f\u5426\u81ea\u52a8\u7f29\u653e\u753b\u5e03\u91cc\u9762\u7684\u4e1c\u897f\uff1b</li> <li><code>keep_ratio</code>: \u53ef\u53d6\u503c\u6709 <code>\"min\"</code>\uff0c<code>\"max\"</code> \u548c <code>None</code> \u6807\u5fd7\u7f29\u653e\u4fdd\u6301\u6bd4\u4f8b\u7684\u89c4\u5219\uff0c<code>\"min\"</code> \u8868\u793a\u8ddf\u968f\u6700\u5c0f\u7684\u7f29\u653e\u6bd4\uff0c<code>\"max\"</code> \u8868\u793a\u8ddf\u968f\u6700\u5927\u7684\u7f29\u653e\u6bd4\uff0c<code>None</code> \u8868\u793a\u7f29\u653e\u4e0d\u4fdd\u6301\u6bd4\u4f8b\uff1b</li> <li><code>free_anchor</code>: \u5e03\u5c14\u503c\uff0c\u6807\u5fd7\u753b\u5e03\u7684\u951a\u70b9\u662f\u5426\u4e3a\u52a8\u6001\u7684\uff1b</li> <li><code>auto_update</code>: \u5e03\u5c14\u503c\uff0c\u6807\u5fd7\u7740\u753b\u5e03\u7684\u6837\u5f0f\u662f\u5426\u81ea\u52a8\u6839\u636e\u4e3b\u9898\u800c\u66f4\u65b0</li> </ul> <p>\u8fd9\u91cc\u7740\u91cd\u8bb2\u4e00\u4e0b\u540e\u9762\u4e24\u4e2a\u53c2\u6570\u3002</p> <p>\u4fdd\u6301\u753b\u5e03\u6a2a\u7eb5\u6bd4\u4f8b\u610f\u5473\u7740\u753b\u5e03\u91cc\u9762\u7684\u4e1c\u897f\u6c38\u8fdc\u4e0d\u4f1a\u53d8\u5f62\uff0c\u8fd9\u5bf9\u4e8e\u67d0\u4e9b\u573a\u666f\u6781\u4e3a\u91cd\u8981\uff0c\u6bd4\u5982\u64ad\u653e\u89c6\u9891\uff0c\u6216\u8005\u5c0f\u6e38\u620f\u7684\u753b\u9762\u3002\u6709\u4e24\u79cd\u6a21\u5f0f\uff0c<code>\"min\"</code> \u50cf\u64ad\u653e\u89c6\u9891\u90a3\u6837\uff0c\u4fdd\u8bc1\u753b\u9762\u59cb\u7ec8\u5728\u7236\u63a7\u4ef6\u4e4b\u4e2d\uff0c\u800c\u4e0d\u4f1a\u6ea2\u51fa\u753b\u9762\uff0c\u800c <code>\"max\"</code> \u5219\u662f\u4fdd\u8bc1\u753b\u9762\u4e00\u5b9a\u88ab\u94fa\u6ee1\uff0c\u5c31\u7b97\u67d0\u4e9b\u90e8\u5206\u4f1a\u88ab\u7236\u63a7\u4ef6\u906e\u6321\u3002</p> <p><code>free_anchor</code> \u5219\u6d89\u53ca\u5230\u753b\u5e03\u7f29\u653e\uff0c\u4e14\u53ea\u5bf9 Place \u5e03\u5c40\u6709\u6548\u3002\u5b83\u4f1a\u4f7f\u951a\u70b9\u4f4d\u7f6e\u7684\u662f\u52a8\u6001\u7f29\u653e\u7684\uff0c\u800c\u4e0d\u662f\u4e00\u76f4\u4f4d\u4e8e\u67d0\u4e2a\u5730\u65b9\u3002\u6bd4\u5982\u951a\u70b9\u4f4d\u4e8e\u753b\u5e03\u5de6\u4e0a\u89d2\uff0c\u521d\u59cb\u4f4d\u7f6e\u5728 <code>(100, 100)</code>\uff0c\u5047\u8bbe\u7f29\u653e\u500d\u7387\u4e3a 2\uff0c\u90a3\u4e48\u5f53 <code>free_anchor</code> \u7684\u503c\u4e3a <code>True</code> \u65f6\uff0c\u951a\u70b9\u7684\u4f4d\u7f6e\u4f1a\u53d8\u6210 <code>(200, 200)</code>\uff0c\u53cd\u4e4b\u5219\u6ca1\u6709\u4efb\u4f55\u53d8\u5316\u3002</p> <p><code>auto_update</code> \u4e3a <code>True</code> \u65f6\uff0c<code>maliang</code> \u7684\u6837\u5f0f\u7ba1\u7406\u673a\u5236\u4f1a\u81ea\u52a8\u6839\u636e\u7a97\u53e3\u7684\u4e3b\u9898\u4fee\u6539\u753b\u5e03\u7684\u4e3b\u9898\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f53\u5b83\u7684\u503c\u4e3a <code>True</code> \u7684\u65f6\u5019\uff0c\u4f60\u65e0\u6cd5\u4fee\u6539\u753b\u5e03\u7684\u4e3b\u9898\uff0c\u5c31\u7b97\u901a\u8fc7\u67d0\u79cd\u624b\u6bb5\u4fee\u6539\u4e86\uff0c\u5f53\u7a97\u53e3\u4e3b\u9898\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u753b\u5e03\u7684\u4e3b\u9898\u8fd8\u662f\u4f1a\u81ea\u52a8\u66f4\u65b0\u3002\u76f8\u5bf9\u5e94\u5730\uff0c\u5982\u679c\u4f60\u60f3\u81ea\u5b9a\u4e49\u753b\u5e03\u7684\u6837\u5f0f\uff0c\u5982\u80cc\u666f\u989c\u8272\u7b49\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u5c06\u8fd9\u4e2a\u53c2\u6570\u8bbe\u4e3a <code>False</code>\uff0c\u6b64\u65f6\u753b\u5e03\u7684\u4e00\u5207\u6837\u5f0f\u90fd\u4f1a\u56de\u5f52 <code>tkinter</code> \u7684\u9ed8\u8ba4\u503c\u3002\u5f53\u7136\uff0c\u6b64\u65f6\u4f60\u53ef\u4ee5\u81ea\u5b9a\u4e49\u753b\u5e03\u7684\u4e3b\u9898\uff1a</p> <pre><code>import maliang\n\nroot = maliang.Tk()\ncv = maliang.Canvas(auto_update=False, bg=\"lightyellow\")\ncv.pack()\n\nroot.mainloop()\n</code></pre> <p>\u4e0a\u8ff0\u4ee3\u7801\u53ef\u4ee5\u8ba9\u4f60\u7684\u753b\u5e03\u4e0d\u53d7\u7a97\u53e3\u4e3b\u9898\u53d8\u5316\u7684\u5f71\u54cd\uff0c\u4f46\u540c\u6837\u7684\uff0c\u753b\u5e03\u7684\u5916\u89c2\u7ec6\u8282\u90fd\u9700\u8981\u4f60\u81ea\u5df1\u8bbe\u7f6e\u3002</p>","tags":["\u63a7\u4ef6","\u5bb9\u5668\u63a7\u4ef6","\u753b\u5e03","\u7f29\u653e"]},{"location":"tutorials/chapter_02/2/#212-\u9690\u85cf\u663e\u793a\u6765\u5207\u6362\u9875\u9762","title":"2.1.2 \u9690\u85cf/\u663e\u793a\u6765\u5207\u6362\u9875\u9762","text":"<p>\u9875\u9762\u5207\u6362\u7684\u65b9\u5f0f\u6709\u5f88\u591a\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7 <code>tkinter</code> \u63d0\u4f9b\u7684\u65b9\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 <code>maliang</code> \u63d0\u4f9b\u7684\u65b9\u5f0f\u3002</p> <p>\u5f53\u4f60\u4f7f\u7528 Place \u5e03\u5c40\u65f6\uff0c\u5728 <code>tkinter</code> \u91cc\u9762\u53ef\u4ee5\u901a\u8fc7 <code>place_forget</code> \u65b9\u6cd5\u6765\u5c06\u753b\u5e03\u6682\u65f6\u9690\u85cf\u6389\u3002\u5bf9\u4e8e Pack \u548c Grid \u5e03\u5c40\u4e5f\u662f\u7c7b\u4f3c\u7684\uff0c\u53ef\u4ee5\u4f7f\u7528 <code>pack_forget</code> \u548c <code>grid_forget</code> \u9690\u85cf\u753b\u5e03\u3002\u4f46\u662f\u5f53\u4f60\u60f3\u91cd\u65b0\u663e\u793a\u753b\u5e03\u7684\u65f6\u5019\uff0c\u4f60\u5fc5\u987b\u518d\u6b21\u4f7f\u7528\u5bf9\u5e94\u7684\u5e03\u5c40\u65b9\u6cd5\u3002\u800c\u8fd9\u4e2a\u65f6\u5019\uff0c\u4f60\u9700\u8981\u5bf9\u5f53\u524d\u7a97\u53e3\u7684\u7f29\u653e\u505a\u51fa\u4e00\u5b9a\u7684\u5904\u7406\u3002</p> <p>\u5982\u679c\u7a97\u53e3\u8fd9\u4e2a\u65f6\u5019\u5df2\u7ecf\u653e\u5927\u4e86\uff0c\u4f46\u4f60\u8fd8\u662f\u4f7f\u7528\u4e4b\u524d\u7684\u65b9\u5f0f\u53bb\u663e\u793a\u753b\u5e03\uff0c\u5c31\u4f1a\u5bfc\u81f4\u753b\u5e03\u770b\u8d77\u6765\u53d8\u5c0f\u4e86\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u4e0d\u6b63\u786e\u7684\u793a\u4f8b\uff1a</p> <pre><code>import maliang\n\nroot = maliang.Tk()\nroot.center()\n\ncv = maliang.Canvas(bg=\"orange\", auto_update=False)\ncv.place(width=1280, height=720)\ncv.place_forget()\n\nroot.after(3000, lambda: cv.place(width=1280, height=720))\nroot.mainloop()\n</code></pre> <p>\u5728\u4e0a\u8ff0\u7a0b\u5e8f\u5f00\u59cb\u8fd0\u884c\u540e\uff0c\u7528\u6237\u53ef\u4ee5\u5feb\u901f\u7f29\u653e\u7a97\u53e3\uff0c\u7136\u540e\u7b49\u5f85 3 \u79d2\uff0c\u770b\u770b\u753b\u5e03\u662f\u5426\u5904\u4e8e\u6b63\u786e\u7684\u5927\u5c0f\u3002</p> <p>\u5f88\u663e\u7136\uff0c\u4e0a\u9762\u7684\u793a\u4f8b\u5c31\u4f1a\u5bfc\u81f4\u753b\u5e03\u6ca1\u6709\u540c\u6b65\u7f29\u653e\u3002\u5e94\u8be5\u4fee\u6539\u4e3a\u5982\u4e0b\u4ee3\u7801\uff1a</p> <pre><code>import maliang\n\nroot = maliang.Tk()\nroot.center()\n\ncv = maliang.Canvas(bg=\"orange\", auto_update=False)\ncv.place(width=1280, height=720)\ncv.place_forget()\n\n\ndef func() -&gt; None:\n    cv.place(width=1280, height=720)\n    cv.update()#(1)!\n    cv.zoom()#(2)!\n\n\nroot.after(3000, func)\nroot.mainloop()\n</code></pre> <ol> <li>\u66f4\u65b0\u753b\u5e03\uff0c\u9632\u6b62\u6267\u884c\u4e0b\u4e00\u884c\u7684\u64cd\u4f5c\u65f6\u753b\u5e03\u7684\u6570\u636e\u8fd8\u6ca1\u53ca\u65f6\u66f4\u65b0\u3002</li> <li>\u6839\u636e\u7236\u63a7\u4ef6\u548c\u753b\u5e03\u672c\u8eab\u7684\u6570\u636e\u91cd\u65b0\u8c03\u6574\u753b\u5e03\u7684\u7f29\u653e\u3002</li> </ol> <p>\u6b64\u65b9\u6cd5\u867d\u7136\u53ef\u4ee5\uff0c\u4e0d\u8fc7\u9700\u8981\u7279\u522b\u63d0\u9192\u7684\u662f\uff0c\u6b64\u65b9\u6cd5\u4ec5\u5bf9 Place \u5e03\u5c40\u6709\u6548\u3002</p>","tags":["\u63a7\u4ef6","\u5bb9\u5668\u63a7\u4ef6","\u753b\u5e03","\u7f29\u653e"]},{"location":"tutorials/chapter_02/2/#213-\u52a8\u753b\u79fb\u52a8\u6765\u5207\u6362\u9875\u9762","title":"2.1.3 \u52a8\u753b\u79fb\u52a8\u6765\u5207\u6362\u9875\u9762","text":"<p>\u5f53\u7136\u9664\u4e86\u4e0a\u9762\u8bf4\u7684\u8fd9\u79cd\u65b9\u5f0f\u4e4b\u5916\uff0c\u8fd8\u6709\u4e00\u79cd\u6bd4\u8f83\u53d6\u5de7\u7684\u529e\u6cd5\u3002\u90a3\u5c31\u662f\u5728\u7a0b\u5e8f\u5f00\u59cb\u7684\u65f6\u5019\u5c31\u628a\u6240\u6709\u7684\u753b\u5e03\u4e00\u6b21\u6027\u521b\u5efa\u597d\uff0c\u7136\u540e\u901a\u8fc7 Place \u5e03\u5c40\u7684\u65b9\u5f0f\u5c06\u5b83\u4eec\u653e\u7f6e\u5728\u770b\u4e0d\u5230\u7684\u4f4d\u7f6e\uff0c\u9700\u8981\u7684\u65f6\u5019\u5c31\u628a\u4ed6\u4eec\u79fb\u52a8\u5230\u53ef\u89c1\u8303\u56f4\u5185\uff0c\u53cd\u4e4b\u5c31\u79fb\u5f00\u3002\u6b63\u597d\uff0c<code>maliang</code> \u63d0\u4f9b\u4e86\u6bd4\u8f83\u597d\u7684\u52a8\u753b\u673a\u5236\uff0c\u53ef\u4ee5\u8bd5\u7740\u7528\u8fd9\u79cd\u65b9\u5f0f\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a</p> <pre><code>import maliang\nimport maliang.animation as animation\n\nroot = maliang.Tk()\ncv1 = maliang.Canvas(bg=\"orange\", auto_update=False)\ncv1.place(width=1280, height=720, x=0)\ncv2 = maliang.Canvas(bg=\"lightgreen\", auto_update=False)\ncv2.place(width=1280, height=720, x=-1280)\n\nanimation.MoveTkWidget(cv1, (1280, 0), 1000, controller=animation.smooth, fps=60).start(delay=1000)\nanimation.MoveTkWidget(cv2, (1280, 0), 1000, controller=animation.smooth, fps=60).start(delay=1000)\n\nroot.mainloop()\n</code></pre> <p>\u4e0a\u8ff0\u4ee3\u7801\u5728\u8fd0\u884c 1 \u79d2\u540e\uff0c\u4e24\u4e2a\u753b\u5e03\u4f1a\u6709\u79fb\u52a8\u7684\u52a8\u753b\u3002</p> <p>\u7279\u522b\u6ce8\u610f\uff1a\u53ef\u80fd\u9020\u6210\u6027\u80fd\u95ee\u9898</p> <p>\u5bf9\u4e8e\u4e0a\u8ff0\u7b2c\u4e8c\u79cd\u65b9\u5f0f\uff0c\u5728\u753b\u5e03\u7684\u6570\u91cf\u8f83\u591a\u65f6\u7f29\u653e\u7a97\u53e3\u53ef\u80fd\u4f1a\u4ea7\u751f\u6027\u80fd\u95ee\u9898\u3002\u56e0\u4e3a\u7f29\u653e\u673a\u5236\u4f1a\u5bf9\u5f53\u524d\u6240\u6709\u201c\u53ef\u89c1\u201d\u7684\u63a7\u4ef6\u8fdb\u884c\u7f29\u653e\uff08\u672a\u7b2c\u4e00\u6b21\u653e\u7f6e\u6216\u8005\u8c03\u7528\u4e86\u7c7b\u4f3c <code>*_forget</code> \u65b9\u6cd5\u7684\u753b\u5e03\u4e0d\u53ef\u89c1\uff09\uff0c\u800c\u8fd9\u91cc\u7684\u53ef\u89c1\u662f\u6307\u5728\u7a0b\u5e8f\u5c42\u9762\u53ef\u89c1\u7684\uff0c\u6545\u8fd9\u79cd\u65b9\u5f0f\u53ef\u80fd\u5bfc\u81f4\u7f29\u653e\u65f6\u4ea7\u751f\u660e\u663e\u5361\u987f\u3002</p>","tags":["\u63a7\u4ef6","\u5bb9\u5668\u63a7\u4ef6","\u753b\u5e03","\u7f29\u653e"]},{"location":"tutorials/chapter_02/2/#22-\u6df7\u5408-tkinter-\u63a7\u4ef6","title":"2.2 \u6df7\u5408 <code>tkinter</code> \u63a7\u4ef6","text":"<p>\u753b\u5e03\u53ef\u4ee5\u627f\u8f7d <code>maliang</code> \u7684\u865a\u62df\u63a7\u4ef6\uff0c\u4f46\u5b83\u672c\u8eab\u4e5f\u662f <code>tkinter</code> \u7684\u63a7\u4ef6\uff0c\u56e0\u6b64\u4e5f\u53ef\u4ee5\u5305\u542b <code>tkinter</code> \u7684\u63a7\u4ef6\uff0c\u8fd9\u662f\u5b8c\u5168\u53ef\u4ee5\u7684\u3002</p> <p>\u4e0d\u8fc7\u4e3a\u4e86\u517c\u5bb9\u6027\u8003\u8651\uff0c\u63a8\u8350\u5728 <code>Canvas</code> \u91cc\u7684 <code>tkinter</code> \u63a7\u4ef6\u4f7f\u7528 <code>Place</code> \u5e03\u5c40\u65b9\u5f0f\uff0c\u8fd9\u6837\u5728\u7f29\u653e\u65f6\uff0c\u5176\u7f29\u653e\u6a21\u5f0f\u4f1a\u548c <code>maliang</code> \u7684\u865a\u62df\u63a7\u4ef6\u4fdd\u6301\u4e00\u81f4\u3002\u4f7f\u7528\u5176\u5b83\u7684\u5e03\u5c40\u65b9\u5f0f\u4e5f\u662f\u53ef\u4ee5\uff0c\u4f46\u65e0\u6cd5\u4fdd\u8bc1\u7f29\u653e\u65f6\u80fd\u5f97\u5230\u6b63\u786e\u7684\u7ed3\u679c\u3002</p> <pre><code>import tkinter.ttk as ttk\n\nimport maliang\nimport maliang.theme as theme\n\ntheme.set_color_mode(\"light\")\n\nroot = maliang.Tk(title=\"\u767b\u5f55\")\nroot.center()\n\ncv = maliang.Canvas(auto_zoom=True)\ncv.place(width=1280, height=720)\n\nttk.Label(cv, text=\"\u8d26 \u53f7 \u767b \u5f55\", font=(maliang.Font.family, -48), anchor=\"center\").place(width=400, height=100, x=440, y=150)\n\nttk.Label(cv, text=\"\u8d26\u53f7\").place(x=450, y=300)\nttk.Entry(cv, font=(maliang.Font.family, -20)).place(width=380, height=50, x=450, y=340)\nttk.Label(cv, text=\"\u5bc6\u7801\").place(x=450, y=400)\nttk.Entry(cv, font=(maliang.Font.family, -20), show=\"\u25cf\").place(width=380, height=50, x=450, y=440)\n\nttk.Button(cv, text=\"\u6ce8 \u518c\").place(width=180, height=50, x=450, y=540)\nttk.Button(cv, text=\"\u767b \u5f55\").place(width=180, height=50, x=650, y=540)\n\nroot.mainloop()\n</code></pre> <p>\u4e0a\u9762\u4ee3\u7801\u5c31\u662f\u5728 <code>Canvas</code> \u91cc\u6df7\u5408\u4e86 <code>tkinter</code> \u63a7\u4ef6\u7684\u793a\u4f8b\u3002</p> <p>\u8fd0\u884c\u8fd9\u6bb5\u4ee3\u7801\uff0c\u4f60\u53ef\u80fd\u4f1a\u5bf9\u8fd9\u4e2a\u6548\u679c\u5f88\u719f\u6089\u3002\u5176\u5b9e\u5728\u524d\u9762\u7684\u7ae0\u8282 \u00a71.2 \u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684\u754c\u9762 \u7684\u793a\u4f8b\u4ee3\u7801\u4e2d\u6211\u4eec\u5df2\u7ecf\u7528 <code>maliang</code> \u5b9e\u73b0\u4e86\u7c7b\u4f3c\u7684\u6548\u679c\uff0c\u8fd9\u91cc\u53ea\u662f\u7528 <code>tkinter.ttk</code> \u518d\u6b21\u5b9e\u73b0\u4e86\u5b83\uff0c\u4f46\u4e0d\u540c\u7684\u662f\uff0c\u8fd9\u91cc\u662f <code>maliang</code> \u6df7\u5408 <code>tkinter.ttk</code> \u505a\u7684\uff0c\u5176\u4e0d\u4ec5\u5177\u6709 <code>tkinter.ttk</code> \u7684\u6837\u5f0f\uff0c\u8fd8\u62e5\u6709\u4e86 <code>maliang</code> \u7684\u529f\u80fd\u3002(1)</p> <ol> <li>\ud83d\udca1\u4f60\u53ef\u4ee5\u8bd5\u7740\u7f29\u653e\u7a97\u53e3\uff0c\u770b\u770b\u4e0e\u539f\u751f\u7684 <code>tkinter.ttk</code> \u7a0b\u5e8f\u76f8\u6bd4\uff0c\u6709\u4ec0\u4e48\u4e0d\u540c\u4e4b\u5904</li> </ol>","tags":["\u63a7\u4ef6","\u5bb9\u5668\u63a7\u4ef6","\u753b\u5e03","\u7f29\u653e"]},{"location":"tutorials/chapter_02/2/#24-\u5d4c\u5957\u753b\u5e03","title":"2.4 \u5d4c\u5957\u753b\u5e03","text":"<p>\u65e2\u7136\u753b\u5e03\u672c\u8eab\u662f <code>tkinter</code> \u63a7\u4ef6\uff0c\u90a3\u81ea\u7136\u753b\u5e03\u53ef\u4ee5\u5d4c\u5957\u5728\u753b\u5e03\u4e4b\u4e2d\uff0c\u5f53\u7136\uff0c<code>Canvas</code> \u548c <code>Canvas</code> \u81ea\u8eab\u4e4b\u95f4\u4e5f\u662f\u53ef\u4ee5\u4efb\u610f\u5d4c\u5957\u7684\u3002</p>","tags":["\u63a7\u4ef6","\u5bb9\u5668\u63a7\u4ef6","\u753b\u5e03","\u7f29\u653e"]},{"location":"tutorials/chapter_03/","title":"\u7b2c\u4e09\u7ae0\uff1a\u57fa\u672c\u63a7\u4ef6","text":"<p> \u5b57\u6570 79 \u4e2a \u00a0 \u56fe\u7247 2 \u5f20 \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p> </p> <p>\u7ae0\u8282\u6982\u8ff0</p> <p>\u672c\u7ae0\u4f1a\u8be6\u7ec6\u8bf4\u660e\u5982\u4f55\u4f7f\u7528 <code>maliang</code> \u4e2d\u6240\u6709\u7684\u57fa\u672c\u63a7\u4ef6\u3002</p> <p>\u6240\u6709\u63a7\u4ef6\u88ab\u5206\u4e3a\u4e09\u7c7b\uff1a\u4fe1\u606f\u7c7b\u63a7\u4ef6\u3001\u529f\u80fd\u7c7b\u63a7\u4ef6\u548c\u6587\u672c\u7c7b\u63a7\u4ef6\u3002</p>"},{"location":"tutorials/chapter_03/#\u672c\u7ae0\u5185\u5bb9","title":"\u672c\u7ae0\u5185\u5bb9","text":"<ul> <li>3.1 \u4fe1\u606f\u7c7b\u63a7\u4ef6</li> <li>3.2 \u529f\u80fd\u7c7b\u63a7\u4ef6</li> <li>3.3 \u6587\u672c\u7c7b\u63a7\u4ef6</li> </ul>"},{"location":"tutorials/chapter_03/1/","title":"\u00a73.1 \u4fe1\u606f\u7c7b\u63a7\u4ef6","text":"<p> \u5b57\u6570 1496 \u4e2a \u00a0 \u4ee3\u7801 58 \u884c \u00a0 \u56fe\u7247 20 \u5f20 \u00a0 \u9605\u8bfb\u65f6\u95f4 6 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p>\u6e29\u99a8\u63d0\u793a\uff1a\u5207\u6362\u7f51\u7ad9\u4e3b\u9898\u53ef\u5207\u6362\u6548\u679c\u56fe\u7684\u4e3b\u9898</p> <p>\u672c\u5c0f\u8282\u7684\u56fe\u7247\u5927\u91cf\u6d89\u53ca\u4e3b\u9898\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u5207\u6362\u7f51\u7ad9\u4e3b\u9898\u6765\u67e5\u770b\u5728\u4e0d\u540c\u4e3b\u9898\u4e0b\u7a0b\u5e8f\u8fd0\u884c\u7684\u6548\u679c\u56fe\uff0c\u540e\u9762\u7684\u7ae0\u8282\u4e5f\u662f\u4e00\u6837\u7684\u3002\u7f51\u7ad9\u7684\u4e3b\u9898\u5171\u6709\u4e09\u79cd\u6a21\u5f0f\uff0c\u5206\u522b\u5bf9\u5e94 <code>maliang</code> \u7684\u4e3b\u9898\u4e09\u79cd\u6a21\u5f0f\u3002\u9f20\u6807\u79fb\u81f3\u7f51\u7ad9\u4e3b\u9898\u5207\u6362\u6309\u94ae\u4e0b\u53ef\u67e5\u770b\u5f53\u524d\u4e3b\u9898\u3002</p>","tags":["\u63a7\u4ef6","\u4fe1\u606f\u5c55\u793a","\u6587\u672c","\u56fe\u7247"]},{"location":"tutorials/chapter_03/1/#\u4e00\u4fe1\u606f\u7c7b\u63a7\u4ef6\u7b80\u8ff0","title":"\u4e00\u3001\u4fe1\u606f\u7c7b\u63a7\u4ef6\u7b80\u8ff0","text":"","tags":["\u63a7\u4ef6","\u4fe1\u606f\u5c55\u793a","\u6587\u672c","\u56fe\u7247"]},{"location":"tutorials/chapter_03/1/#11-\u4ec0\u4e48\u662f\u4fe1\u606f\u7c7b\u63a7\u4ef6","title":"1.1 \u4ec0\u4e48\u662f\u4fe1\u606f\u7c7b\u63a7\u4ef6","text":"<p>\u4fe1\u606f\u7c7b\u63a7\u4ef6\u5c31\u662f\u6307\u90a3\u4e9b\u5e94\u8be5\u7528\u4e8e\u5c55\u793a\u4fe1\u606f\uff0c\u800c\u4e0d\u5177\u6709\u989d\u5916\u529f\u80fd\u7684\u63a7\u4ef6\uff0c\u5982\u6807\u7b7e\u63a7\u4ef6\u3002</p> <p>\u76ee\u524d <code>maliang</code> \u5185\u7f6e\u7684\u4fe1\u606f\u7c7b\u63a7\u4ef6\u6709 <code>Text</code>\u3001<code>Image</code>\u3001<code>Label</code>\u3001<code>ProgressBar</code>\u3001<code>Tooltip</code> \u548c <code>Spinner</code>\u3002</p>","tags":["\u63a7\u4ef6","\u4fe1\u606f\u5c55\u793a","\u6587\u672c","\u56fe\u7247"]},{"location":"tutorials/chapter_03/1/#12-\u6ce8\u610f\u4e8b\u9879","title":"1.2 \u6ce8\u610f\u4e8b\u9879","text":"<p>\u4fe1\u606f\u7c7b\u63a7\u4ef6\u7684\u672c\u610f\u5c31\u662f\u5c55\u793a\u4fe1\u606f\u7684\uff0c\u5176\u4e0d\u5e94\u8be5\u5305\u542b\u5176\u4ed6\u989d\u5916\u7684\u529f\u80fd\uff0c\u5982\u679c\u9700\u8981\u63a7\u4ef6\u6709\u5176\u4ed6\u7684\u529f\u80fd\uff0c\u5e94\u8be5\u8003\u8651\u4f7f\u7528\u5176\u4ed6\u5bf9\u5e94\u7684\u63a7\u4ef6\u6216\u8005\u81ea\u5b9a\u4e49\u4e00\u4e2a\u7b26\u5408\u81ea\u5df1\u9700\u8981\u7684\u63a7\u4ef6\u3002</p> <p>\u5173\u4e8e\u81ea\u5b9a\u4e49\u63a7\u4ef6\uff0c\u540e\u7eed\u7ae0\u8282\u4e2d\u4f1a\u8be6\u7ec6\u8bb2\u8ff0\u3002</p>","tags":["\u63a7\u4ef6","\u4fe1\u606f\u5c55\u793a","\u6587\u672c","\u56fe\u7247"]},{"location":"tutorials/chapter_03/1/#\u4e8c\u4fe1\u606f\u7c7b\u63a7\u4ef6\u8be6\u8ff0","title":"\u4e8c\u3001\u4fe1\u606f\u7c7b\u63a7\u4ef6\u8be6\u8ff0","text":"","tags":["\u63a7\u4ef6","\u4fe1\u606f\u5c55\u793a","\u6587\u672c","\u56fe\u7247"]},{"location":"tutorials/chapter_03/1/#21-text","title":"2.1 <code>Text</code>","text":"<p><code>Text</code> \u662f\u6587\u672c\u63a7\u4ef6\uff0c\u5b83\u7684\u7528\u9014\u662f\u5c55\u793a\u4e00\u4e9b\u6587\u672c\u3002\u8fd9\u4e9b\u6587\u672c\u53ef\u4ee5\u968f\u7740\u753b\u5e03\u7684\u7f29\u653e\u800c\u7f29\u653e\uff0c\u968f\u7a0b\u5e8f\u7684\u4eae\u8272\u4e0e\u6697\u8272\u800c\u6539\u53d8\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5176 <code>get</code> \u548c <code>set</code> \u65b9\u6cd5\u6765\u83b7\u53d6\u548c\u8bbe\u7f6e\u63a7\u4ef6\u6240\u5c55\u793a\u7684\u6587\u672c\u5185\u5bb9\u3002</p> <p>\u4e0b\u9762\u8fd9\u6bb5\u4ee3\u7801\u4f1a\u5728\u5750\u6807\u4e3a <code>(10, 10)</code> \u7684\u4f4d\u7f6e\u653e\u7f6e\u4e00\u4e2a\u951a\u70b9\u4e3a\u897f\u5317\u7684\u6587\u672c\uff0c\u8be5\u6587\u672c\u7684\u989c\u8272\u4f1a\u81ea\u52a8\u9002\u5e94\u4e3b\u9898\uff0c\u540c\u65f6\u53ef\u4ee5\u54cd\u5e94\u753b\u5e03\u7684\u7f29\u653e\u3002</p> <pre><code>import maliang\n\nroot = maliang.Tk()\ncv = maliang.Canvas(auto_zoom=True)\ncv.place(width=1280, height=720)\n\nmaliang.Text(cv, (10, 10), text=\"Hello tkintertools!\", anchor=\"nw\")\n\nroot.mainloop()\n</code></pre> <p>\u6548\u679c\u5982\u4e0b\uff1a(1)</p> <ol> <li>\ud83d\udca1\u4f60\u53ef\u4ee5\u901a\u8fc7\u66f4\u6539\u7f51\u7ad9\u4e3b\u9898\u6765\u67e5\u770b\u6548\u679c\u56fe\u5728\u4e0d\u540c\u4e3b\u9898\u4e0b\u7684\u6837\u5b50</li> </ol> \u56fe1 \u6587\u672c\u63a7\u4ef6","tags":["\u63a7\u4ef6","\u4fe1\u606f\u5c55\u793a","\u6587\u672c","\u56fe\u7247"]},{"location":"tutorials/chapter_03/1/#22-image","title":"2.2 <code>Image</code>","text":"<p><code>Image</code> \u662f\u56fe\u7247\u63a7\u4ef6\uff0c\u7528\u4e8e\u5c55\u793a\u56fe\u7247\uff0c\u5176\u53ef\u4ee5\u54cd\u5e94\u753b\u5e03\u7684\u7f29\u653e\uff0c\u5728\u6ca1\u6709\u5b89\u88c5 <code>pillow</code> \u53ef\u9009\u5305\u7684\u65f6\u5019\uff0c\u4ec5\u652f\u6301 <code>tkinter</code> \u539f\u751f\u56fe\u7247\u683c\u5f0f\uff08PNG \u7b49\uff09\uff0c\u5b89\u88c5 <code>pillow</code> \u4e4b\u540e\u53ef\u4ee5\u652f\u6301\u66f4\u591a\u7684\u683c\u5f0f\u800c\u65e0\u9700\u66f4\u6539\u4efb\u4f55\u4ee3\u7801\u3002</p> <p>\u7279\u522b\u6ce8\u610f\uff1a\u7f3a\u5c11 <code>pillow</code> \u53ef\u80fd\u5bfc\u81f4\u6027\u80fd\u4f4e\u4e0b</p> <p>\u5728\u6ca1\u6709\u5b89\u88c5 <code>pillow</code> \u7684\u60c5\u51b5\u4e0b\uff0c\u56fe\u7247\u4e5f\u662f\u53ef\u4ee5\u7f29\u653e\u7684\uff0c\u4f46\u7f29\u653e\u7684\u6548\u7387\u6781\u4f4e\uff0c\u6781\u6709\u53ef\u80fd\u5bfc\u81f4\u7a97\u53e3\u7f29\u653e\u65f6\u4ea7\u751f\u4e25\u91cd\u7684\u5361\u987f\uff0c\u5efa\u8bae\u6709\u56fe\u7247\u7f29\u653e\u9700\u6c42\u7684\u670b\u53cb\u5b89\u88c5\u4e00\u4e0b <code>pillow</code>\u3002</p> <p>\u5982\u679c\u60a8\u5df2\u7ecf\u6309\u7167 \u00a71.1 \u5b89\u88c5 tkintertools \u4e2d\u7684\u63a8\u8350\u65b9\u5f0f\u5b89\u88c5\uff0c\u5219\u4e0d\u9700\u8981\u5173\u5fc3\u8fd9\u5219\u8bf4\u660e\u3002</p> <p>\u4e0e\u4e0a\u9762\u63d0\u5230\u7684 <code>Text</code> \u63a7\u4ef6\u7c7b\u4f3c\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528 <code>get</code>\u548c <code>set</code> \u65b9\u6cd5\u6765\u83b7\u53d6\u548c\u8bbe\u7f6e <code>Image</code> \u63a7\u4ef6\u7684\u5185\u5bb9\u3002</p> <p>\u4e0b\u9762\u7684\u4ee3\u7801\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff1a</p> <pre><code>import maliang\n\nroot = maliang.Tk()\ncv = maliang.Canvas(auto_zoom=True)\ncv.place(width=1280, height=720)\n\nmaliang.Image(cv, (100, 100), image=maliang.PhotoImage(file=\"./logo.png\"), anchor=\"center\")\n\nroot.mainloop()\n</code></pre> <p>\u6548\u679c\u5982\u4e0b\uff1a</p> \u56fe2 \u56fe\u7247\u63a7\u4ef6 <p>\u793a\u4f8b\u4e2d\u7684\u56fe\u7247\u6587\u4ef6\u662f\u65e7\u7248 <code>maliang</code> \u7684 Logo\uff0c\u53ef\u4ee5\u5728\u6b64\u5904\u83b7\u53d6\u3002</p> <p><code>maliang</code> \u7684 <code>Image</code> \u76f8\u6bd4\u4e8e <code>tkinter</code> \u7684\u56fe\u7247\u5c55\u793a\u4f1a\u7a0d\u5fae\u65b9\u4fbf\u4e00\u4e9b\uff0c\u5bf9\u4e8e <code>tkinter</code> \u5c55\u793a\u56fe\u7247\u7684\u65b9\u6cd5\uff0c\u5176 <code>PhotoImage</code> \u7c7b\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u5176\u5fc5\u987b\u662f\u5168\u5c40\u53d8\u91cf\uff08\u4fdd\u6301\u5f15\u7528\uff09\u624d\u53ef\u4ee5\u5c55\u793a\u56fe\u7247\uff0c\u8be6\u60c5\u89c1\u5b98\u65b9\u6587\u6863\uff0c\u800c <code>maliang</code> \u7684 <code>Image</code> \u4f1a\u5bf9\u6b64\u8fdb\u884c\u4e00\u5b9a\u7684\u5904\u7406\uff0c\u4f7f\u5f97\u67d0\u4e9b\u60c5\u51b5\u4e0d\u4f1a\u51fa\u73b0\u201c\u7a7a\u767d\u56fe\u7247\u201d\u7684\u95ee\u9898\u3002</p>","tags":["\u63a7\u4ef6","\u4fe1\u606f\u5c55\u793a","\u6587\u672c","\u56fe\u7247"]},{"location":"tutorials/chapter_03/1/#23-label","title":"2.3 <code>Label</code>","text":"<p><code>maliang</code> \u7684 <code>Label</code> \u7a0d\u7a0d\u4e0d\u540c\u4e8e <code>tkinter</code> \u7684 <code>Label</code>\uff0c\u540c\u6837\u662f\u5c55\u793a\u4fe1\u606f\uff0c\u4f46 <code>tkinter</code> \u7684 <code>Label</code> \u7684\u529f\u80fd\u66f4\u591a\u7684\u662f\u7528\u4e0a\u9762\u8bb2\u5230\u7684 <code>Text</code> \u6765\u66ff\u4ee3\u7684\u3002\u8fd9\u91cc\u7684 <code>Label</code> \u66f4\u50cf\u662f\u6807\u7b7e\u771f\u6b63\u7684\u610f\u4e49\uff0c\u4e5f\u5c31\u662f\u7528\u5b83\u6765\u5c55\u793a\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u5206\u7c7b\u6807\u7b7e\u7684\u4e1c\u897f\uff0c\u6bd4\u5982 GitHub Issue \u7684\u6807\u7b7e\u90a3\u6837\u3002</p> <p>\u4e0b\u9762\u7684\u4ee3\u7801\u662f\u4e00\u4e2a\u793a\u4f8b\uff1a</p> <pre><code>import maliang\n\nroot = maliang.Tk()\ncv = maliang.Canvas(auto_zoom=True)\ncv.place(width=1280, height=720)\n\nmaliang.Label(cv, (10, 10), text=\"Label\")\n\nroot.mainloop()\n</code></pre> <p>\u6548\u679c\u5982\u4e0b\uff1a</p>  Windows11 \u98ce\u683c Windows10 \u98ce\u683c <p> \u56fe3 \u6807\u7b7e\u63a7\u4ef6 </p> <p> \u56fe3 \u6807\u7b7e\u63a7\u4ef6 </p> <p>\u6e29\u99a8\u63d0\u793a\uff1a\u90e8\u5206\u63a7\u4ef6\u5916\u89c2\u4e0e\u7cfb\u7edf\u76f8\u5173</p> <p>\u90e8\u5206\u63a7\u4ef6\u5728\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e0b\u6709\u4e0d\u540c\u7684\u5916\u89c2\uff0c\u8fd9\u662f\u4e3a\u4e86\u4f7f\u63a7\u4ef6\u66f4\u7b26\u5408\u64cd\u4f5c\u7cfb\u7edf\u7684 UI \u98ce\u683c\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u90fd\u4f1a\u4f7f\u7528 Windows11 \u98ce\u683c\u7684\u3002\u5f53\u7136\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5f3a\u5236\u6307\u5b9a\u4e00\u79cd\u98ce\u683c\uff0c\u5728\u540e\u7eed\u7ae0\u8282\u4e2d\u4f1a\u63d0\u5230\u8fd9\u4e2a\u7684\u3002</p>","tags":["\u63a7\u4ef6","\u4fe1\u606f\u5c55\u793a","\u6587\u672c","\u56fe\u7247"]},{"location":"tutorials/chapter_03/1/#24-progressbar","title":"2.4 <code>ProgressBar</code>","text":"<p><code>ProgressBar</code> \u662f\u8fdb\u5ea6\u6761\u63a7\u4ef6\uff0c\u76f8\u6bd4\u4e8e <code>tkinter</code> \u7684\u8fdb\u5ea6\u6761\uff0c<code>maliang</code> \u7684\u8fdb\u5ea6\u6761\u5728\u5916\u89c2\u4e0a\u6709\u4e86\u5f88\u5927\u7684\u6539\u5584\uff0c\u4f46\u529f\u80fd\u8fd8\u4e0d\u662f\u5b8c\u6574\u7684\uff0c\u7f3a\u5c11\u4e86\u65e0\u8fdb\u5ea6\u6a21\u5f0f\u3002</p> <p>\u4e0e\u524d\u9762\u63d0\u5230\u7684\u63a7\u4ef6\u7c7b\u4f3c\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 <code>get</code> \u548c <code>set</code> \u65b9\u6cd5\u6765\u83b7\u53d6\u548c\u8bbe\u7f6e\u8fdb\u5ea6\u6761\u7684\u503c\uff0c\u5f53\u8bbe\u7f6e\u7684\u503c\u5c0f\u4e8e <code>0</code> \u65f6\u88ab\u89c6\u4e3a <code>0</code>\uff0c\u5927\u4e8e <code>1</code> \u65f6\u88ab\u89c6\u4e3a <code>1</code>\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff1a</p> <pre><code>import maliang\n\nroot = maliang.Tk()\ncv = maliang.Canvas(auto_zoom=True)\ncv.place(width=1280, height=720)\n\nmaliang.ProgressBar(cv, (10, 10)).set(0.5)\n\nroot.mainloop()\n</code></pre> <p>\u6548\u679c\u5982\u4e0b\uff1a</p>  Windows11 \u98ce\u683c Windows10 \u98ce\u683c <p> \u56fe4 \u8fdb\u5ea6\u6761\u63a7\u4ef6 </p> <p> \u56fe4 \u8fdb\u5ea6\u6761\u63a7\u4ef6 </p>","tags":["\u63a7\u4ef6","\u4fe1\u606f\u5c55\u793a","\u6587\u672c","\u56fe\u7247"]},{"location":"tutorials/chapter_03/1/#25-tooltip","title":"2.5 <code>Tooltip</code>","text":"<p><code>Tooltip</code> \u662f\u5de5\u5177\u63d0\u793a\u6846\u63a7\u4ef6\uff0c\u7b80\u79f0\u63d0\u793a\u6846\u63a7\u4ef6\u3002\u5b83\u7684\u4f5c\u7528\u5c31\u662f\u5728\u9f20\u6807\u79fb\u81f3\u5173\u8054\u63a7\u4ef6\u4e0a\u9762\u65f6\u663e\u793a\u51fa\u6765\u4ee5\u8d77\u5230\u76f8\u5e94\u7684\u63d0\u793a\u4f5c\u7528\u3002</p> <p>\u7279\u522b\u6ce8\u610f\uff1a\u63d0\u793a\u6846\u65e0\u6cd5\u8de8\u753b\u5e03\u663e\u793a</p> <p>\u7531\u4e8e <code>maliang</code> \u7684\u8bbe\u8ba1\u7406\u5ff5\u5c31\u662f\u5c3d\u53ef\u80fd\u57fa\u4e8e\u753b\u5e03\u5b9e\u73b0\u4e00\u5207\u529f\u80fd\uff0c\u6240\u4ee5\u63d0\u793a\u6846\u63a7\u4ef6\u4e5f\u662f\u7531\u753b\u5e03\u7ed8\u5236\u800c\u6210\uff0c\u65e0\u6cd5\u8de8\u51fa\u753b\u5e03\u8fdb\u884c\u663e\u793a\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff1a</p> <pre><code>import maliang\n\nroot = maliang.Tk()\ncv = maliang.Canvas(auto_zoom=True)\ncv.place(width=1280, height=720)\n\npb = maliang.ProgressBar(cv, (10, 10))\npb.set(0.5)\n\nmaliang.Tooltip(pb, text=\"Loading... 50.0%\")\n\nroot.mainloop()\n</code></pre> <p>\u6548\u679c\u5982\u4e0b\uff1a</p>  Windows11 \u98ce\u683c Windows10 \u98ce\u683c <p> \u56fe5 \u63d0\u793a\u6846\u63a7\u4ef6 </p> <p> \u56fe5 \u63d0\u793a\u6846\u63a7\u4ef6 </p>","tags":["\u63a7\u4ef6","\u4fe1\u606f\u5c55\u793a","\u6587\u672c","\u56fe\u7247"]},{"location":"tutorials/chapter_03/1/#26-spinner","title":"2.6 <code>Spinner</code>","text":"<p><code>Spinner</code> \u662f\u73af\u5f62\u8fdb\u5ea6\u6761\uff0c\u7c7b\u4f3c\u4e8e <code>ProgressBar</code>\uff0c\u4f46\u5b83\u662f\u73af\u5f62\u7684\uff0c\u4e14\u76ee\u524d\u76f8\u6bd4\u4e8e <code>ProgressBar</code> \u5b83\u6709\u4e24\u4e2a\u6a21\u5f0f\uff1a\u786e\u5b9a\u6a21\u5f0f\u548c\u4e0d\u5b9a\u6a21\u5f0f\u3002</p> <ul> <li>\u786e\u5b9a\u6a21\u5f0f\uff08<code>\"determinate\"</code>\uff09: \u8fdb\u5ea6\u7531\u7528\u6237\u63a7\u5236\uff0c\u7cbe\u786e\u6307\u5b9a\uff0c\u8868\u793a\u52a0\u8f7d\u8fdb\u5ea6\u786e\u5b9a\u7684\u5185\u5bb9</li> <li>\u4e0d\u5b9a\u6a21\u5f0f\uff08<code>\"indeterminate\"</code>\uff09: \u8fdb\u5ea6\u81ea\u52a8\u5448\u89c4\u5f8b\u53d8\u5316\uff0c\u8868\u793a\u6b63\u5728\u52a0\u8f7d\u4f46\u52a0\u8f7d\u8fdb\u5ea6\u65e0\u6cd5\u786e\u5b9a\u7684\u5185\u5bb9</li> </ul> <p>\u5f88\u663e\u7136\uff0c\u76ee\u524d <code>ProgressBar</code> \u53ea\u6709\u201c\u786e\u5b9a\u6a21\u5f0f\u201d\uff0c\u800c <code>Spinner</code> \u76ee\u524d\u4e24\u79cd\u90fd\u652f\u6301\u3002\u90a3\u4e3a\u4ec0\u4e48\u53e6\u5916\u4e00\u4e2a\u6ca1\u6709\u201c\u4e0d\u5b9a\u6a21\u5f0f\u201d\u5462\uff1f\u56e0\u4e3a\u6211\u61d2\uff08bushi\uff09</p> <p>\u4e0b\u9762\u662f\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff1a</p> <pre><code>import maliang\n\nroot = maliang.Tk()\ncv = maliang.Canvas(auto_zoom=True)\ncv.place(width=1280, height=720)\n\nmaliang.Spinner(cv, (20, 20)).set(0.67)\nmaliang.Spinner(cv, (100, 20), mode=\"indeterminate\")\n\nroot.mainloop()\n</code></pre> <p>\u6548\u679c\u5982\u4e0b\uff1a</p>  Windows11 \u98ce\u683c Windows10 \u98ce\u683c <p> \u56fe6 \u73af\u5f62\u8fdb\u5ea6\u6761\u63a7\u4ef6 </p> <p> \u56fe6 \u73af\u5f62\u8fdb\u5ea6\u6761\u63a7\u4ef6 </p>","tags":["\u63a7\u4ef6","\u4fe1\u606f\u5c55\u793a","\u6587\u672c","\u56fe\u7247"]},{"location":"tutorials/chapter_03/2/","title":"\u00a73.2 \u529f\u80fd\u7c7b\u63a7\u4ef6","text":"<p> \u5b57\u6570 1963 \u4e2a \u00a0 \u4ee3\u7801 111 \u884c \u00a0 \u56fe\u7247 40 \u5f20 \u00a0 \u9605\u8bfb\u65f6\u95f4 8 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p>","tags":["\u63a7\u4ef6","\u529f\u80fd"]},{"location":"tutorials/chapter_03/2/#\u4e00\u529f\u80fd\u7c7b\u63a7\u4ef6\u7b80\u8ff0","title":"\u4e00\u3001\u529f\u80fd\u7c7b\u63a7\u4ef6\u7b80\u8ff0","text":"","tags":["\u63a7\u4ef6","\u529f\u80fd"]},{"location":"tutorials/chapter_03/2/#11-\u4ec0\u4e48\u662f\u529f\u80fd\u7c7b\u63a7\u4ef6","title":"1.1 \u4ec0\u4e48\u662f\u529f\u80fd\u7c7b\u63a7\u4ef6","text":"<p>\u4ece\u540d\u5b57\u4e0a\u5c31\u53ef\u4ee5\u770b\u51fa\uff0c\u5b83\u4eec\u662f\u81ea\u5e26\u4e86\u4e00\u5b9a\u529f\u80fd\u7684\u63a7\u4ef6\uff0c\u76f8\u6bd4\u4e8e\u4fe1\u606f\u7c7b\u63a7\u4ef6\uff0c\u5b83\u4eec\u9664\u4e86\u53ef\u4ee5\u5c55\u793a\u4e00\u5b9a\u7684\u4fe1\u606f\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u901a\u5173\u76f8\u5173\u4e92\u52a8\u6539\u53d8\u76f8\u5e94\u7684\u4fe1\u606f\u3002</p> <p>\u76ee\u524d <code>maliang</code> \u5185\u7f6e\u7684\u529f\u80fd\u7c7b\u63a7\u4ef6\u6709 <code>Button</code>\u3001<code>Switch</code>\u3001<code>ToggleButton</code>\u3001<code>CheckBox</code>\u3001<code>RadioBox</code>\u3001<code>UnderlineButton</code>\u3001<code>HighlightButton</code>\u3001<code>IconButton</code>\u3001<code>Slider</code>\u3001<code>SegmentedButton</code> \u548c <code>OptionButton</code>\u3002</p> <p>\u867d\u7136\u770b\u8d77\u6765\u5f88\u591a\uff0c\u4f46\u5728\u540e\u7eed\u7ae0\u8282\u4e2d\u5b66\u4e60\u4e86\u81ea\u5b9a\u4e49\u63a7\u4ef6\u540e\uff0c\u6211\u4eec\u5c06\u4f1a\u4e86\u89e3\u5230\u5b9e\u9645\u4e0a\u5176\u4e2d\u6709\u5f88\u591a\u7684\u7c7b\u90fd\u662f\u5927\u540c\u5c0f\u5f02\u7684\u3002</p>","tags":["\u63a7\u4ef6","\u529f\u80fd"]},{"location":"tutorials/chapter_03/2/#12-\u4e0e\u4fe1\u606f\u7c7b\u63a7\u4ef6\u7684\u5dee\u5f02","title":"1.2 \u4e0e\u4fe1\u606f\u7c7b\u63a7\u4ef6\u7684\u5dee\u5f02","text":"<p>\u529f\u80fd\u7c7b\u63a7\u4ef6\u4e0e\u4fe1\u606f\u7c7b\u63a7\u4ef6\u6700\u5927\u7684\u5dee\u5f02\u5c31\u662f\uff0c\u5176\u529f\u80fd\u7c7b <code>Feature</code> \u7684\u590d\u6742\u7a0b\u5ea6\u4e0d\u540c\uff0c\u6709\u4e9b\u4fe1\u606f\u7c7b\u63a7\u4ef6\uff0c\u5982 <code>Text</code> \u548c <code>Image</code>\uff0c\u751a\u81f3\u90fd\u6ca1\u6709\u529f\u80fd\u7c7b\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u4eec\u4e0d\u5177\u5907\u4efb\u4f55\u4ea4\u4e92\u3002\u53ef\u4ee5\u8bf4\uff0c\u529f\u80fd\u7c7b\u63a7\u4ef6\u7684\u6838\u5fc3\u5c31\u662f\u5176\u529f\u80fd\u7c7b\u3002</p> <p>\u731c\u4f60\u60f3\u95ee\uff1a\u4ec0\u4e48\u662f\u529f\u80fd\u7c7b <code>Feature</code> \uff1f</p> <p>\u5728\u524d\u9762\u7684\u9009\u8bfb\u7ae0\u8282 \u00a71.3 \u6846\u67b6\u6982\u8ff0 \u4e2d\u6709\u63d0\u5230\uff0c<code>maliang</code> \u7684\u4e00\u4e2a\u63a7\u4ef6\u7531\u4e94\u5927\u57fa\u7840\u90e8\u5206\u7ec4\u6210\uff0c\u5373 <code>Shape</code>\u3001<code>Image</code>\u3001<code>Text</code>\u3001<code>Style</code> \u548c <code>Feature</code>\u3002\u5b83\u4eec\u5206\u522b\u8d1f\u8d23\u56fe\u5f62\u90e8\u5206\u3001\u56fe\u50cf\u90e8\u5206\u3001\u6587\u672c\u90e8\u5206\u3001\u6837\u5f0f\u90e8\u5206\u548c\u529f\u80fd\u90e8\u5206\u3002</p>","tags":["\u63a7\u4ef6","\u529f\u80fd"]},{"location":"tutorials/chapter_03/2/#\u4e8c\u529f\u80fd\u7c7b\u63a7\u4ef6\u8be6\u8ff0","title":"\u4e8c\u3001\u529f\u80fd\u7c7b\u63a7\u4ef6\u8be6\u8ff0","text":"<p>\u4e0b\u9762\u7684\u90fd\u662f\u7ecf\u5178\u7684\u57fa\u672c\u63a7\u4ef6\uff0c\u5728\u5404\u5927 UI \u6846\u67b6\u90fd\u80fd\u89c1\u5230\u5b83\u4eec\u7684\u8eab\u5f71\uff0c\u800c\u8fd9\u91cc\u662f <code>maliang</code> \u5bf9\u5b83\u4eec\u7684\u4e00\u4e2a\u7b80\u5355\u5b9e\u73b0\u3002</p>","tags":["\u63a7\u4ef6","\u529f\u80fd"]},{"location":"tutorials/chapter_03/2/#21-button","title":"2.1 <code>Button</code>","text":"<p><code>Button</code> \u662f\u6309\u94ae\u63a7\u4ef6\uff0c\u53ef\u4ee5\u7528\u4e8e\u6267\u884c\u67d0\u4e9b\u51fd\u6570\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff0c\u521b\u5efa\u4e86\u4e00\u4e2a\u6587\u672c\u5185\u5bb9\u4e3a <code>\"Button\"</code>\uff0c\u4e14\u5728\u70b9\u51fb\u540e\u4f1a\u5728\u7ec8\u7aef\u8f93\u51fa <code>\"Click\"</code> \u7684\u6309\u94ae\uff1a</p> <pre><code>import maliang\n\nroot = maliang.Tk()\ncv = maliang.Canvas(auto_zoom=True)\ncv.place(width=1280, height=720)\n\nmaliang.Button(cv, (20, 20), text=\"Button\", command=lambda: print(\"Click\"))\n\nroot.mainloop()\n</code></pre> <p>\u6548\u679c\u5982\u4e0b\uff1a</p>  Windows11 \u98ce\u683c Windows10 \u98ce\u683c <p> \u56fe1 \u6309\u94ae\u63a7\u4ef6 </p> <p> \u56fe1 \u6309\u94ae\u63a7\u4ef6 </p>","tags":["\u63a7\u4ef6","\u529f\u80fd"]},{"location":"tutorials/chapter_03/2/#22-switch","title":"2.2 <code>Switch</code>","text":"<p><code>Switch</code> \u662f\u5f00\u5173\u63a7\u4ef6\uff0c\u65e2\u53ef\u4ee5\u76f4\u89c2\u5730\u770b\u5230\u72b6\u6001\uff0c\u53c8\u53ef\u4ee5\u76f4\u63a5\u64cd\u4f5c\u6765\u6539\u53d8\u72b6\u6001\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5176 <code>get</code> \u548c <code>set</code> \u65b9\u6cd5\u6765\u83b7\u53d6\u548c\u8bbe\u7f6e\u5176\u72b6\u6001\u3002</p> <p>\u4e0b\u9762\u7684\u793a\u4f8b\u521b\u5efa\u4e86\u4e24\u4e2a\u5f00\u5173\u63a7\u4ef6\uff0c\u5e76\u7ed9\u5b83\u4eec\u7ed1\u5b9a\u4e86\u51fd\u6570 <code>print</code>\uff0c\u5f53\u5b83\u88ab\u70b9\u51fb\u65f6\u4f1a\u5728\u7ec8\u7aef\u8f93\u51fa\u5f53\u524d\u7684\u72b6\u6001\uff1a</p> <pre><code>import maliang\n\nroot = maliang.Tk()\ncv = maliang.Canvas(auto_zoom=True)\ncv.place(width=1280, height=720)\n\nmaliang.Switch(cv, (20, 20), command=print)\nmaliang.Switch(cv, (120, 20), command=print, default=True)\n\nroot.mainloop()\n</code></pre> <p>\u6548\u679c\u5982\u4e0b\uff1a</p>  Windows11 \u98ce\u683c Windows10 \u98ce\u683c <p> \u56fe2 \u5f00\u5173\u63a7\u4ef6 </p> <p> \u56fe2 \u5f00\u5173\u63a7\u4ef6 </p> <p>\u7279\u522b\u6ce8\u610f\uff1a<code>default</code> \u53c2\u6570\u548c <code>set</code> \u65b9\u6cd5</p> <p>\u6211\u4eec\u67e5\u9605\u6587\u6863\u53ef\u4ee5\u6ce8\u610f\u5230\uff0c\u5f00\u5173\u63a7\u4ef6\u5305\u542b\u4e00\u4e2a\u540d\u4e3a <code>default</code> \u7684\u521d\u59cb\u5316\u53c2\u6570\uff0c\u53ef\u4ee5\u8bbe\u5b9a\u5176\u521d\u59cb\u72b6\u6001\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e24\u79cd\u65b9\u5f0f\u6765\u8bbe\u7f6e\u5f00\u5173\u63a7\u4ef6\u7684\u521d\u59cb\u72b6\u6001\uff0c\u5176\u4e00\u662f\u5229\u7528 <code>default</code> \u53c2\u6570\uff0c\u5176\u4e8c\u662f\u5229\u7528 <code>set</code> \u65b9\u6cd5\u3002</p> <p>\u82e5\u6ca1\u6709\u6307\u5b9a <code>set</code> \u65b9\u6cd5\u7684 <code>callback</code> \u53c2\u6570\uff0c\u90a3\u4e48\u8fd9\u4e24\u79cd\u65b9\u5f0f\u5e76\u6ca1\u6709\u5dee\u5f02\u3002\u5f53 <code>callback</code> \u88ab\u8bbe\u7f6e\u4e3a <code>True</code>\uff0c\u90a3\u4e48\u8c03\u7528 <code>set</code> \u65b9\u6cd5\u7684\u540c\u65f6\u5c06\u8c03\u7528\u63a7\u4ef6\u7ed1\u5b9a\u7684\u5173\u8054\u51fd\u6570\uff0c\u4e0d\u7ba1\u5f53\u524d\u72b6\u6001\u4e0e\u8bbe\u7f6e\u7684\u662f\u5426\u76f8\u540c\u3002\u53cd\u4e4b\uff0c\u5219\u53ea\u4f1a\u6539\u53d8\u63a7\u4ef6\u7684\u5916\u89c2\u548c\u72b6\u6001\uff0c\u4e14\u4ec5\u5728\u4fee\u6539\u7684\u72b6\u6001\u4e0e\u5f53\u524d\u4e0d\u540c\u65f6\u6267\u884c\u3002</p> <p>\u540e\u9762\u6709\u8bb8\u591a\u63a7\u4ef6\u4e5f\u6709\u7c7b\u4f3c\u7684\u8bbe\u5b9a\uff0c\u5c31\u4e0d\u518d\u8d58\u8ff0\u3002</p>","tags":["\u63a7\u4ef6","\u529f\u80fd"]},{"location":"tutorials/chapter_03/2/#23-togglebutton","title":"2.3 <code>ToggleButton</code>","text":"<p><code>ToggleButton</code> \u88ab\u79f0\u4e3a\u5f00\u5173\u6309\u94ae\u63a7\u4ef6\uff0c\u5b83\u672c\u8d28\u548c\u4e0a\u9762\u7684\u5f00\u5173\u63a7\u4ef6\u4e00\u6837\uff0c\u53ea\u662f\u5916\u89c2\u4e0d\u540c\u7f62\u4e86\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff1a</p> <pre><code>import maliang\n\nroot = maliang.Tk()\ncv = maliang.Canvas(auto_zoom=True)\ncv.place(width=1280, height=720)\n\nmaliang.ToggleButton(cv, (20, 20), text=\"ToggleButton\", command=print)\nmaliang.ToggleButton(cv, (20, 120), text=\"ToggleButton\", command=print, default=True)\n\nroot.mainloop()\n</code></pre> <p>\u6548\u679c\u5982\u4e0b\uff1a</p>  Windows11 \u98ce\u683c Windows10 \u98ce\u683c <p> \u56fe3 \u5f00\u5173\u6309\u94ae\u63a7\u4ef6 </p> <p> \u56fe3 \u5f00\u5173\u6309\u94ae\u63a7\u4ef6 </p>","tags":["\u63a7\u4ef6","\u529f\u80fd"]},{"location":"tutorials/chapter_03/2/#24-checkbox","title":"2.4 <code>CheckBox</code>","text":"<p><code>CheckBox</code> \u662f\u590d\u9009\u6846\u63a7\u4ef6\uff0c\u4f46 <code>maliang</code> \u7684\u590d\u9009\u6846\u63a7\u4ef6\u53ef\u80fd\u548c\u5176\u5b83 UI \u6846\u67b6\u91cc\u9762\u7684\u590d\u9009\u6846\u63a7\u4ef6\u4e0d\u540c\uff0c\u5176\u5b83\u7684 UI \u6846\u67b6\u7684\u590d\u9009\u6846\u4e00\u822c\u90fd\u662f\u5e26\u6587\u672c\u7684\uff0c\u4f46 <code>maliang</code> \u7684\u590d\u9009\u6846\u771f\u7684\u5c31\u53ea\u6709\u4e00\u4e2a\u6846\u3002\u8fd9\u6837\u7528\u6237\u53ef\u4ee5\u7075\u6d3b\u653e\u7f6e\u590d\u9009\u6846\u5bf9\u5e94\u6587\u672c\u7684\u4f4d\u7f6e\u3002</p> <p>\u4e0b\u9762\u7684\u793a\u4f8b\u662f\u590d\u9009\u6846\u914d\u4e0a\u6587\u672c\u63a7\u4ef6\u7684\u6548\u679c\uff1a</p> <pre><code>import maliang\n\nroot = maliang.Tk()\ncv = maliang.Canvas(auto_zoom=True)\ncv.place(width=1280, height=720)\n\nmaliang.CheckBox(cv, (20, 20), command=print)\nmaliang.Text(cv, (60, 35), text=\"CheckBox\", anchor=\"w\")\nmaliang.CheckBox(cv, (20, 120), command=print, default=True)\nmaliang.Text(cv, (60, 135), text=\"CheckBox\", anchor=\"w\")\n\nroot.mainloop()\n</code></pre> <p>\u6548\u679c\u5982\u4e0b\uff1a</p>  Windows11 \u98ce\u683c Windows10 \u98ce\u683c <p> \u56fe4 \u590d\u9009\u6846\u63a7\u4ef6 </p> <p> \u56fe4 \u590d\u9009\u6846\u63a7\u4ef6 </p>","tags":["\u63a7\u4ef6","\u529f\u80fd"]},{"location":"tutorials/chapter_03/2/#25-radiobox","title":"2.5 <code>RadioBox</code>","text":"<p>\u4e0e\u590d\u9009\u6846\u63a7\u4ef6\u5bf9\u5e94\u7684\u5c31\u662f <code>RadioBox</code> \u5355\u9009\u6846\u63a7\u4ef6\uff0c\u4e0e\u590d\u9009\u6846\u63a7\u4ef6\u7c7b\u4f3c\uff0c\u4f46\u662f\u5b83\u7684\u76ee\u524d\u60c5\u51b5\u6709\u4e9b\u5c34\u5c2c\uff0c\u56e0\u4e3a\u65e0\u6cd5\u5224\u65ad\u54ea\u4e9b\u5355\u9009\u6846\u662f\u7ed1\u5b9a\u5728\u4e00\u8d77\u7684\uff0c\u6240\u4ee5\u9700\u8981\u7528\u6237\u81ea\u5df1\u53bb\u7ed1\u5b9a\u76f8\u5173\u51fd\u6570\u6765\u5b8c\u6210\u5355\u9009\u6846\u7684\u529f\u80fd\u3002\u76ee\u524d\u5355\u9009\u6846\u53ea\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5916\u89c2\uff0c\u8bf4\u7b80\u5355\u70b9\u5c31\u662f\u5b58\u5728\u4e00\u5b9a\u95ee\u9898\uff0c\u6709\u5f85\u4f18\u5316\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff1a</p> <pre><code>import maliang\n\nroot = maliang.Tk()\ncv = maliang.Canvas(auto_zoom=True)\ncv.place(width=1280, height=720)\n\nrb1 = maliang.RadioBox(cv, (20, 20), command=print)\nmaliang.Text(cv, (60, 35), text=\"RadioBox\", anchor=\"w\")\nrb2 = maliang.RadioBox(cv, (20, 120), command=print, default=True)\nmaliang.Text(cv, (60, 135), text=\"RadioBox\", anchor=\"w\")\n\nmaliang.RadioBox.group(rb1, rb2)#(1)!\n\nroot.mainloop()\n</code></pre> <ol> <li> <p>\u5b9e\u9645\u4e0a\u4f60\u4e5f\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a</p> <pre><code>rb1.group(rb2)\n</code></pre> </li> </ol> <p>\u6548\u679c\u5982\u4e0b\uff1a</p>  Windows11 \u98ce\u683c Windows10 \u98ce\u683c <p> \u56fe5 \u5355\u9009\u6846\u63a7\u4ef6 </p> <p> \u56fe5 \u5355\u9009\u6846\u63a7\u4ef6 </p> <p>\u5982\u679c\u89c9\u5f97\u5355\u9009\u6846\u8fd9\u4e2a\u4e0d\u597d\u64cd\u4f5c\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u9009\u62e9\u4f7f\u7528\u529f\u80fd\u7c7b\u4f3c\u7684\u5206\u6bb5\u6309\u94ae\u63a7\u4ef6\u3002</p>","tags":["\u63a7\u4ef6","\u529f\u80fd"]},{"location":"tutorials/chapter_03/2/#26-slider","title":"2.6 <code>Slider</code>","text":"<p><code>Slider</code> \u6ed1\u52a8\u6761\u63a7\u4ef6\uff0c\u7528\u4e8e\u76f4\u89c2\u7684\u8c03\u6574\u5904\u5728\u67d0\u4e2a\u8303\u56f4\u7684\u6570\u636e\uff0c\u5e76\u5b9e\u65f6\u5730\u770b\u5230\u53cd\u9988\u3002</p> <p>\u4e0b\u9762\u8fd9\u4e2a\u793a\u4f8b\u5c31\u53ef\u4ee5\u5728\u8c03\u8282\u7684\u540c\u65f6\u5728\u7ec8\u7aef\u770b\u5230\u5f53\u524d\u6ed1\u52a8\u6761\u7684\u503c\uff1a</p> <pre><code>import maliang\n\nroot = maliang.Tk()\ncv = maliang.Canvas(auto_zoom=True)\ncv.place(width=1280, height=720)\n\nmaliang.Slider(cv, (20, 20), default=0.5, command=print)\n\nroot.mainloop()\n</code></pre> <p>\u6548\u679c\u5982\u4e0b\uff1a</p>  Windows11 \u98ce\u683c Windows10 \u98ce\u683c <p> \u56fe6 \u6ed1\u52a8\u6761\u63a7\u4ef6 </p> <p> \u56fe6 \u6ed1\u52a8\u6761\u63a7\u4ef6 </p>","tags":["\u63a7\u4ef6","\u529f\u80fd"]},{"location":"tutorials/chapter_03/2/#27-segmentedbutton","title":"2.7 <code>SegmentedButton</code>","text":"<p>\u5206\u6bb5\u6309\u94ae\u63a7\u4ef6\uff0c\u67d0\u4e9b\u60c5\u51b5\u4e0b\u53ef\u4ee5\u4f5c\u4e3a\u5355\u9009\u6846\u63a7\u4ef6\u7684\u5e73\u66ff\u3002\u4f5c\u7528\u548c\u5355\u9009\u6846\u63a7\u4ef6\u7c7b\u4f3c\uff0c\u53ea\u662f\u5916\u89c2\u4e0d\u5927\u76f8\u540c\uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u8d58\u8ff0\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff1a</p> <pre><code>import maliang\n\nroot = maliang.Tk()\ncv = maliang.Canvas(auto_zoom=True)\ncv.place(width=1280, height=720)\n\nmaliang.SegmentedButton(cv, (20, 20), text=(\"Option 1\", \"Option 2\", \"Option 3\"))\n\nroot.mainloop()\n</code></pre> <p>\u6548\u679c\u5982\u4e0b\uff1a</p>  Windows11 \u98ce\u683c Windows10 \u98ce\u683c <p> \u56fe7 \u5206\u6bb5\u6309\u94ae\u63a7\u4ef6 </p> <p> \u56fe7 \u5206\u6bb5\u6309\u94ae\u63a7\u4ef6 </p> <p>\u9664\u4e86\u4e0a\u9762\u7684\u793a\u4f8b\u4ee3\u7801\u6f14\u793a\u7684\u6548\u679c\u4e4b\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5c1d\u8bd5\u8bbe\u7f6e\u5206\u6bb5\u6309\u94ae\u63a7\u4ef6\u7684\u5176\u5b83\u53c2\u6570\uff0c\u5982\u5c06\u53c2\u6570 <code>layout</code> \u8bbe\u7f6e\u4e3a <code>\"vertical\"</code>\uff0c\u4f60\u5c31\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u7eb5\u5411\u5e03\u5c40\u7684\u5206\u6bb5\u6309\u94ae\u63a7\u4ef6\u3002</p>","tags":["\u63a7\u4ef6","\u529f\u80fd"]},{"location":"tutorials/chapter_03/2/#28-optionbutton","title":"2.8 <code>OptionButton</code>","text":"<p>\u9009\u9879\u6309\u94ae\u63a7\u4ef6\uff0c\u76f8\u5f53\u4e8e\u6298\u53e0\u7248\u7684 <code>SegmentedButton</code>\u3002\u5b83\u548c <code>SegmentedButton</code> \u4e00\u6837\uff0c\u53ea\u4e0d\u8fc7\u5b83\u7684\u5185\u5bb9\u53ea\u6709\u5728\u70b9\u51fb\u6309\u94ae\u65f6\u624d\u4f1a\u5c55\u793a\u51fa\u6765\uff0c\u9009\u62e9\u5185\u5bb9\u4e4b\u540e\u53c8\u4f1a\u6d88\u5931\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff1a</p> <pre><code>import maliang\n\nroot = maliang.Tk()\ncv = maliang.Canvas(auto_zoom=True)\ncv.place(width=1280, height=720)\n\nmaliang.OptionButton(cv, (20, 100), text=(\"Option 1\", \"Option 2\", \"Option 3\"))\nmaliang.OptionButton(cv, (200, 100), text=(\"Option 1\", \"Option 2\", \"Option 3\"))\n\nroot.mainloop()\n</code></pre> <p>\u6548\u679c\u5982\u4e0b\uff1a</p>  Windows11 \u98ce\u683c Windows10 \u98ce\u683c <p> \u56fe8 \u9009\u9879\u6309\u94ae\u63a7\u4ef6 </p> <p> \u56fe8 \u9009\u9879\u6309\u94ae\u63a7\u4ef6 </p>","tags":["\u63a7\u4ef6","\u529f\u80fd"]},{"location":"tutorials/chapter_03/2/#\u4e09\u5178\u578b\u81ea\u5b9a\u4e49\u63a7\u4ef6","title":"\u4e09\u3001\u5178\u578b\u81ea\u5b9a\u4e49\u63a7\u4ef6","text":"<p>\u4e0b\u9762\u7684\u8fd9\u4e9b\u63a7\u4ef6\u5c5e\u4e8e\u5bf9 <code>Button</code> \u7684\u4e00\u4e2a\u4e8c\u6b21\u4fee\u6539\u5f97\u5230\u7684\uff0c\u5c5e\u4e8e\u7b80\u5355\u81ea\u5b9a\u4e49\u63a7\u4ef6\uff0c\u6bd4\u8f83\u5178\u578b\uff0c\u8fd9\u91cc\u5355\u72ec\u62ff\u51fa\u6765\u8bf4\u660e\u3002</p> <p>\u4e0d\u8fc7\u8fd9\u91cc\u4e0d\u4f1a\u8be6\u8ff0\u5b83\u4eec\u662f\u600e\u4e48\u81ea\u5b9a\u4e49\u51fa\u6765\u7684\uff0c\u53ea\u662f\u5728\u8fd9\u91cc\u505a\u4e00\u4e2a\u5206\u7c7b\uff0c\u628a\u5b83\u4eec\u5f53\u4f5c\u548c\u5176\u5b83\u63a7\u4ef6\u4e00\u6837\u666e\u901a\u7684\u63a7\u4ef6\u5c31\u884c\u3002\u5173\u4e8e\u81ea\u5b9a\u4e49\u63a7\u4ef6\uff0c\u540e\u7eed\u7ae0\u8282\u4f1a\u505a\u8be6\u7ec6\u8bb2\u89e3\u3002</p> <p>\u7279\u522b\u6ce8\u610f\uff1a\u53ef\u80fd\u7684\u53d8\u52a8</p> <p>\u4e0b\u9762\u7684\u8fd9\u4e09\u4e2a\u63a7\u4ef6\u4e0d\u5c5e\u4e8e\u57fa\u672c\u7684\u63a7\u4ef6\uff0c\u5728 <code>maliang</code> \u6b63\u5f0f\u7248\u540e\u53ef\u80fd\u4f1a\u88ab\u79fb\u52a8\u5230 <code>maliang</code> \u63a7\u4ef6\u6269\u5c55\u5305\uff01<code>maliang</code> \u81ea\u8eab\u5e94\u53ea\u5305\u62ec\u6807\u51c6\u7684\u57fa\u672c\u63a7\u4ef6\uff0c\u800c\u975e\u4e3b\u6d41\u7684\u63a7\u4ef6\u5e94\u88ab\u5355\u72ec\u6210\u4e3a\u4e00\u4e2a\u5305\uff0c\u4ee5\u514d\u8fc7\u591a\u4e0d\u5e38\u7528\u7684\u63a7\u4ef6\u7684\u4ee3\u7801\u53ca\u5176\u6837\u5f0f\u6570\u636e\u5360\u7528\u4e86\u7a7a\u95f4\u3002</p>","tags":["\u63a7\u4ef6","\u529f\u80fd"]},{"location":"tutorials/chapter_03/2/#31-underlinebutton","title":"3.1 <code>UnderlineButton</code>","text":"<p>\u6b64\u63a7\u4ef6\u662f\u4e3a\u4e86\u5b9e\u73b0\u7f51\u9875\u94fe\u63a5\u90a3\u6837\u7684\u6548\u679c\u800c\u505a\u7684\uff0c\u4e00\u822c\u642d\u914d\u6587\u672c\u63a7\u4ef6\u6765\u4f7f\u7528\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff1a</p> <pre><code>import maliang\n\nroot = maliang.Tk()\ncv = maliang.Canvas(auto_zoom=True)\ncv.place(width=1280, height=720)\n\nmaliang.UnderlineButton(cv, (20, 20), text=\"UnderlineButton\", anchor=\"nw\")\n\nroot.mainloop()\n</code></pre> <p>\u6548\u679c\u5982\u4e0b\uff1a</p> \u56fe9 \u4e0b\u5212\u7ebf\u6309\u94ae\u63a7\u4ef6","tags":["\u63a7\u4ef6","\u529f\u80fd"]},{"location":"tutorials/chapter_03/2/#32-highlightbutton","title":"3.2 <code>HighlightButton</code>","text":"<p><code>bug</code>\uff1a\u5b57\u4f53\u5927\u5c0f\u7f29\u653e\u5728\u7a97\u53e3\u7f29\u653e\u540e\u8868\u73b0\u4e0d\u6b63\u5e38</p> <p>\u6b64\u63a7\u4ef6\u5355\u7eaf\u53ea\u662f\u81ea\u5b9a\u4e49\u63a7\u4ef6\u7684\u4e00\u4e2a\u6f14\u793a\uff0c\u5b58\u5728\u4e00\u5b9a\u7684\u95ee\u9898\uff0c\u4e0d\u8fc7\u5177\u6709\u4e00\u5b9a\u7684\u53c2\u8003\u610f\u4e49\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff1a</p> <pre><code>import maliang\n\nroot = maliang.Tk()\ncv = maliang.Canvas(auto_zoom=True)\ncv.place(width=1280, height=720)\n\nmaliang.HighlightButton(cv, (20, 20), text=\"HighlightButton\", anchor=\"nw\")\n\nroot.mainloop()\n</code></pre> <p>\u6548\u679c\u5982\u4e0b\uff1a</p> \u56fe10 \u9ad8\u4eae\u6309\u94ae\u63a7\u4ef6","tags":["\u63a7\u4ef6","\u529f\u80fd"]},{"location":"tutorials/chapter_03/2/#33-iconbutton","title":"3.3 <code>IconButton</code>","text":"<p><code>IconButton</code> \u662f\u56fe\u6807\u6309\u94ae\u63a7\u4ef6\uff0c\u5b83\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u4fbf\u6377\u7c7b\uff0c\u53ef\u4ee5\u5341\u5206\u65b9\u4fbf\u5730\u5c06\u56fe\u6807\u548c\u6587\u672c\u878d\u5408\u5230\u4e00\u4e2a\u6309\u94ae\u91cc\u9762\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff0c\u8fd9\u4e2a\u793a\u4f8b\u4e2d\u4f7f\u7528\u5230\u7684\u56fe\u7247\u4ecd\u662f\u65e7\u7248 <code>maliang</code> \u7684 Logo\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u81ea\u5df1\u7684\u56fe\u7247\u6587\u4ef6\uff1a</p> <pre><code>import maliang\n\nroot = maliang.Tk()\ncv = maliang.Canvas(auto_zoom=True)\ncv.place(width=1280, height=720)\n\nmaliang.IconButton(cv, (20, 20), text=\"IconButton\", image=maliang.PhotoImage(file=\"./logo.png\").resize(32, 32))\n\nroot.mainloop()\n</code></pre> <p>\u6548\u679c\u5982\u4e0b\uff1a</p>  Windows11 \u98ce\u683c Windows10 \u98ce\u683c <p> \u56fe11 \u56fe\u6807\u6309\u94ae\u63a7\u4ef6 </p> <p> \u56fe11 \u56fe\u6807\u6309\u94ae\u63a7\u4ef6 </p>","tags":["\u63a7\u4ef6","\u529f\u80fd"]},{"location":"tutorials/chapter_03/3/","title":"\u00a73.3 \u6587\u672c\u7c7b\u63a7\u4ef6","text":"<p> \u5b57\u6570 945 \u4e2a \u00a0 \u4ee3\u7801 28 \u884c \u00a0 \u56fe\u7247 12 \u5f20 \u00a0 \u9605\u8bfb\u65f6\u95f4 4 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p>","tags":["\u63a7\u4ef6","\u6587\u672c"]},{"location":"tutorials/chapter_03/3/#\u4e00\u6587\u672c\u7c7b\u63a7\u4ef6\u7b80\u8ff0","title":"\u4e00\u3001\u6587\u672c\u7c7b\u63a7\u4ef6\u7b80\u8ff0","text":"","tags":["\u63a7\u4ef6","\u6587\u672c"]},{"location":"tutorials/chapter_03/3/#11-\u4ec0\u4e48\u662f\u6587\u672c\u7c7b\u63a7\u4ef6","title":"1.1 \u4ec0\u4e48\u662f\u6587\u672c\u7c7b\u63a7\u4ef6","text":"<p>\u6587\u672c\u7c7b\u63a7\u4ef6\u5c31\u662f\u529f\u80fd\u4e3b\u8981\u4e0e\u6587\u672c\u6709\u5173\u7684\u4e00\u7c7b\u63a7\u4ef6\uff0c\u6700\u5178\u578b\u7684\u5c31\u662f\u8f93\u5165\u6846\u63a7\u4ef6\u4e86\u3002\u7531\u4e8e\u6d89\u53ca\u6587\u672c\u7684\u76f8\u5173\u529f\u80fd\u591a\u4e14\u590d\u6742\uff0c\u56e0\u6b64 <code>maliang</code> \u76ee\u524d\u5bf9\u6587\u672c\u7c7b\u63a7\u4ef6\u7684\u652f\u6301\u8fd8\u4e0d\u662f\u5f88\u597d\uff0c\u67d0\u4e9b\u529f\u80fd\u8fd8\u6ca1\u6709\u5b8c\u5168\u5b9e\u73b0\u3002</p> <p>\u76ee\u524d <code>maliang</code> \u5185\u7f6e\u7684\u6587\u672c\u7c7b\u63a7\u4ef6\u6709 <code>InputBox</code>\u3001<code>SpinBox</code> \u548c <code>ComboBox</code>\u3002\u4f46\u8fd9\u4e09\u4e2a\u90fd\u662f\u5bf9\u4e8e\u5355\u884c\u6587\u672c\u8fdb\u884c\u64cd\u4f5c\u7684\u63a7\u4ef6\uff0c\u5173\u4e8e\u591a\u884c\u6587\u672c\u7684\u63a7\u4ef6\uff0c\u5c06\u5728\u672a\u6765\u52a0\u5165 <code>maliang</code>\u3002</p>","tags":["\u63a7\u4ef6","\u6587\u672c"]},{"location":"tutorials/chapter_03/3/#12-\u5b83\u4eec\u662f\u5982\u4f55\u8fd0\u4f5c\u7684","title":"1.2 \u5b83\u4eec\u662f\u5982\u4f55\u8fd0\u4f5c\u7684","text":"<p>\u5176\u5b9e\uff0c<code>maliang</code> \u7684\u6587\u672c\u7c7b\u63a7\u4ef6\u4e0d\u50cf\u524d\u9762\u7ae0\u8282\u8bb2\u7684\u90a3\u4e9b\u63a7\u4ef6\u4e00\u6837\uff0c\u6587\u672c\u7c7b\u63a7\u4ef6\u5b9e\u73b0\u8d77\u6765\u975e\u5e38\u590d\u6742\uff0c\u4e3a\u4e86\u9075\u5faa <code>maliang</code> \u4e00\u5207\u90fd\u662f\u7ed8\u5236\u51fa\u6765\u7684\u5b97\u65e8\u4ee5\u53ca\u5b9e\u73b0\u67d0\u4e9b\u7279\u6b8a\u7684\u529f\u80fd\uff0c<code>maliang</code> \u4e0d\u5f97\u4e0d\u505a\u4e86\u59a5\u534f\uff0c\u501f\u7528 <code>tkinter</code> \u4e2d\u76f8\u5bf9\u5e95\u5c42\u7684 API \u6765\u201c\u91cd\u7ed8\u201d\u6587\u672c\u7c7b\u63a7\u4ef6\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u4f7f\u7528 <code>tkinter</code> \u7684\u6587\u672c\u63a7\u4ef6\u3002</p> <p>\u6587\u672c\u7c7b\u63a7\u4ef6\u9700\u8981\u5b9e\u73b0\u5927\u91cf\u529f\u80fd\uff0c\u5982\u590d\u5236\u3001\u526a\u5207\u3001\u7c98\u8d34\u3001\u6587\u672c\u9009\u4e2d\u3001\u5149\u6807\u663e\u793a\u3001\u6587\u672c\u663e\u793a\u3001\u6362\u884c\u5904\u7406\u3001\u5b57\u7b26\u66ff\u6362\u7b49\u7b49\uff0c\u5176\u4e2d\u6700\u590d\u6742\u7684\u83ab\u8fc7\u4e8e\u6587\u672c\u7684\u663e\u793a\u548c\u9009\u4e2d\u4e86\u3002\u6211\u4eec\u77e5\u9053\u4e00\u4e2a\u8f93\u5165\u6846\u5e94\u8be5\u662f\u6709\u4e00\u5b9a\u8303\u56f4\u7684\uff0c\u8d85\u51fa\u8fd9\u4e2a\u8303\u56f4\u7684\u5b57\u7b26\u662f\u4e0d\u4f1a\u663e\u793a\u7684\uff0c\u4f46 <code>maliang</code> \u4e2d\u7684\u4e00\u5207\u90fd\u662f\u7528\u753b\u5e03\u7ed8\u5236\u7684\uff0c\u53ea\u80fd\u7ed8\u5236\uff0c\u65e0\u6cd5\u64e6\u9664\uff0c\u5bfc\u81f4 <code>maliang</code> \u65e0\u6cd5\u50cf\u5176\u5b83 UI \u6846\u67b6\u90a3\u6837\u76f4\u63a5\u9650\u5236\u6587\u672c\u7684\u8303\u56f4\u6765\u5448\u73b0\u51fa\u4e00\u79cd\u6587\u672c\u88ab\u5207\u5272\u7684\u6837\u5b50\uff0c<code>maliang</code> \u53ea\u80fd\u901a\u8fc7\u63a7\u5236\u5b57\u7b26\u663e\u793a\u7684\u6570\u91cf\u6765\u8fbe\u5230\u7c7b\u4f3c\u7684\u6548\u679c\u3002\u800c\u4e0d\u540c\u5b57\u7b26\u7684\u5bbd\u5ea6\u5e76\u4e0d\u76f8\u540c\uff0c\u66f4\u522b\u8bf4\u8fd8\u8981\u6839\u636e\u5b57\u4f53\u6765\u8ba1\u7b97\uff0c\u8fd9\u5c31\u6781\u5927\u5730\u589e\u52a0\u4e86\u5b9e\u73b0\u6587\u672c\u663e\u793a\u4ee5\u53ca\u6587\u672c\u9009\u4e2d\u7684\u529f\u80fd\u7684\u96be\u5ea6\u3002</p>","tags":["\u63a7\u4ef6","\u6587\u672c"]},{"location":"tutorials/chapter_03/3/#13-\u76ee\u524d\u5b58\u5728\u7684\u7f3a\u9677","title":"1.3 \u76ee\u524d\u5b58\u5728\u7684\u7f3a\u9677","text":"<p>\u76ee\u524d <code>maliang</code> \u5bf9\u4e8e\u6587\u672c\u7c7b\u63a7\u4ef6\u8fd8\u662f\u5b9e\u73b0\u4e86\u4e00\u5b9a\u7684\u57fa\u672c\u529f\u80fd\uff0c\u4f46\u4ecd\u5b58\u5728\u4e00\u4e9b\u95ee\u9898\uff0c\u5982\u6587\u672c\u9009\u4e2d\u4e0d\u5b8c\u5584\uff0c\u65e0\u6cd5\u9009\u4e2d\u201c\u6846\u5916\u9690\u85cf\u201d\u7684\u6587\u672c\uff0c\u8fd9\u4e00\u529f\u80fd\u540c\u65f6\u5bfc\u81f4\u4e86\u5168\u9009\u529f\u80fd\u53ea\u80fd\u9009\u4e2d\u663e\u793a\u51fa\u6765\u7684\u6587\u672c\uff0c\u800c\u975e\u771f\u6b63\u7684\u5168\u9009\u3002\u4e0d\u8fc7\u5728\u672a\u6765\u4f1a\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\u7684\uff0c\u76ee\u524d\u53ea\u662f\u6682\u65f6\u672a\u5b9e\u73b0\u800c\u5df2\u3002</p>","tags":["\u63a7\u4ef6","\u6587\u672c"]},{"location":"tutorials/chapter_03/3/#\u4e8c\u6587\u672c\u7c7b\u63a7\u4ef6\u8be6\u8ff0","title":"\u4e8c\u3001\u6587\u672c\u7c7b\u63a7\u4ef6\u8be6\u8ff0","text":"","tags":["\u63a7\u4ef6","\u6587\u672c"]},{"location":"tutorials/chapter_03/3/#21-inputbox","title":"2.1 <code>InputBox</code>","text":"<p><code>InputBox</code> \u5c31\u662f\u8f93\u5165\u6846\u63a7\u4ef6\uff0c\u662f <code>tkinter</code> \u7684\u63a7\u4ef6 <code>Entry</code> \u7684\u5e73\u66ff\uff0c\u4f46\u76f8\u5bf9 <code>Entry</code> \u53c8\u6709\u589e\u5f3a\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8bbe\u5b9a\u5176\u5404\u4e2a\u521d\u59cb\u5316\u53c2\u6570\u6765\u8fbe\u5230\u76f8\u5e94\u7684\u8981\u6c42\uff0c\u5982\u901a\u8fc7\u8bbe\u7f6e\u53c2\u6570 <code>align</code> \u6765\u8bbe\u5b9a\u6587\u672c\u7684\u9760\u5de6\u3001\u5c45\u4e2d\u548c\u9760\u53f3\uff0c\u8bbe\u7f6e\u53c2\u6570 <code>show</code> \u6765\u66ff\u6362\u539f\u6765\u663e\u793a\u7684\u5b57\u7b26\uff0c\u8bbe\u7f6e\u53c2\u6570 <code>placeholder</code> \u6765\u8bbe\u5b9a\u4e00\u4e2a\u63d0\u793a\u6587\u672c\u7b49\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff0c\u5176\u8bbe\u5b9a\u4e00\u4e2a\u63d0\u793a\u6587\u672c\uff0c\u5728\u63a7\u4ef6\u5185\u5bb9\u4e3a\u7a7a\u4e14\u5904\u4e8e <code>\"normal\"</code> \u72b6\u6001\u65f6\uff0c\u4f1a\u4ee5\u7070\u8272\u663e\u793a\u8fd9\u4e2a\u63d0\u793a\u6587\u672c\uff1a</p> <pre><code>import maliang\n\nroot = maliang.Tk()\ncv = maliang.Canvas(auto_zoom=True)\ncv.place(width=1280, height=720)\n\nmaliang.InputBox(cv, (20, 20), placeholder=\"InputBox\")\n\nroot.mainloop()\n</code></pre> <p>\u6548\u679c\u5982\u4e0b\uff1a</p>  Windows11 \u98ce\u683c Windows10 \u98ce\u683c <p> \u56fe1 \u8f93\u5165\u6846\u63a7\u4ef6 </p> <p> \u56fe1 \u8f93\u5165\u6846\u63a7\u4ef6 </p>","tags":["\u63a7\u4ef6","\u6587\u672c"]},{"location":"tutorials/chapter_03/3/#22-spinbox","title":"2.2 <code>SpinBox</code>","text":"<p>\u4ece\u540d\u79f0\u4e0a\u5c31\u77e5\u9053\uff0c\u8fd9\u4e2a\u63a7\u4ef6\u5bf9\u6807\u7684\u5c31\u662f <code>tkinter</code> \u7684 <code>SpinBox</code> \u63a7\u4ef6\uff0c\u529f\u80fd\u7c7b\u4f3c\u7684\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff1a</p> <pre><code>import maliang\n\nroot = maliang.Tk()\ncv = maliang.Canvas(auto_zoom=True)\ncv.place(width=1280, height=720)\n\nmaliang.SpinBox(cv, (20, 20))\n\nroot.mainloop()\n</code></pre> <p>\u6548\u679c\u5982\u4e0b\uff1a</p>  Windows11 \u98ce\u683c Windows10 \u98ce\u683c <p> \u56fe2 \u503c\u8f93\u5165\u63a7\u4ef6 </p> <p> \u56fe2 \u503c\u8f93\u5165\u63a7\u4ef6 </p>","tags":["\u63a7\u4ef6","\u6587\u672c"]},{"location":"tutorials/chapter_03/3/#23-combobox","title":"2.3 <code>ComboBox</code>","text":"<p>\u4e0b\u62c9\u6846\u63a7\u4ef6\u7b97\u662f\u9009\u9879\u6309\u94ae\uff08<code>OptionButton</code>\uff09\u7684\u6587\u672c\u53ef\u7f16\u8f91\u7248\u672c\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u53ef\u4ee5\u901a\u8fc7\u4e0b\u62c9\u9009\u9879\u5217\u8868\u6765\u9009\u62e9\u4e00\u4e2a\u5185\u5bb9\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u76f4\u63a5\u7f16\u8f91\u91cc\u9762\u7684\u5185\u5bb9\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff1a</p> <pre><code>import maliang\n\nroot = maliang.Tk()\ncv = maliang.Canvas(auto_zoom=True)\ncv.place(width=1280, height=720)\n\nmaliang.ComboBox(cv, (20, 20), text=(\"Option1\", \"Option2\", \"Option3\"))\nmaliang.ComboBox(cv, (200, 20), text=(\"Option1\", \"Option2\", \"Option3\"))\n\nroot.mainloop()\n</code></pre> <p>\u6548\u679c\u5982\u4e0b\uff1a</p>  Windows11 \u98ce\u683c Windows10 \u98ce\u683c <p> \u56fe3 \u4e0b\u62c9\u6846\u63a7\u4ef6 </p> <p> \u56fe3 \u4e0b\u62c9\u6846\u63a7\u4ef6 </p>","tags":["\u63a7\u4ef6","\u6587\u672c"]},{"location":"tutorials/chapter_04/","title":"\u7b2c\u56db\u7ae0\uff1a\u52a8\u753b","text":"<p> \u5b57\u6570 52 \u4e2a \u00a0 \u56fe\u7247 2 \u5f20 \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p> </p> <p>\u7ae0\u8282\u6982\u8ff0</p> <p>\u672c\u7ae0\u4f1a\u8be6\u7ec6\u8bf4\u660e\u5982\u4f55\u4f7f\u7528 <code>maliang</code> \u6765\u505a\u51fa\u4e00\u4e9b\u57fa\u672c\u7684\u52a8\u753b\u3002</p>"},{"location":"tutorials/chapter_04/#\u672c\u7ae0\u5185\u5bb9","title":"\u672c\u7ae0\u5185\u5bb9","text":"<ul> <li>4.1 \u57fa\u7840\u52a8\u753b</li> <li>4.2 \u63a7\u5236\u51fd\u6570</li> <li>4.3 \u81ea\u5b9a\u4e49\u52a8\u753b</li> </ul>"},{"location":"tutorials/chapter_04/1/","title":"\u00a74.1 \u57fa\u7840\u52a8\u753b","text":"<p> \u5b57\u6570 1573 \u4e2a \u00a0 \u4ee3\u7801 121 \u884c \u00a0 \u56fe\u7247 18 \u5f20 \u00a0 \u9605\u8bfb\u65f6\u95f4 7 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p>","tags":["\u52a8\u753b","\u539f\u751f\u52a8\u753b","\u63a7\u5236\u51fd\u6570"]},{"location":"tutorials/chapter_04/1/#\u4e00\u52a8\u753b\u7b80\u8ff0","title":"\u4e00\u3001\u52a8\u753b\u7b80\u8ff0","text":"","tags":["\u52a8\u753b","\u539f\u751f\u52a8\u753b","\u63a7\u5236\u51fd\u6570"]},{"location":"tutorials/chapter_04/1/#11-\u52a8\u753b\u7684\u5b9e\u73b0\u65b9\u5f0f","title":"1.1 \u52a8\u753b\u7684\u5b9e\u73b0\u65b9\u5f0f","text":"<p>\u5728 <code>maliang</code> \u4e2d\uff0c\u6709\u4e24\u79cd\u5b9e\u73b0\u52a8\u753b\u7684\u65b9\u5f0f\uff0c\u4e00\u79cd\u662f\u4f7f\u7528 <code>maliang</code> \u5c01\u88c5\u597d\u7684\u52a8\u753b\u7c7b\uff0c\u53e6\u5916\u4e00\u79cd\u662f\u4f7f\u7528 <code>tkinter</code> \u539f\u751f\u7684\u65b9\u5f0f\u3002\u5f88\u663e\u7136\uff0c\u8fd9\u91cc\u63a8\u8350\u4f7f\u7528 <code>maliang</code> \u5c01\u88c5\u597d\u7684\u52a8\u753b\u7c7b\u3002</p>","tags":["\u52a8\u753b","\u539f\u751f\u52a8\u753b","\u63a7\u5236\u51fd\u6570"]},{"location":"tutorials/chapter_04/1/#111-maliang-\u65b9\u5f0f","title":"1.1.1 <code>maliang</code> \u65b9\u5f0f","text":"<p>\u4f7f\u7528 <code>maliang</code> \u5c01\u88c5\u7684\u597d\u7684\u52a8\u753b\u7c7b\u65e2\u53ef\u4ee5\u6781\u5927\u5730\u7b80\u5316\u5b9e\u73b0\u52a8\u753b\u7684\u64cd\u4f5c\uff0c\u8fd8\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e2a\u8f83\u597d\u7684\u52a8\u753b\u6548\u679c\u3002\u9996\u5148\uff0c<code>maliang</code> \u6709\u4e00\u4e2a\u52a8\u753b\u57fa\u7c7b\uff0c\u8fd9\u4e2a\u52a8\u753b\u57fa\u7c7b\u7684\u529f\u80fd\u6bd4\u8f83\u5f3a\u5927\uff0c\u53ef\u4ee5\u901a\u8fc7\u7ee7\u627f\u5b83\u6765\u5b9e\u73b0\u5404\u79cd\u5404\u6837\u7684\u52a8\u753b\u5b50\u7c7b\u3002</p> <p>\u6b64\u5916\uff0c<code>maliang</code> \u8fd8\u5b9e\u73b0\u4e86\u5bf9\u52a8\u753b\u8fc7\u7a0b\u7684\u7ec6\u5fae\u63a7\u5236\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u3002\u8bf4\u7b80\u5355\u70b9\uff0c\u5c31\u662f\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u63a7\u5236\u51fd\u6570\u6765\u63a7\u5236\u52a8\u753b\u8fd0\u52a8\u7684\u8fc7\u7a0b\u3002\u6bd4\u5982\u8bf4\uff0c\u4e00\u4e2a\u5c0f\u7403\u4ece\u5de6\u79fb\u52a8\u5230\u53f3\u8fd9\u4e00\u52a8\u753b\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u63a7\u5236\u51fd\u6570\u6765\u5b9e\u73b0\u5c0f\u7403\u5e73\u6ed1\u79fb\u52a8\u8fd9\u4e00\u6548\u679c\uff0c\u53c8\u6216\u8005\u662f\u56de\u5f39\u7684\u6548\u679c\uff0c\u800c\u4e0d\u662f\u7b80\u5355\u7684\u5e73\u79fb\u3002</p> <p>\u9664\u4e86\u4e0a\u8ff0\u8bf4\u7684\u5e73\u6ed1\u79fb\u52a8\uff0c\u8fd8\u6709\u5176\u5b83\u5f88\u591a\u7684\u65b9\u5f0f\uff0c\u53ea\u8981\u4f60\u8bbe\u7f6e\u4e86\u5408\u9002\u7684\u63a7\u5236\u51fd\u6570\uff0c\u52a8\u753b\u5c31\u80fd\u6309\u7167\u63a7\u5236\u51fd\u6570\u90a3\u6837\u53bb\u8fd0\u52a8\uff01</p>","tags":["\u52a8\u753b","\u539f\u751f\u52a8\u753b","\u63a7\u5236\u51fd\u6570"]},{"location":"tutorials/chapter_04/1/#112-tkinter-\u539f\u751f\u65b9\u5f0f","title":"1.1.2 <code>tkinter</code> \u539f\u751f\u65b9\u5f0f","text":"<p>\u5f53\u7136\uff0c\u8bf4\u5230\u5e95 <code>maliang</code> \u5c01\u88c5\u7684\u52a8\u753b\u7c7b\u4e5f\u662f\u57fa\u4e8e <code>tkinter</code> \u539f\u751f\u52a8\u753b\u65b9\u5f0f\u5b9e\u73b0\u7684\uff0c\u4f46\u8981\u76f4\u63a5\u4f7f\u7528 <code>tkinter</code> \u539f\u751f\u7684\u65b9\u5f0f\u6765\u505a\u51fa\u4e00\u4e9b\u52a8\u753b\u6709\u4e00\u5b9a\u96be\u5ea6\uff0c\u4e14\u4e0d\u597d\u64cd\u63a7\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff0c\u8be5\u793a\u4f8b\u53ef\u4ee5\u5c06\u753b\u5e03\u4e0a\u7684\u4e00\u4e2a\u5c0f\u7403\u5411\u53f3\u5e73\u79fb\uff1a</p> <pre><code>import maliang\n\nroot = maliang.Tk()\ncv = maliang.Canvas()\ncv.place(width=1280, height=720)\n\nball = cv.create_oval(100, 100, 200, 200, fill=\"orange\", outline=\"\")\n\n\ndef animation(t: int = 0) -&gt; None:\n    if t &lt; 100:\n        cv.move(ball, 10, 0)\n        cv.after(10, animation, t+1)\n\n\nroot.after(1000, animation)\nroot.mainloop()\n</code></pre> <p>\u6548\u679c\u5982\u4e0b\uff1a(1)</p> <ol> <li>\u6ce8\uff1agif \u56fe\u9650\u5236\u4e86\u5e27\u7387\u4e3a 30 \uff0c\u5b9e\u9645\u6548\u679c\u4f1a\u66f4\u6d41\u7545\u4e00\u4e9b\uff0c\u540e\u9762\u7684\u540c\u7406\u3002</li> </ol> \u56fe1 <code>tkinter</code> \u539f\u751f\u52a8\u753b <p>\u867d\u7136\u4f7f\u7528 <code>tkinter</code> \u539f\u751f\u7684\u65b9\u5f0f\u80fd\u5b9e\u73b0\u4e00\u5b9a\u7684\u52a8\u753b\u6548\u679c\uff0c\u4f46\u8981\u518d\u60f3\u6df1\u5165\u5b9e\u73b0\u67d0\u4e9b\u529f\u80fd\u5c31\u6bd4\u8f83\u590d\u6742\u4e86\u3002\u7531\u4e8e <code>tkinter</code> \u5b9e\u73b0\u52a8\u753b\u7684\u65b9\u5f0f\u5e76\u4e0d\u5c5e\u4e8e\u672c\u6559\u7a0b\u7684\u8303\u7574\uff0c\u8fd9\u91cc\u5c31\u4e0d\u6df1\u5165\u8bb2\u89e3\u4e86\u3002</p>","tags":["\u52a8\u753b","\u539f\u751f\u52a8\u753b","\u63a7\u5236\u51fd\u6570"]},{"location":"tutorials/chapter_04/1/#12-\u63a7\u5236\u51fd\u6570","title":"1.2 \u63a7\u5236\u51fd\u6570","text":"<p>\u4ece\u524d\u9762\u8bb2\u8ff0\u7684\u5185\u5bb9\u6765\u770b\uff0c\u60f3\u5fc5\u4f60\u5df2\u7ecf\u5927\u81f4\u4e86\u89e3\u4ec0\u4e48\u662f\u63a7\u5236\u51fd\u6570\u4e86\u3002\u672c\u5c0f\u8282\u5e76\u4e0d\u4f1a\u5bf9\u63a7\u5236\u51fd\u6570\u505a\u4e00\u4e2a\u8be6\u7ec6\u7684\u8bf4\u660e\uff0c\u8fd9\u90e8\u5206\u4f1a\u51fa\u73b0\u5728\u540e\u7eed\u7ae0\u8282\u4e2d\u3002\u4f46\u6b64\u5904\u4ecd\u6307\u51fa <code>maliang</code> \u5185\u7f6e\u7684 5 \u4e2a\u63a7\u5236\u51fd\u6570\uff1a</p> <ul> <li><code>linear</code>: \u5e73\u79fb\u8fd0\u52a8\uff0c\u52a8\u753b\u7c7b\u63a7\u5236\u51fd\u6570\u7684\u9ed8\u8ba4\u503c\u90fd\u662f\u5b83</li> <li><code>smooth</code>: \u5e73\u6ed1\u8fd0\u52a8</li> <li><code>rebound</code>: \u56de\u5f39\u8fd0\u52a8</li> <li><code>ease_in</code>: \u7f13\u5165\u8fd0\u52a8</li> <li><code>ease_out</code>: \u7f13\u51fa\u8fd0\u52a8</li> </ul> <p>\u4e0b\u9762\u662f\u5b83\u4eec\u7684\u6548\u679c\uff0c\u7ea2\u7eff\u84dd\u5206\u522b\u5bf9\u5e94\u4e0a\u8ff0\u7684\u524d\u4e09\u79cd\u63a7\u5236\u51fd\u6570\uff1a</p> \u56fe2 <code>maliang</code> \u52a8\u753b <p>\u4e0b\u9762\u662f\u4e0a\u8ff0\u6548\u679c\u7684\u5b9e\u73b0\u4ee3\u7801\uff1a</p> <pre><code>import maliang\nimport maliang.animation as animation\n\nroot = maliang.Tk()\ncv = maliang.Canvas()\ncv.place(width=1280, height=720)\n\nball_1 = cv.create_oval(100, 100, 200, 200, fill=\"red\", outline=\"\")\nball_2 = cv.create_oval(100, 100+200, 200, 200+200, fill=\"green\", outline=\"\")\nball_3 = cv.create_oval(100, 100+400, 200, 200+400, fill=\"royalblue\", outline=\"\")\n\nanimation.MoveItem(cv, ball_1, (840, 0), 1000, fps=60, controller=animation.linear).start(delay=1000)\nanimation.MoveItem(cv, ball_2, (840, 0), 1000, fps=60, controller=animation.smooth).start(delay=1000)\nanimation.MoveItem(cv, ball_3, (840, 0), 1000, fps=60, controller=animation.rebound).start(delay=1000)\n\nroot.mainloop()\n</code></pre> <p>\u6b64\u5916\uff0c\u8fd8\u53ef\u4ee5\u81ea\u5b9a\u4e49\u63a7\u5236\u51fd\u6570\uff0c\u8fd9\u90e8\u5206\u4f1a\u5728\u540e\u7eed\u5185\u5bb9\u4e2d\u8be6\u7ec6\u8bb2\u89e3\u3002</p>","tags":["\u52a8\u753b","\u539f\u751f\u52a8\u753b","\u63a7\u5236\u51fd\u6570"]},{"location":"tutorials/chapter_04/1/#\u4e8c\u52a8\u753b\u7c7b","title":"\u4e8c\u3001\u52a8\u753b\u7c7b","text":"<p>\u8fd9\u91cc\u8bf4\u7684\u52a8\u753b\u7c7b\u662f\u52a8\u753b\u57fa\u7c7b\u7684\u5404\u4e2a\u5b50\u7c7b\uff0c\u5173\u4e8e\u52a8\u753b\u57fa\u7c7b\u7684\u8bb2\u89e3\u5728\u540e\u7eed\u7ae0\u8282\u4e2d\u3002</p> <p>\u6bcf\u4e2a\u52a8\u753b\u5b50\u7c7b\u90fd\u662f\u5bf9\u4e8e\u67d0\u4e00\u7279\u5b9a\u52a8\u753b\u7684\u5177\u4f53\u5b9e\u73b0\uff0c\u4f7f\u7528\u65f6\u5e94\u8be5\u6839\u636e\u9700\u6c42\u9009\u53d6\uff0c\u82e5\u6ca1\u6709\u6ee1\u8db3\u9700\u8981\u7684\u52a8\u753b\u5b50\u7c7b\uff0c\u4e5f\u53ef\u4ee5\u57fa\u4e8e\u52a8\u753b\u57fa\u7c7b\u7ee7\u627f\u540e\u5b9e\u73b0\u5c5e\u4e8e\u81ea\u5df1\u7684\u52a8\u753b\u5b50\u7c7b\uff0c\u5373\u81ea\u5b9a\u4e49\u52a8\u753b\u7c7b\u3002\u5173\u4e8e\u81ea\u5b9a\u4e49\u52a8\u753b\u7c7b\u7684\u5185\u5bb9\u5c06\u5728\u540e\u7eed\u7ae0\u8282\u4e2d\u8be6\u8ff0\u3002</p>","tags":["\u52a8\u753b","\u539f\u751f\u52a8\u753b","\u63a7\u5236\u51fd\u6570"]},{"location":"tutorials/chapter_04/1/#21-movetkwidget","title":"2.1 <code>MoveTkWidget</code>","text":"<p><code>MoveTkWidget</code> \u7528\u6765\u79fb\u52a8 <code>tkinter</code> \u4e2d\u7684\u539f\u751f\u63a7\u4ef6\uff08\u5982 <code>tkinter</code> \u7684 <code>Label</code>\uff09\u53ca\u5176\u7ee7\u627f\u7684\u5b50\u7c7b\uff08\u5982 <code>maliang</code> \u7684 <code>Canvas</code>\uff09\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff0c\u5229\u7528\u8be5\u7c7b\u79fb\u52a8 <code>tkinter</code> \u7684 <code>Label</code> \u63a7\u4ef6\uff1a</p> <pre><code>import tkinter\n\nimport maliang\nimport maliang.animation as animation\n\nroot = maliang.Tk()\n\nlabel = tkinter.Label(root, text=\"TkLabel\")\nlabel.place(x=100, y=100)\n\nanimation.MoveTkWidget(label, (1000, 0), 1000, fps=60).start(delay=1000)\n\nroot.mainloop()\n</code></pre> <p>\u6548\u679c\u5982\u4e0b\uff1a</p> \u56fe3 \u79fb\u52a8 <code>tkinter</code> \u539f\u751f\u63a7\u4ef6","tags":["\u52a8\u753b","\u539f\u751f\u52a8\u753b","\u63a7\u5236\u51fd\u6570"]},{"location":"tutorials/chapter_04/1/#22-movewidget","title":"2.2 <code>MoveWidget</code>","text":"<p><code>MoveWidget</code> \u7528\u6765\u79fb\u52a8 <code>maliang</code> \u4e2d\u7684\u63a7\u4ef6\u3002</p> <p>\u4f7f\u7528\u65b9\u5f0f\u548c\u4e0a\u9762\u7684\u7c7b\u4f3c\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff1a</p> <pre><code>import maliang\nimport maliang.animation as animation\n\nroot = maliang.Tk()\ncv = maliang.Canvas()\ncv.place(width=1280, height=720)\n\nlabel = maliang.Label(cv, (100, 100), text=\"Label\")\n\nanimation.MoveWidget(label, (1000, 0), 1000, fps=60).start(delay=1000)\n\nroot.mainloop()\n</code></pre> <p>\u6548\u679c\u5982\u4e0b\uff1a</p> \u56fe4 \u79fb\u52a8\u63a7\u4ef6","tags":["\u52a8\u753b","\u539f\u751f\u52a8\u753b","\u63a7\u5236\u51fd\u6570"]},{"location":"tutorials/chapter_04/1/#23-moveelement","title":"2.3 <code>MoveElement</code>","text":"<p><code>MoveElement</code> \u7528\u6765\u79fb\u52a8 <code>maliang</code> \u4e2d\u7684\u5143\u7d20\u3002\u8fd9\u91cc\u8bf4\u7684\u5143\u7d20\u4e0e\u4e0a\u9762\u8bf4\u7684\u63a7\u4ef6\u6709\u5f88\u5927\u7684\u533a\u522b\uff0c\u524d\u9762\u7ae0\u8282\u5e76\u6ca1\u6709\u8be6\u7ec6\u5730\u6307\u51fa\u8fd9\u4e2a\u95ee\u9898\uff0c\u8fd9\u4e2a\u95ee\u9898\u5c06\u5728\u540e\u7eed\u5173\u4e8e\u81ea\u5b9a\u4e49\u63a7\u4ef6\u548c\u5143\u7d20\u7684\u90e8\u5206\u8be6\u7ec6\u8bf4\u660e\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u793a\u4f8b\uff1a</p> <pre><code>import maliang\nimport maliang.animation as animation\n\nroot = maliang.Tk()\ncv = maliang.Canvas(root)\ncv.place(width=1280, height=720)\n\nlabel = maliang.Label(cv, (100, 100), text=\"Label\")\n\nanimation.MoveElement(label.elements[0], (1000, 0), 1000, fps=60).start(delay=1000)\n\nroot.mainloop()\n</code></pre> <p>\u6548\u679c\u5982\u4e0b\uff1a</p> \u56fe5 \u79fb\u52a8\u5143\u7d20 <p>\u53ef\u4ee5\u770b\u89c1\uff0c\u63a7\u4ef6\u7684\u5f62\u72b6\u548c\u5176\u5b83\u90e8\u5206\u79bb\u4e86\uff0c\u4f46\u8fd9\u91cc\u53ea\u662f\u4e3a\u4e86\u6f14\u793a\u8fd9\u4e2a\u4f5c\u7528\u548c\u6548\u679c\uff0c\u5b9e\u9645\u4e2d\u4e00\u822c\u5e76\u4e0d\u4f1a\u8fd9\u6837\u505a\u3002\uff08\u6ca1\u4e8b\u5e72\u561b\u628a\u5f62\u72b6\u5206\u79bb\uff1f\uff1f\uff09</p>","tags":["\u52a8\u753b","\u539f\u751f\u52a8\u753b","\u63a7\u5236\u51fd\u6570"]},{"location":"tutorials/chapter_04/1/#24-moveitem","title":"2.4 <code>MoveItem</code>","text":"<p><code>MoveItem</code> \u7528\u6765\u79fb\u52a8\u753b\u5e03\u4e2d\u7684\u57fa\u672c\u9879\u3002</p> <p>\u4e0e\u5176\u5b83\u4e0d\u540c\u7684\u662f\uff0c\u64cd\u4f5c item \u5fc5\u987b\u6307\u660e\u5176\u6240\u5c5e\u7684\u753b\u5e03\uff0c\u4e0d\u7136\u65e0\u6cd5\u5bf9 item \u8fdb\u884c\u64cd\u4f5c(1)\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff1a</p> <ol> <li>\u56e0\u4e3a item \u5b9e\u9645\u53ea\u662f\u4e00\u4e2a <code>int</code> \u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u81ea\u8eab\u65e0\u6cd5\u5b58\u50a8\u5176\u6240\u5c5e\u753b\u5e03\u7684\u76f8\u5173\u4fe1\u606f</li> </ol> <pre><code>import maliang\nimport maliang.animation as animation\n\nroot = maliang.Tk()\ncv = maliang.Canvas()\ncv.place(width=1280, height=720)\n\nitem = cv.create_rectangle(100, 100, 200, 200, fill=\"gray\", outline=\"\")\n\nanimation.MoveItem(cv, item, (1000, 0), 1000, fps=60).start(delay=1000)\n\nroot.mainloop()\n</code></pre> <p>\u6548\u679c\u5982\u4e0b\uff1a</p> \u56fe6 \u79fb\u52a8\u753b\u5e03\u57fa\u672c\u9879","tags":["\u52a8\u753b","\u539f\u751f\u52a8\u753b","\u63a7\u5236\u51fd\u6570"]},{"location":"tutorials/chapter_04/1/#25-gradienttkwidget","title":"2.5 <code>GradientTkWidget</code>","text":"<p><code>GradientTkWidget</code> \u7528\u6765\u4f7f <code>tkinter</code> \u4e2d\u7684\u539f\u751f\u63a7\u4ef6\u7684\u76f8\u5173\u989c\u8272\u6e10\u53d8\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff1a</p> <pre><code>import tkinter\n\nimport maliang\nimport maliang.animation as animation\n\nroot = maliang.Tk()\n\nlabel = tkinter.Label(root, text=\"TkLabel\")\nlabel.place(x=200, y=200)\n\nanimation.GradientTkWidget(label, \"bg\",(\"red\", \"green\"),  2000, repeat=-1).start()\n\nroot.mainloop()\n</code></pre> <p>\u6548\u679c\u5982\u4e0b\uff1a</p> \u56fe7 <code>tkinter</code> \u63a7\u4ef6\u7684\u6e10\u53d8\u989c\u8272 <p>\u8fd9\u4e2a\u793a\u4f8b\u4f7f\u7528\u4e86 <code>repeat</code> \u53c2\u6570\u6765\u8ba9\u8fd9\u4e2a\u52a8\u753b\u5faa\u73af\u8fdb\u884c\uff0c<code>repeat</code> \u662f\u5faa\u73af\u7684\u6b21\u6570\uff0c\u5f53\u6b21\u6570\u5c0f\u4e8e <code>0</code> \u65f6\u4f1a\u65e0\u9650\u5faa\u73af\uff0c\u76f4\u5230\u52a8\u753b\u7c7b\u6216\u8005\u7a0b\u5e8f\u88ab\u7ec8\u6b62\u3002</p>","tags":["\u52a8\u753b","\u539f\u751f\u52a8\u753b","\u63a7\u5236\u51fd\u6570"]},{"location":"tutorials/chapter_04/1/#26-gradientitem","title":"2.6 <code>GradientItem</code>","text":"<p><code>GradientItem</code> \u7528\u6765\u4f7f\u753b\u5e03\u4e2d\u5143\u7d20\u7684\u76f8\u5173\u989c\u8272\u6e10\u53d8\u3002</p> <p>\u524d\u9762\u7684\u6e10\u53d8\u52a8\u753b\u4f7f\u7528\u4e86\u5faa\u73af\uff0c\u4f46\u6bcf\u6b21\u5faa\u73af\u4e4b\u95f4\u6ca1\u6709\u8fc7\u6e21\uff0c\u770b\u8d77\u6765\u5341\u5206\u4e0d\u81ea\u7136\u3002\u6211\u4eec\u53ef\u4ee5\u7ed9\u52a8\u753b\u7c7b\u8bbe\u5b9a\u4e00\u4e2a\u63a7\u5236\u51fd\u6570\u6765\u8ba9\u6e10\u53d8\u989c\u8272\u7684\u8d77\u59cb\u503c\u548c\u7ec8\u6b62\u503c\u76f8\u540c\uff0c\u4ee5\u4fdd\u8bc1\u8fc7\u6e21\u81ea\u7136\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff1a</p> <pre><code>import math\n\nimport maliang\nimport maliang.animation as animation\n\nroot = maliang.Tk()\ncv = maliang.Canvas()\ncv.place(width=1280, height=720)\n\nitem = cv.create_rectangle(100, 100, 200, 200, outline=\"\")\n\nanimation.GradientItem(cv, item, \"fill\", (\"yellow\", \"purple\"), 2000, repeat=-1, controller=lambda x: math.sin(x*math.pi)).start()\n\nroot.mainloop()\n</code></pre> <p>\u6548\u679c\u4e0e\u547c\u5438\u706f\u7c7b\u4f3c\uff1a</p> \u56fe8 \u753b\u5e03\u5143\u7d20\u7684\u6e10\u53d8\u989c\u8272","tags":["\u52a8\u753b","\u539f\u751f\u52a8\u753b","\u63a7\u5236\u51fd\u6570"]},{"location":"tutorials/chapter_04/1/#27-scalefontsize","title":"2.7 <code>ScaleFontSize</code>","text":"<p><code>ScaleFontSize</code> \u7528\u6765\u7f29\u653e\u7ec4\u4ef6 <code>Text</code> \u7684\u5b57\u4f53\u5927\u5c0f\uff0c\u6ce8\u610f\u4e0d\u662f\u63a7\u4ef6 <code>Text</code> \u7684\u5b57\u4f53\u5927\u5c0f\u3002</p> <p>\u4e3a\u4e86\u8ba9\u5b57\u4f53\u7684\u7f29\u653e\u770b\u7740\u66f4\u6709\u5f20\u529b\uff0c\u6211\u4eec\u53ef\u4ee5\u8bd5\u7740\u4f7f\u7528\u524d\u9762\u63d0\u5230\u7684 <code>rebound</code> \u63a7\u5236\u51fd\u6570\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff1a</p> <pre><code>import maliang\nimport maliang.animation as animation\n\nroot = maliang.Tk()\ncv = maliang.Canvas()\ncv.place(width=1280, height=720)\n\ntext = maliang.Text(cv, (100, 100), text=\"Text\", anchor=\"center\")\n\nanimation.ScaleFontSize(text.texts[0], (20, 48), 500, controller=animation.rebound).start(delay=1000)\n\nroot.mainloop()\n</code></pre> <p>\u8fd0\u884c\u4e0a\u8ff0\u4ee3\u7801\u540e\uff0c\u5b57\u4f53\u653e\u5927\u540e\u4f1a\u518d\u56de\u5f39\u7f29\u5c0f\uff0c\u6548\u679c\u5982\u4e0b\uff1a</p> \u56fe9 <code>tkinter</code> \u63a7\u4ef6\u7684\u6e10\u53d8\u989c\u8272 <p>\u7279\u522b\u6ce8\u610f\uff1a\u614e\u7528 <code>ScaleFontSize</code> \u7c7b</p> <p>\u8be5\u7c7b\u6ca1\u6709\u5bf9\u7a97\u53e3\u548c\u753b\u5e03\u7684\u7f29\u653e\u505a\u9002\u914d\uff0c\u5728\u7a97\u53e3\u6216\u8005\u753b\u5e03\u7f29\u653e\u4e4b\u540e\uff0c\u8be5\u7c7b\u53ef\u80fd\u4f1a\u4ea7\u751f\u610f\u60f3\u4e0d\u5230\u7684\u6548\u679c\uff0c\u8be5\u6548\u679c\u4e00\u822c\u4e0d\u7b26\u5408\u9884\u671f\u8981\u6c42\u3002</p>","tags":["\u52a8\u753b","\u539f\u751f\u52a8\u753b","\u63a7\u5236\u51fd\u6570"]},{"location":"tutorials/chapter_04/2/","title":"\u00a74.2 \u63a7\u5236\u51fd\u6570","text":"<p> \u5b57\u6570 1668 \u4e2a \u00a0 \u4ee3\u7801 44 \u884c \u00a0 \u56fe\u7247 8 \u5f20 \u00a0 \u9605\u8bfb\u65f6\u95f4 6 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p>","tags":["\u52a8\u753b","\u63a7\u5236\u51fd\u6570","\u81ea\u5b9a\u4e49"]},{"location":"tutorials/chapter_04/2/#\u4e00\u63a7\u5236\u51fd\u6570","title":"\u4e00\u3001\u63a7\u5236\u51fd\u6570","text":"","tags":["\u52a8\u753b","\u63a7\u5236\u51fd\u6570","\u81ea\u5b9a\u4e49"]},{"location":"tutorials/chapter_04/2/#11-\u4ec0\u4e48\u662f\u63a7\u5236\u51fd\u6570","title":"1.1 \u4ec0\u4e48\u662f\u63a7\u5236\u51fd\u6570","text":"<p>\u63a7\u5236\u51fd\u6570\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2a\u666e\u901a\u7684\u6570\u5b66\u51fd\u6570\uff0c\u4e00\u4e2a <code>float</code> \u7c7b\u578b\u7684\u8f93\u5165\uff0c\u4e00\u4e2a <code>float</code> \u7c7b\u578b\u7684\u8f93\u51fa\uff0c\u8f93\u5165\u4ee3\u8868\u7684\u662f\u5f53\u524d\u52a8\u753b\u5728\u65f6\u95f4\u5c42\u9762\u4e0a\u7684\u8fdb\u5ea6\uff0c\u8303\u56f4\u662f <code>0</code> \u5230 <code>1</code>\uff0c\u8f93\u51fa\u4ee3\u8868\u7684\u662f\u5f53\u524d\u52a8\u753b\u5728\u56fe\u50cf\u5c42\u9762\u4e0a\u7684\u8fdb\u5ea6\uff0c\u8303\u56f4\u4e0d\u9650\uff0c\u4f9d\u636e\u52a8\u753b\u60c5\u51b5\u800c\u5b9a\u3002</p> <p>\u8868\u793a\u6210\u6570\u5b66\u51fd\u6570\u4e3a\u5982\u4e0b\uff1a</p> \\[ y=f(x), x\\in[0, 1] \\] <p>\u5f53\u52a8\u753b\u662f\u5bf9\u8c61\u5728\u753b\u5e03\u4e0a\u7684\u79fb\u52a8\u65f6\uff0c\u8f93\u51fa\u503c\u7684\u8303\u56f4\u4e00\u822c\u6ca1\u6709\u9650\u5b9a\uff0c\u53ef\u4ee5\u8d1f\u6570\uff0c\u8868\u793a\u53cd\u5411\u79fb\u52a8\uff0c\u4e5f\u53ef\u4ee5\u5927\u4e8e <code>1</code>\uff0c\u8868\u793a\u8d85\u51fa\u9884\u5b9a\u7684\u79fb\u52a8\u8ddd\u79bb\u3002\u4f46\u5bf9\u4e8e\u989c\u8272\u6e10\u53d8\u8fd9\u79cd\u7c7b\u578b\u7684\u52a8\u753b\uff0c\u8f93\u51fa\u503c\u5c31\u6709\u9650\u5b9a\u4e86\u3002\u5982\u679c\u8f93\u51fa\u503c\u4e3a\u8d1f\u6570\u53ef\u80fd\u4f1a\u5f97\u5230\u610f\u60f3\u4e0d\u5230\u7684\u7ed3\u679c\uff08\u5927\u6982\u7387\u62a5\u9519\uff09\uff0c\u5982\u679c\u8f93\u51fa\u503c\u5927\u4e8e <code>1</code>\uff0c\u5219\u4e5f\u6781\u6709\u53ef\u80fd\u5f97\u5230\u9519\u8bef\u7684\u7ed3\u679c\uff08\u9519\u8bef\u7684 RGB \u7801\uff09\u3002</p> <p>\u56e0\u6b64\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u7ea6\u5b9a\u8f93\u51fa\u503c\u7684\u8303\u56f4\u5728 <code>0</code> \u5230 <code>1</code> \u4e4b\u95f4\uff0c\u5982\u679c\u786e\u9700\u8d85\u51fa\u6b64\u8303\u56f4\uff0c\u5e94\u8003\u8651\u662f\u5426\u4fee\u6539\u52a8\u753b\u7684\u53c2\u6570\u3002</p>","tags":["\u52a8\u753b","\u63a7\u5236\u51fd\u6570","\u81ea\u5b9a\u4e49"]},{"location":"tutorials/chapter_04/2/#12-\u63a7\u5236\u51fd\u6570\u5bf9\u52a8\u753b\u7c7b\u7684\u4f5c\u7528","title":"1.2 \u63a7\u5236\u51fd\u6570\u5bf9\u52a8\u753b\u7c7b\u7684\u4f5c\u7528","text":"<p>\u52a8\u753b\u7c7b\u5b9e\u9645\u5c31\u662f\u6309\u7167\u7ed9\u51fa\u7684\u5e27\u7387\u4ee5\u53ca\u52a8\u753b\u65f6\u95f4\u6765\u8c03\u7528\u5173\u8054\u51fd\u6570\u7684\uff0c\u800c\u6bcf\u6b21\u8c03\u7528\u4f20\u7ed9\u5173\u8054\u51fd\u6570\u7684\u503c\u53c8\u662f\u7ecf\u8fc7\u63a7\u5236\u51fd\u6570\u8ba1\u7b97\u5f97\u51fa\u7684\uff0c\u800c\u63a7\u5236\u51fd\u6570\u7684\u7ed3\u679c\u53c8\u662f\u901a\u8fc7\u4f20\u5165\u5f53\u524d\u52a8\u753b\u65f6\u95f4\u5360\u6bd4\u5f97\u5230\u7684\uff0c\u8fd9\u4e2a\u6d41\u7a0b\u56fe\u753b\u51fa\u6765\u5927\u81f4\u5982\u4e0b\uff1a</p> <pre><code>flowchart LR\n\n    1(\u603b\u52a8\u753b\u91cf)\n    2(\u5173\u8054\u51fd\u6570)\n    3(\u5e27\u7387)\n    4(\u52a8\u753b\u65f6\u95f4)\n    5(\u52a8\u753b)\n    6(\u6bcf\u5e27\u65f6\u95f4\u5360\u6bd4 x)\n    7(\u6bcf\u5e27\u52a8\u753b\u5360\u6bd4 y)\n    \n    subgraph \u52a8\u753b\u7c7b\u5355\u5e27\u8fd0\u7b97\u8fc7\u7a0b\n        6 --\u63a7\u5236\u51fd\u6570--&gt; 7\n    end\n\n    3 --&gt; 6\n    4 --&gt; 6\n    1 --&gt; 2\n    2 --&gt; 5\n    7 --&gt; 2</code></pre> <p>\u5f53\u7136\uff0c\u4e0a\u8ff0\u53ea\u662f\u7b80\u5316\u7684\u6d41\u7a0b\uff0c\u5b9e\u9645\u53c2\u6570\u548c\u5904\u7406\u8fc7\u7a0b\u6bd4\u4e0a\u9762\u7684\u6d41\u7a0b\u56fe\u8981\u66f4\u590d\u6742\u3002</p>","tags":["\u52a8\u753b","\u63a7\u5236\u51fd\u6570","\u81ea\u5b9a\u4e49"]},{"location":"tutorials/chapter_04/2/#13-\u5185\u7f6e\u7684\u63a7\u5236\u51fd\u6570","title":"1.3 \u5185\u7f6e\u7684\u63a7\u5236\u51fd\u6570","text":"<p>\u524d\u9762\u7684 \u00a74.1 \u57fa\u7840\u52a8\u753b \u5df2\u7ecf\u63d0\u8fc7\u5185\u7f6e\u7684 3 \u4e2a\u63a7\u5236\u51fd\u6570\u4e86\uff0c\u8fd9\u91cc\u5c06\u5bf9\u5b83\u4eec\u505a\u8be6\u7ec6\u7684\u8bb2\u89e3\uff0c\u5e76\u7ed9\u51fa\u51fd\u6570\u56fe\u50cf\u3002</p> \u7ebf\u6027\u51fd\u6570\uff1a<code>linear</code>\u5e73\u6ed1\u51fd\u6570\uff1a<code>smooth</code>\u56de\u5f39\u51fd\u6570\uff1a<code>rebound</code> <p> \u56fe1 \u7ebf\u6027\u51fd\u6570 </p> <p> \u56fe2 \u5e73\u6ed1\u51fd\u6570 </p> <p> \u56fe3 \u56de\u5f39\u51fd\u6570 </p> <p>\u4ece\u4e4b\u524d\u7684\u5185\u5bb9\u6765\u770b\uff0c\u4e0d\u96be\u77e5\u9053\u56de\u5f39\u51fd\u6570\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u662f\u4f1a\u89e6\u53d1\u62a5\u9519\u7684\uff0c\u56e0\u4e3a\u5176\u540e\u534a\u90e8\u5206\u56fe\u50cf\u8d85\u51fa\u4e86 <code>1</code>\uff0c\u8fd9\u5c31\u5bfc\u81f4\u7c7b\u4f3c\u4e8e\u989c\u8272\u6e10\u53d8\u8fd9\u79cd\u52a8\u753b\u53ef\u80fd\u62a5\u9519\u3002</p> <p>\u5feb\u901f\u7406\u89e3\uff1a\u770b\u51fd\u6570\u7684\u659c\u7387</p> <p>\u4ece\u63a7\u5236\u51fd\u6570\u56fe\u50cf\u5176\u5b9e\u53ef\u4ee5\u53d1\u73b0\uff0c\u63a7\u5236\u51fd\u6570\u7684\u659c\u7387\u5c31\u662f\u52a8\u753b\u7684\u901f\u5ea6\uff0c\u8fd9\u4e00\u70b9\u975e\u5e38\u5173\u952e\u3002x \u503c\u5c31\u662f\u5b9e\u9645\u7684\u65f6\u95f4\u5360\u6bd4\uff0cy \u503c\u5c31\u662f\u5b9e\u9645\u7684\u8fd0\u52a8\u5360\u6bd4\uff0c\u65f6\u95f4\u53ea\u53ef\u80fd\u5728 0 ~ 1 \u4e4b\u95f4\uff0c\u800c\u52a8\u753b\u53ef\u4ee5\u8d85\u51fa\u9650\u5b9a\u7684\u8303\u56f4\uff08\u5c3d\u7ba1\u4e0d\u63a8\u8350\u8fd9\u6837\u505a\uff09\u3002</p> <p>\u7efc\u4e0a\uff0c\u63a7\u5236\u51fd\u6570\u662f\u901a\u8fc7\u63a7\u5236\u8fd0\u52a8\u8f68\u8ff9\u6765\u63a7\u5236\u6574\u4e2a\u8fd0\u52a8\u7684\u3002</p> <p>\u4e0a\u8ff0\u63a7\u5236\u51fd\u6570\u662f\u901a\u8fc7\u63a7\u5236\u8fd0\u52a8\u8f68\u8ff9\u6765\u63a7\u5236\u8fd0\u52a8\u7684\uff0c\u90a3\u5982\u679c\u6211\u60f3\u8981\u7684\u8fd0\u52a8\u8f68\u8ff9\u6bd4\u8f83\u590d\u6742\uff0c\u4e0d\u597d\u5199\u51fa\u8fd9\u4e2a\u63a7\u5236\u51fd\u6570\uff0c\u4f46\u5176\u901f\u5ea6\u53d8\u5316\u66f2\u7ebf\uff0c\u4e5f\u5c31\u662f\u63a7\u5236\u51fd\u6570\u7684\u5bfc\u6570\u5f88\u5bb9\u6613\u5199\u51fa\u6765\u65f6\uff0c\u8be5\u600e\u4e48\u529e\u5462\uff1f\u5173\u4e8e\u8fd9\u4e00\u95ee\u9898\u5c06\u5728\u4e0b\u4e00\u7ae0\u8282\u8fdb\u884c\u8bf4\u660e\u3002</p>","tags":["\u52a8\u753b","\u63a7\u5236\u51fd\u6570","\u81ea\u5b9a\u4e49"]},{"location":"tutorials/chapter_04/2/#\u4e8c\u81ea\u5b9a\u4e49\u63a7\u5236\u51fd\u6570","title":"\u4e8c\u3001\u81ea\u5b9a\u4e49\u63a7\u5236\u51fd\u6570","text":"","tags":["\u52a8\u753b","\u63a7\u5236\u51fd\u6570","\u81ea\u5b9a\u4e49"]},{"location":"tutorials/chapter_04/2/#21-\u63a7\u5236\u51fd\u6570\u751f\u6210\u5668","title":"2.1 \u63a7\u5236\u51fd\u6570\u751f\u6210\u5668","text":"<p>\u5b9e\u9645\u4e0a\uff0c<code>maliang</code> \u7684\u52a8\u753b\u5b50\u5305\u8fd8\u5e26\u6709\u4e00\u4e2a\u63a7\u5236\u51fd\u6570\u751f\u6210\u5668\uff08<code>generate</code>\uff09\uff0c\u5b83\u662f\u4e00\u4e2a\u4fbf\u6377\u51fd\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5b83\u6765\u5feb\u901f\u5f97\u5230\u6211\u4eec\u9700\u8981\u7684\u63a7\u5236\u51fd\u6570\u3002\u63a7\u5236\u51fd\u6570\u751f\u6210\u5668\u672c\u8d28\u4e0a\u4e5f\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u6839\u636e\u7ed9\u5b9a\u7684\u53c2\u6570\u6765\u8fd4\u56de\u65b0\u7684\u51fd\u6570\u3002</p> <p>\u6bcf\u4e2a\u63a7\u5236\u51fd\u6570\u90fd\u9700\u8981\u660e\u786e\u51e0\u4e2a\u6570\u636e\uff1a</p> <ul> <li><code>base</code>: \u57fa\u672c\u51fd\u6570\uff0c\u6ee1\u8db3\u8f93\u5165\u503c\u4e3a\u4e00\u4e2a\u6d6e\u70b9\u6570\uff0c\u8fd4\u56de\u503c\u4e5f\u662f\u4e00\u4e2a\u6d6e\u70b9\u6570\u5373\u53ef\uff1b</li> <li><code>start</code>: \u4e0a\u8ff0\u57fa\u672c\u51fd\u6570\u622a\u53d6\u533a\u95f4\u7684\u8d77\u59cb\u503c\uff1b</li> <li><code>end</code>: \u4e0a\u8ff0\u57fa\u672c\u51fd\u6570\u622a\u53d6\u533a\u95f4\u7684\u7ec8\u6b62\u503c\uff1b</li> </ul> <p>\u540c\u65f6\uff0c\u5bf9\u4e8e\u63a7\u5236\u51fd\u6570\u751f\u6210\u5668\uff0c\u8fd8\u6709\u4e00\u70b9\u8981\u660e\u786e\uff0c\u5373\u53c2\u6570 <code>map_y</code> \u7684\u503c\uff0c\u5176\u9ed8\u8ba4\u4e3a <code>True</code>\u3002\u5f53 <code>map_y</code> \u4e3a <code>True</code> \u65f6\u4f1a\u81ea\u52a8\u5c06\u6574\u4e2a\u63a7\u5236\u51fd\u6570\u7684\u503c\u57df\u6620\u5c04\u5230 <code>[\u8d77\u59cb\u503c, 1]</code> \u4e0a\uff0c\u4ee5\u4fdd\u8bc1\u8fd0\u52a8\u7684\u6700\u7ec8\u7ed3\u679c\u548c\u8bbe\u5b9a\u7684\u9009\u9879\u4e00\u81f4\u3002\u6b64\u5904\u7684\u8d77\u59cb\u503c\u8868\u793a \\(f(start)\\)\u3002</p> <p>\u6e29\u99a8\u63d0\u793a\uff1a\u6709\u65f6\u5019\u4e0d\u9700\u8981 <code>map_y</code> \u4e3a <code>True</code></p> <p>\u5982\u679c\u4f60\u9700\u8981\u5f80\u8fd4\u8fd0\u52a8\u6548\u679c\u7684\u63a7\u5236\u51fd\u6570\uff0c\u90a3\u4e48\u8bf7\u5c06\u53c2\u6570 <code>map_y</code> \u8bbe\u4e3a <code>False</code>\u3002\u4e00\u65e6\u4f60\u6ca1\u6709\u8fd9\u6837\u505a\uff0c\u5047\u8bbe\u4f60\u7684\u6700\u7ec8\u503c\u4e3a 0\uff0c\u90a3\u4e48\u5c06\u5bfc\u81f4\u6620\u5c04\u65f6\u5176\u5b83\u503c\u88ab\u6620\u5c04\u5230 \\(+\\infty\\)\uff0c\u4f7f\u5f97\u52a8\u753b\u4e0d\u53ef\u89c1\u4e86\u3002</p> <p>\u8fd9\u91cc\u5c06\u5185\u7f6e\u63a7\u5236\u51fd\u6570 <code>rebound</code> \u4f5c\u4e3a\u793a\u4f8b\uff0c\u8bb2\u8bb2\u5b83\u662f\u600e\u4e48\u751f\u6210\u7684\u3002\u9996\u5148\uff0c\u4e0b\u9762\u662f\u5b83\u7684\u51fd\u6570\u5b9e\u73b0\uff1a</p> <pre><code>def rebound(t: float) -&gt; float:\n    \"\"\"Before the end, displacement will bounce off a bit.\n\n    * `t`: the percentage of time\n    \"\"\"\n    return generate(math.sin, 0, (math.pi+1) / 2)(t)\n</code></pre> <p>\u53ef\u4ee5\u770b\u89c1\uff0c\u5b83\u5b9e\u9645\u4e0a\u5c31\u662f\u53d6\u6b63\u5f26\u51fd\u6570 0 \u5230 \\(\\frac{\\pi+1}{2}\\) \u8303\u56f4\u5185\uff0c\u5e76\u7ea6\u675f\u6700\u7ec8\u503c\u4e3a 1 \u7684\u51fd\u6570\u3002\u5b83\u542c\u8d77\u6765\u6709\u70b9\u590d\u6742\uff0c\u5b9e\u9645\u6570\u5b66\u8868\u8fbe\u5f0f\u5982\u4e0b\uff1a</p> \\[ y=\\frac{\\sin\\frac{\\pi+1}{2}x}{\\sin\\frac{\\pi+1}{2}}, x\\in[0, 1] \\] <p>\u786e\u5b9e\u6bd4\u8f83\u590d\u6742\uff0c\u4f46\u7528\u63a7\u5236\u51fd\u6570\u751f\u6210\u5668\u5199\u51fa\u6765\u5374\u5341\u5206\u7b80\u6d01\u3002</p>","tags":["\u52a8\u753b","\u63a7\u5236\u51fd\u6570","\u81ea\u5b9a\u4e49"]},{"location":"tutorials/chapter_04/2/#22-\u5b8c\u5168\u81ea\u5b9a\u4e49","title":"2.2 \u5b8c\u5168\u81ea\u5b9a\u4e49","text":"<p>\u6240\u8c13\u5b8c\u5168\u81ea\u5b9a\u4e49\uff0c\u5b9e\u9645\u5c31\u662f\u4e0d\u501f\u52a9\u63a7\u5236\u51fd\u6570\u751f\u6210\u5668\uff0c\u76f4\u63a5\u5b9a\u4e49\u7684\u63a7\u5236\u51fd\u6570\uff0c\u4e00\u822c\u662f\u63a7\u5236\u51fd\u6570\u8db3\u591f\u7b80\u5355\uff0c\u6216\u8005\u662f\u6709\u7279\u6b8a\u9700\u6c42\u7684\u60c5\u51b5\u4e0b\u624d\u4f1a\u4f7f\u7528\u3002\u5178\u578b\u7684\u5982\u5185\u7f6e\u63a7\u5236\u51fd\u6570 <code>linear</code>\uff0c\u4e0b\u9762\u662f\u5b83\u7684\u51fd\u6570\u5b9e\u73b0\uff1a</p> <pre><code>def linear(t: float) -&gt; float:\n    \"\"\"Speed remains the same.\n\n    * `t`: the percentage of time\n    \"\"\"\n    return t\n</code></pre> <p>\u7531\u4e8e\u5b83\u975e\u5e38\u7b80\u5355\uff0c\u6240\u4ee5\u6ca1\u5fc5\u8981\u4f7f\u7528\u63a7\u5236\u51fd\u6570\u751f\u6210\u5668\u3002</p> <p>\u53c8\u6bd4\u5982\u5185\u7f6e\u63a7\u5236\u51fd\u6570 <code>smooth</code>\uff0c\u4e0b\u9762\u662f\u5b83\u7684\u51fd\u6570\u5b9e\u73b0\uff1a</p> <pre><code>def smooth(t: float) -&gt; float:\n    \"\"\"Speed is slow first, then fast and then slow. (slow -&gt; fast -&gt; slow)\n\n    * `t`: the percentage of time\n    \"\"\"\n    return (1 - math.cos(t*math.pi)) / 2\n</code></pre> <p>\u5b83\u770b\u8d77\u6765\u5e76\u4e0d\u662f\u90a3\u4e48\u7b80\u5355\uff0c\u4f46\u628a\u5b83\u8f6c\u5316\u6210\u63a7\u5236\u51fd\u6570\u751f\u6210\u5668\u7684\u5199\u6cd5\u662f\u8fd9\u6837\u7684\uff1a</p> <pre><code>def smooth(t: float) -&gt; float:\n    \"\"\"Speed is slow first, then fast and then slow. (slow -&gt; fast -&gt; slow)\n\n    * `t`: the percentage of time\n    \"\"\"\n    return generate(lambda x: 1 - math.cos(x), 0, math.pi)(t)\n</code></pre> <p>\u8fd9\u4e2a\u7528\u63a7\u5236\u51fd\u6570\u751f\u6210\u5668\u53cd\u800c\u53c8\u663e\u5f97\u590d\u6742\u4e86\uff0c\u6240\u4ee5\u4e5f\u662f\u76f4\u63a5\u91c7\u7528\u5b8c\u5168\u81ea\u5b9a\u4e49\u7684\u3002\u5b8c\u5168\u81ea\u5b9a\u4e49\u8fd8\u6709\u52a9\u4e8e\u5b9e\u73b0\u5206\u6bb5\u51fd\u6570\u8fd9\u6837\u7684\u63a7\u5236\u51fd\u6570\u3002\u603b\u4e4b\uff0c\u501f\u52a9\u63a7\u5236\u51fd\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9e\u73b0\u8bb8\u591a\u6709\u8da3\u7684\u52a8\u753b\u3002</p>","tags":["\u52a8\u753b","\u63a7\u5236\u51fd\u6570","\u81ea\u5b9a\u4e49"]},{"location":"tutorials/chapter_04/2/#\u4e09\u4f7f\u7528\u591a\u4e2a\u63a7\u5236\u51fd\u6570","title":"\u4e09\u3001\u4f7f\u7528\u591a\u4e2a\u63a7\u5236\u51fd\u6570","text":"<p>\u6216\u8bb8\u4f60\u4f1a\u6709\u540c\u65f6\u63a7\u5236\u4e00\u4e2a\u5bf9\u8c61\u5728\u6c34\u5e73\u65b9\u5411\u548c\u7ad6\u76f4\u65b9\u5411\u8fd0\u52a8\u7684\u9700\u6c42\uff0c\u4f46\u5f88\u9057\u61be\uff0c<code>maliang</code> \u7684\u52a8\u753b\u7c7b\u5e76\u4e0d\u652f\u6301\u4f7f\u7528\u591a\u4e2a\u63a7\u5236\u51fd\u6570\u3002\u4f46\u662f\u5462\uff0c\u8fd9\u5e76\u4e0d\u9650\u5236\u6211\u4eec\u4f7f\u7528\u591a\u4e2a\u52a8\u753b\u7c7b\u6765\u5b9e\u73b0\u7c7b\u4f3c\u7684\u9700\u6c42\u5440\uff01</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff0c\u6f14\u793a\u4e86\u5982\u4f55\u8ba9\u4e00\u4e2a\u5c0f\u7403\u540c\u65f6\u5728\u6c34\u5e73\u548c\u7ad6\u76f4\u65b9\u5411\u4e0a\u8fd0\u52a8\uff1a</p> <pre><code>import math\n\nimport maliang\nimport maliang.animation as animation\n\nroot = maliang.Tk()\ncv = maliang.Canvas()\ncv.place(width=1280, height=720)\n\nball = cv.create_oval(640-40, 360-40, 640+40, 360+40, fill=\"royalblue\", outline=\"\")\n\ncontroller = animation.generate(math.sin, 0, math.tau, map_y=False)\n\nx = animation.MoveItem(cv, ball, (500, 0), 2000, fps=60, repeat=-1, controller=controller)\ny = animation.MoveItem(cv, ball, (0, 300), 1000, fps=60, repeat=-1, controller=controller)\n\nx.start()\ny.start()\n\nroot.mainloop()\n</code></pre> <p>\u8fd9\u662f\u5b83\u7684\u6548\u679c\uff1a</p> \u56fe4 \u591a\u4e2a\u52a8\u753b <p>\u662f\u4e0d\u662f\u975e\u5e38\u6709\u8da3\uff1f\u5f53\u7136\uff0c\u8fd9\u53ea\u662f\u4f7f\u7528\u4e86\u4e24\u4e2a\u63a7\u5236\u51fd\u6570\uff0c\u5f53\u4f60\u5b66\u4e60\u4e86 <code>maliang</code> \u7684 3D \u6269\u5c55\u5305\uff0c\u4f7f\u7528\u4e09\u4e2a\u63a7\u5236\u51fd\u6570\u6765\u63a7\u5236 3D \u5bf9\u8c61\u7684\u8fd0\u52a8\u65f6\uff0c\u5c06\u663e\u5f97\u66f4\u52a0\u6709\u8da3\u4e86\uff01</p>","tags":["\u52a8\u753b","\u63a7\u5236\u51fd\u6570","\u81ea\u5b9a\u4e49"]},{"location":"tutorials/chapter_04/3/","title":"\u00a74.3 \u81ea\u5b9a\u4e49\u52a8\u753b","text":"<p> \u5b57\u6570 761 \u4e2a \u00a0 \u4ee3\u7801 63 \u884c \u00a0 \u9605\u8bfb\u65f6\u95f4 3 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p>","tags":["\u52a8\u753b","\u81ea\u5b9a\u4e49"]},{"location":"tutorials/chapter_04/3/#\u4e00\u52a8\u753b\u57fa\u7c7b","title":"\u4e00\u3001\u52a8\u753b\u57fa\u7c7b","text":"","tags":["\u52a8\u753b","\u81ea\u5b9a\u4e49"]},{"location":"tutorials/chapter_04/3/#11-\u53c2\u6570\u53ca\u65b9\u6cd5","title":"1.1 \u53c2\u6570\u53ca\u65b9\u6cd5","text":"<p>\u5173\u4e8e\u52a8\u753b\u57fa\u7c7b <code>Animation</code>\uff0c\u5728 \u00a74.1 \u57fa\u7840\u52a8\u753b \u4e2d\u63d0\u8fc7\u4e00\u5634\uff0c\u5b9e\u73b0\u52a8\u753b\u7684\u6838\u5fc3\u5c31\u5728\u4e8e\u8fd9\u4e2a\u7c7b\u3002\u8fd9\u91cc\u8bf4\u660e\u4e00\u4e0b\u5b83\u7684\u76f8\u5173\u53c2\u6570\u3002</p> <ul> <li><code>ms</code>: \u52a8\u753b\u65f6\u957f\uff0c\u5355\u4f4d\u662f\u6beb\u79d2</li> <li><code>callback</code>: \u56de\u8c03\u51fd\u6570\uff0c\u6bcf\u5e27\u90fd\u5c06\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\uff0c\u4f20\u5165\u5f53\u524d\u65f6\u95f4\u5360\u6bd4</li> <li><code>controller</code>: \u63a7\u5236\u51fd\u6570</li> <li><code>end</code>: \u7ec8\u6b62\u51fd\u6570\uff0c\u52a8\u753b\u4e00\u8f6e\u7ed3\u675f\u65f6\u4f1a\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570</li> <li><code>repeat</code>: \u91cd\u590d\u6b21\u6570\uff0c\u5c0f\u4e8e\u96f6\u8868\u793a\u65e0\u9650\u6b21\uff0c\u9ed8\u8ba4\u4e3a <code>0</code></li> <li><code>fps</code>: \u52a8\u753b\u5e27\u7387\uff0c\u9ed8\u8ba4\u4e3a <code>30</code></li> <li><code>derivation</code>: \u8868\u793a\u662f\u5426\u5bf9\u63a7\u5236\u51fd\u6570\u6c42\u5bfc\uff0c\u9ed8\u8ba4\u4e3a <code>False</code></li> </ul> <p>\u6b64\u5916\uff0c\u52a8\u753b\u57fa\u7c7b\u8fd8\u6709\u4e24\u4e2a\u65b9\u6cd5\uff0c\u5373 <code>start</code> \u548c <code>stop</code>\u3002\u4f46\u662f\u6ce8\u610f\uff0c\u8c03\u7528 <code>stop</code> \u4e4b\u540e\u8fd9\u4e2a\u52a8\u753b\u5c31\u88ab\u5f7b\u5e95\u7ec8\u6b62\u4e86\uff0c\u5e76\u4e0d\u662f\u6682\u505c\uff0c\u5982\u679c\u91cd\u65b0\u8c03\u7528 <code>start</code> \u4e5f\u53ea\u662f\u4ece\u5934\u5f00\u59cb\u8fd0\u884c\u52a8\u753b\u3002</p> <p>\u4e0b\u9762\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff0c\u5c55\u793a\u4e86\u76f8\u5173\u53c2\u6570\u7684\u7528\u6cd5\uff1a</p> <pre><code>import time\n\nimport maliang\nimport maliang.animation as animation\n\nroot = maliang.Tk()\n\ncallback = lambda x: print(x, time.time() - t)\nend = lambda: print(\"Done!\")\n\nan = animation.Animation(1000, callback, controller=animation.linear, end=end)\n\nt = time.time()\nan.start()\nroot.mainloop()\n</code></pre> <p>\u8fd0\u884c\u4e0a\u8ff0\u793a\u4f8b\uff0c\u53ef\u4ee5\u770b\u89c1\u6bcf\u5e27\u90fd\u8f93\u51fa\u4e86\u5f53\u524d\u65f6\u95f4\u5360\u6bd4\u548c\u5b9e\u9645\u65f6\u957f\uff0c\u7ed3\u675f\u65f6\u8c03\u7528 <code>end</code> \u51fd\u6570\u3002</p> <p>\u5173\u4e8e\u6700\u540e\u4e00\u4e2a\u53c2\u6570\uff0c\u7a0d\u5fae\u6709\u4e9b\u590d\u6742\uff0c\u5c06\u5728\u4e0b\u4e00\u90e8\u5206\u8fdb\u884c\u8bf4\u660e\u3002</p>","tags":["\u52a8\u753b","\u81ea\u5b9a\u4e49"]},{"location":"tutorials/chapter_04/3/#12-\u63a7\u5236\u52a8\u753b\u7684\u901f\u5ea6","title":"1.2 \u63a7\u5236\u52a8\u753b\u7684\u901f\u5ea6","text":"<p>\u4f17\u6240\u5468\u77e5\uff0c\u4f4d\u79fb\u51fd\u6570\u6c42\u5bfc\u4e4b\u540e\u5c31\u662f\u901f\u5ea6\u51fd\u6570\uff0c\u6b63\u5982\u524d\u9762\u7ae0\u8282 \u00a74.2 \u63a7\u5236\u51fd\u6570\uff0c\u6709\u65f6\u5019\u4f4d\u7f6e\u5e76\u4e0d\u597d\u76f4\u63a5\u4fee\u6539\uff0c\u4f46\u901f\u5ea6\u6bd4\u8f83\u597d\u63a7\u5236\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981\u5c06 <code>derivation</code> \u8bbe\u4e3a <code>True</code> \u4e86\u3002\u6b64\u65f6\u6bcf\u5e27\u4f20\u7ed9\u56de\u8c03\u51fd\u6570\u7684\u53c2\u6570\u5c06\u4e0d\u5728\u6bcf\u5e27\u7684\u65f6\u95f4\u5360\u6bd4\u4e86\uff0c\u800c\u662f\u8fd9\u4e00\u5e27\u7684\u65f6\u95f4\u5360\u6bd4\uff0c\u6240\u6709\u5e27\u7684\u603b\u548c\u4e3a 1(1)\uff0c\u4e5f\u5c31\u662f\u51fd\u6570\u56fe\u50cf\u4e0e\u6a2a\u7eb5\u8f74\u622a\u51fa\u6765\u7684\u9762\u79ef\u4e3a 1\u3002</p> <ol> <li>\u6240\u4ee5\u5e76\u4e0d\u662f\u76f4\u63a5\u7684\u6c42\u5bfc\uff0c\u800c\u662f\u6c42\u5bfc\u4e4b\u540e\u518d\u9664\u4ee5\u603b\u5e27\u6570</li> </ol> <p>\u90a3\u8fd9\u6709\u4ec0\u4e48\u7528\u5462\uff1f\u5f53\u4f60\u7684\u56de\u8c03\u51fd\u6570\u5e76\u975e\u76f4\u63a5\u64cd\u63a7\u4f4d\u7f6e\u65f6\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528\u8fd9\u4e2a\uff0c\u5178\u578b\u7684\u5c31\u662f <code>Canvas</code> \u7684 <code>move</code> \u65b9\u6cd5\u548c <code>moveto</code> \u65b9\u6cd5\u3002<code>move</code> \u4f7f\u7528\u7684\u662f\u76f8\u5bf9\u5750\u6807\uff0c\u5bf9\u4e8e\u5355\u5e27\u800c\u8a00\u76f8\u5f53\u4e8e\u901f\u5ea6\uff0c<code>moveto</code> \u4f7f\u7528\u7684\u662f\u7edd\u5bf9\u5750\u6807\uff0c\u5bf9\u4e8e\u5355\u5e27\u800c\u8a00\u5c31\u662f\u4f4d\u7f6e\u3002\u5f53\u6211\u4eec\u65e0\u6cd5\u4f7f\u7528 <code>moveto</code> \u65b9\u6cd5\u7684\u65f6\u5019\uff0c<code>move</code> \u65b9\u6cd5\u914d\u5408 <code>derivation</code> \u53c2\u6570\u5c31\u8d77\u4f5c\u7528\u4e86\uff08\u5982 <code>MoveWidget</code>\uff09\u3002</p>","tags":["\u52a8\u753b","\u81ea\u5b9a\u4e49"]},{"location":"tutorials/chapter_04/3/#\u4e8c\u81ea\u5b9a\u4e49\u52a8\u753b\u7c7b","title":"\u4e8c\u3001\u81ea\u5b9a\u4e49\u52a8\u753b\u7c7b","text":"<p>\u6240\u8c13\u81ea\u5b9a\u4e49\u52a8\u753b\u7c7b\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u901a\u8fc7\u7ee7\u627f\u52a8\u753b\u57fa\u7c7b\u5e76\u5177\u5316\u4e3a\u81ea\u5df1\u9700\u8981\u7684\u7c7b\u3002\u53ef\u4ee5\u628a\u5185\u7f6e\u7684\u90a3\u4e9b\u57fa\u7840\u52a8\u753b\u7c7b\u4f5c\u4e3a\u53c2\u8003\uff0c\u5b9e\u73b0\u5c5e\u4e8e\u81ea\u5df1\u9700\u8981\u7684\u52a8\u753b\u7c7b\u3002\u5f53\u7136\uff0c\u82e5\u662f\u9700\u6c42\u6bd4\u8f83\u7b80\u5355\uff0c\u90a3\u8fd8\u662f\u76f4\u63a5\u8c03\u7528\u52a8\u753b\u57fa\u7c7b\u5c31\u597d\u3002</p> <p>\u4e0b\u9762\u770b\u4e00\u4e0b\u5185\u7f6e\u57fa\u7840\u52a8\u753b\u7c7b <code>MoveWidget</code> \u7684\u6e90\u4ee3\u7801\uff1a</p> <pre><code>class MoveWidget(Animation):\n    \"\"\"Animation of moving `virtual.Widget`.\"\"\"\n\n    def __init__(\n        self,\n        widget: virtual.Widget,\n        offset: tuple[float, float],\n        duration: int,\n        *,\n        controller: collections.abc.Callable[[float], float] = controllers.linear,\n        end: collections.abc.Callable[[], typing.Any] | None = None,\n        fps: int = 30,\n        repeat: int = 0,\n        repeat_delay: int = 0,\n    ) -&gt; None:\n        \"\"\"\n        * `widget`: the `virtual.Widget` to be moved\n        * `offset`: relative offset of the coordinates\n        * `duration`: duration of the animation, in milliseconds\n        * `controller`: a function that controls the animation process\n        * `end`: end function, which is called once at the end of the animation\n        * `fps`: frame rate of the animation\n        * `repeat`: number of repetitions of the animation\n        * `repeat_delay`: length of the delay before the animation repeats\n        \"\"\"\n        Animation.__init__(\n            self, duration, lambda p: widget.move(offset[0]*p, offset[1]*p),\n            controller=controller, end=end, fps=fps, repeat=repeat,\n            repeat_delay=repeat_delay, derivation=True,\n        )\n</code></pre> <p>\u770b\u8d77\u6765\u5f88\u591a\uff0c\u5b9e\u9645\u6838\u5fc3\u5185\u5bb9\u5c31\u4e00\u70b9\u70b9\u3002\u5f53\u7136\uff0c\u6211\u4eec\u81ea\u5df1\u5b9a\u4e49\u5c5e\u4e8e\u81ea\u5df1\u7684\u52a8\u753b\u7c7b\u65f6\u5e76\u4e0d\u9700\u8981\u50cf\u4e0a\u9762\u8fd9\u6837\u5199\u5f97\u5982\u6b64\u7e41\u7410\u3002</p> <p>\u6bd4\u5982\uff0c\u6211\u4eec\u5199\u4e00\u4e2a\u8fd9\u6837\u7684\u52a8\u753b\u7c7b\uff1a</p> <pre><code>import math\n\nimport maliang\nimport maliang.animation as animation\n\n\nclass MyAnimation(animation.Animation):\n    \"\"\"My customized animation class\"\"\"\n\n    def __init__(self, ms: int, window: maliang.Tk, *args, **kwargs) -&gt; None:\n        \"\"\"Let the window gradually change from transparent to clear\"\"\"\n        controller = animation.generate(math.sin, 0, math.pi, map_y=False)\n        super().__init__(ms, window.alpha, controller=controller, *args, **kwargs)\n\n\nroot = maliang.Tk()\nMyAnimation(2000, root, repeat=-1, fps=60).start(delay=1000)\nroot.mainloop()\n</code></pre> <p>\u8fd0\u884c\u4e0a\u8ff0\u4ee3\u7801\uff0c\u4f60\u7a97\u53e3\u4e0d\u505c\u7684\u4ece\u900f\u660e\u5230\u6e05\u6670\uff0c\u518d\u6e05\u6670\u5230\u900f\u660e\u5730\u53d8\u5316\u3002</p>","tags":["\u52a8\u753b","\u81ea\u5b9a\u4e49"]},{"location":"tutorials/chapter_05/","title":"\u7b2c\u4e94\u7ae0\uff1a\u989c\u8272","text":"<p> \u5b57\u6570 34 \u4e2a \u00a0 \u56fe\u7247 2 \u5f20 \u00a0 \u9605\u8bfb\u65f6\u95f4\u4e0d\u5230 1 \u5206\u949f \u00a0 \u8bbf\u95ee\u91cf </p> <p> </p> <p>\u7ae0\u8282\u6982\u8ff0</p> <p>\u8fd9\u4e00\u7ae0\u4f1a\u8bb2\u89e3\u5982\u4f55\u7528 <code>maliang</code> \u6784\u5efa\u51fa\u7eda\u4e3d\u7684\u989c\u8272\u6548\u679c\u3002</p>"},{"location":"tutorials/chapter_05/#\u672c\u7ae0\u5185\u5bb9","title":"\u672c\u7ae0\u5185\u5bb9","text":""}]}